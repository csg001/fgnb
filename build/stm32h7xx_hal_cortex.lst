ARM GAS  /tmp/ccmuMs8M.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_cortex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.__NVIC_SetPriorityGrouping,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	__NVIC_SetPriorityGrouping:
  25              	.LFB102:
  26              		.file 1 "./Drivers/CMSIS/Include/core_cm7.h"
   1:./Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:./Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:./Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.1
   5:./Drivers/CMSIS/Include/core_cm7.h ****  * @date     25. November 2016
   6:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/core_cm7.h **** /*
   8:./Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:./Drivers/CMSIS/Include/core_cm7.h ****  *
  10:./Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Drivers/CMSIS/Include/core_cm7.h ****  *
  12:./Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:./Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:./Drivers/CMSIS/Include/core_cm7.h ****  *
  16:./Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Drivers/CMSIS/Include/core_cm7.h ****  *
  18:./Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:./Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:./Drivers/CMSIS/Include/core_cm7.h ****  */
  24:./Drivers/CMSIS/Include/core_cm7.h **** 
  25:./Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:./Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  27:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  28:./Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:./Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:./Drivers/CMSIS/Include/core_cm7.h **** 
  31:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
ARM GAS  /tmp/ccmuMs8M.s 			page 2


  33:./Drivers/CMSIS/Include/core_cm7.h **** 
  34:./Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:./Drivers/CMSIS/Include/core_cm7.h **** 
  36:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:./Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:./Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:./Drivers/CMSIS/Include/core_cm7.h **** 
  40:./Drivers/CMSIS/Include/core_cm7.h **** /**
  41:./Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:./Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:./Drivers/CMSIS/Include/core_cm7.h **** 
  44:./Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:./Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:./Drivers/CMSIS/Include/core_cm7.h **** 
  47:./Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:./Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:./Drivers/CMSIS/Include/core_cm7.h **** 
  50:./Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:./Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:./Drivers/CMSIS/Include/core_cm7.h ****  */
  53:./Drivers/CMSIS/Include/core_cm7.h **** 
  54:./Drivers/CMSIS/Include/core_cm7.h **** 
  55:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:./Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:./Drivers/CMSIS/Include/core_cm7.h **** /**
  59:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:./Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:./Drivers/CMSIS/Include/core_cm7.h ****  */
  62:./Drivers/CMSIS/Include/core_cm7.h **** 
  63:./Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  64:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  ( 5U)                                      /*!< [31:16] CMSIS HAL
  65:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( 0U)                                      /*!< [15:0]  CMSIS HAL
  66:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  67:./Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< CMSIS HAL version
  68:./Drivers/CMSIS/Include/core_cm7.h **** 
  69:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  70:./Drivers/CMSIS/Include/core_cm7.h **** 
  71:./Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  72:./Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  73:./Drivers/CMSIS/Include/core_cm7.h **** */
  74:./Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  75:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  76:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  77:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  78:./Drivers/CMSIS/Include/core_cm7.h ****     #else
  79:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  80:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  81:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
  82:./Drivers/CMSIS/Include/core_cm7.h ****   #else
  83:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  84:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
  85:./Drivers/CMSIS/Include/core_cm7.h **** 
  86:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  87:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  88:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  89:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
ARM GAS  /tmp/ccmuMs8M.s 			page 3


  90:./Drivers/CMSIS/Include/core_cm7.h ****     #else
  91:./Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  92:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  93:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
  94:./Drivers/CMSIS/Include/core_cm7.h ****   #else
  95:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  96:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
  97:./Drivers/CMSIS/Include/core_cm7.h **** 
  98:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  99:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 100:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 101:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 102:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 103:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 104:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 105:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 106:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 107:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 108:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 109:./Drivers/CMSIS/Include/core_cm7.h **** 
 110:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 111:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 112:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 113:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 114:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 115:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 116:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 117:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 118:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 119:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 120:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 121:./Drivers/CMSIS/Include/core_cm7.h **** 
 122:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 123:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 124:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 125:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 126:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 127:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 129:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 130:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 131:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 132:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 133:./Drivers/CMSIS/Include/core_cm7.h **** 
 134:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 135:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 136:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 137:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 138:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 139:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 140:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 141:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 142:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 143:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 144:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 145:./Drivers/CMSIS/Include/core_cm7.h **** 
 146:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
ARM GAS  /tmp/ccmuMs8M.s 			page 4


 147:./Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 148:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 149:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 150:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 151:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 152:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 153:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 154:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 155:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 156:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 157:./Drivers/CMSIS/Include/core_cm7.h **** 
 158:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:./Drivers/CMSIS/Include/core_cm7.h **** 
 160:./Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 161:./Drivers/CMSIS/Include/core_cm7.h **** 
 162:./Drivers/CMSIS/Include/core_cm7.h **** 
 163:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 164:./Drivers/CMSIS/Include/core_cm7.h **** }
 165:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 166:./Drivers/CMSIS/Include/core_cm7.h **** 
 167:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 168:./Drivers/CMSIS/Include/core_cm7.h **** 
 169:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 170:./Drivers/CMSIS/Include/core_cm7.h **** 
 171:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 172:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 173:./Drivers/CMSIS/Include/core_cm7.h **** 
 174:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 175:./Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 176:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 177:./Drivers/CMSIS/Include/core_cm7.h **** 
 178:./Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 179:./Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 180:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 181:./Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 182:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 183:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 184:./Drivers/CMSIS/Include/core_cm7.h **** 
 185:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 186:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 187:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 188:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 189:./Drivers/CMSIS/Include/core_cm7.h **** 
 190:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 191:./Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 192:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 193:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 194:./Drivers/CMSIS/Include/core_cm7.h **** 
 195:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 196:./Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 197:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 198:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 199:./Drivers/CMSIS/Include/core_cm7.h **** 
 200:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 201:./Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 202:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 203:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccmuMs8M.s 			page 5


 204:./Drivers/CMSIS/Include/core_cm7.h **** 
 205:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 206:./Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 207:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 208:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 209:./Drivers/CMSIS/Include/core_cm7.h **** 
 210:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 211:./Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 212:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 213:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 214:./Drivers/CMSIS/Include/core_cm7.h **** 
 215:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 216:./Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 217:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 218:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 219:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 220:./Drivers/CMSIS/Include/core_cm7.h **** 
 221:./Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 222:./Drivers/CMSIS/Include/core_cm7.h **** /**
 223:./Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 224:./Drivers/CMSIS/Include/core_cm7.h **** 
 225:./Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 226:./Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 227:./Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 228:./Drivers/CMSIS/Include/core_cm7.h **** */
 229:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 230:./Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 231:./Drivers/CMSIS/Include/core_cm7.h **** #else
 232:./Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 233:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 234:./Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 235:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 236:./Drivers/CMSIS/Include/core_cm7.h **** 
 237:./Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 238:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 239:./Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 240:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 241:./Drivers/CMSIS/Include/core_cm7.h **** 
 242:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 243:./Drivers/CMSIS/Include/core_cm7.h **** 
 244:./Drivers/CMSIS/Include/core_cm7.h **** 
 245:./Drivers/CMSIS/Include/core_cm7.h **** 
 246:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 247:./Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 248:./Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 249:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 250:./Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 251:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 252:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 253:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 254:./Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 255:./Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 256:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 257:./Drivers/CMSIS/Include/core_cm7.h **** /**
 258:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 259:./Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 260:./Drivers/CMSIS/Include/core_cm7.h **** */
ARM GAS  /tmp/ccmuMs8M.s 			page 6


 261:./Drivers/CMSIS/Include/core_cm7.h **** 
 262:./Drivers/CMSIS/Include/core_cm7.h **** /**
 263:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 264:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 265:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 266:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 267:./Drivers/CMSIS/Include/core_cm7.h ****  */
 268:./Drivers/CMSIS/Include/core_cm7.h **** 
 269:./Drivers/CMSIS/Include/core_cm7.h **** /**
 270:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 271:./Drivers/CMSIS/Include/core_cm7.h ****  */
 272:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 273:./Drivers/CMSIS/Include/core_cm7.h **** {
 274:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 275:./Drivers/CMSIS/Include/core_cm7.h ****   {
 276:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 277:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 278:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 279:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 280:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 281:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 282:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 283:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 284:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 285:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 286:./Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 287:./Drivers/CMSIS/Include/core_cm7.h **** 
 288:./Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 290:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 291:./Drivers/CMSIS/Include/core_cm7.h **** 
 292:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 293:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 294:./Drivers/CMSIS/Include/core_cm7.h **** 
 295:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 296:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 297:./Drivers/CMSIS/Include/core_cm7.h **** 
 298:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 299:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 300:./Drivers/CMSIS/Include/core_cm7.h **** 
 301:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 302:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 303:./Drivers/CMSIS/Include/core_cm7.h **** 
 304:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 305:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 306:./Drivers/CMSIS/Include/core_cm7.h **** 
 307:./Drivers/CMSIS/Include/core_cm7.h **** 
 308:./Drivers/CMSIS/Include/core_cm7.h **** /**
 309:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 310:./Drivers/CMSIS/Include/core_cm7.h ****  */
 311:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 312:./Drivers/CMSIS/Include/core_cm7.h **** {
 313:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 314:./Drivers/CMSIS/Include/core_cm7.h ****   {
 315:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 316:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 317:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/ccmuMs8M.s 			page 7


 318:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 319:./Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 320:./Drivers/CMSIS/Include/core_cm7.h **** 
 321:./Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 322:./Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 323:./Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 324:./Drivers/CMSIS/Include/core_cm7.h **** 
 325:./Drivers/CMSIS/Include/core_cm7.h **** 
 326:./Drivers/CMSIS/Include/core_cm7.h **** /**
 327:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 328:./Drivers/CMSIS/Include/core_cm7.h ****  */
 329:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 330:./Drivers/CMSIS/Include/core_cm7.h **** {
 331:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 332:./Drivers/CMSIS/Include/core_cm7.h ****   {
 333:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 334:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 335:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 336:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 337:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 338:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 339:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 340:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 341:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 342:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 343:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 344:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 345:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 346:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 347:./Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 348:./Drivers/CMSIS/Include/core_cm7.h **** 
 349:./Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 350:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 351:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 352:./Drivers/CMSIS/Include/core_cm7.h **** 
 353:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 354:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 355:./Drivers/CMSIS/Include/core_cm7.h **** 
 356:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 357:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 358:./Drivers/CMSIS/Include/core_cm7.h **** 
 359:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 360:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 361:./Drivers/CMSIS/Include/core_cm7.h **** 
 362:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 363:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 364:./Drivers/CMSIS/Include/core_cm7.h **** 
 365:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 366:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 367:./Drivers/CMSIS/Include/core_cm7.h **** 
 368:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 369:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 370:./Drivers/CMSIS/Include/core_cm7.h **** 
 371:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 372:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 373:./Drivers/CMSIS/Include/core_cm7.h **** 
 374:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
ARM GAS  /tmp/ccmuMs8M.s 			page 8


 375:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 376:./Drivers/CMSIS/Include/core_cm7.h **** 
 377:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 378:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:./Drivers/CMSIS/Include/core_cm7.h **** 
 380:./Drivers/CMSIS/Include/core_cm7.h **** 
 381:./Drivers/CMSIS/Include/core_cm7.h **** /**
 382:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 383:./Drivers/CMSIS/Include/core_cm7.h ****  */
 384:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 385:./Drivers/CMSIS/Include/core_cm7.h **** {
 386:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 387:./Drivers/CMSIS/Include/core_cm7.h ****   {
 388:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 389:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 390:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 391:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 392:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 393:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 394:./Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 395:./Drivers/CMSIS/Include/core_cm7.h **** 
 396:./Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 397:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 398:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 399:./Drivers/CMSIS/Include/core_cm7.h **** 
 400:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 401:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 402:./Drivers/CMSIS/Include/core_cm7.h **** 
 403:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 404:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 405:./Drivers/CMSIS/Include/core_cm7.h **** 
 406:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 407:./Drivers/CMSIS/Include/core_cm7.h **** 
 408:./Drivers/CMSIS/Include/core_cm7.h **** 
 409:./Drivers/CMSIS/Include/core_cm7.h **** /**
 410:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 411:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 412:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 413:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 414:./Drivers/CMSIS/Include/core_cm7.h ****  */
 415:./Drivers/CMSIS/Include/core_cm7.h **** 
 416:./Drivers/CMSIS/Include/core_cm7.h **** /**
 417:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 418:./Drivers/CMSIS/Include/core_cm7.h ****  */
 419:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 420:./Drivers/CMSIS/Include/core_cm7.h **** {
 421:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 422:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 423:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 424:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 425:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 426:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 427:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 428:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 429:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 430:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 431:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
ARM GAS  /tmp/ccmuMs8M.s 			page 9


 432:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 433:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 434:./Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 435:./Drivers/CMSIS/Include/core_cm7.h **** 
 436:./Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 437:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 438:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 439:./Drivers/CMSIS/Include/core_cm7.h **** 
 440:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 441:./Drivers/CMSIS/Include/core_cm7.h **** 
 442:./Drivers/CMSIS/Include/core_cm7.h **** 
 443:./Drivers/CMSIS/Include/core_cm7.h **** /**
 444:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 445:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 446:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 447:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 448:./Drivers/CMSIS/Include/core_cm7.h ****  */
 449:./Drivers/CMSIS/Include/core_cm7.h **** 
 450:./Drivers/CMSIS/Include/core_cm7.h **** /**
 451:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 452:./Drivers/CMSIS/Include/core_cm7.h ****  */
 453:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 454:./Drivers/CMSIS/Include/core_cm7.h **** {
 455:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 456:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 457:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 458:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 459:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 460:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 461:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 462:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 463:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 464:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 465:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 466:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 467:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 468:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 469:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 470:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 471:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 472:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 473:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 474:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 475:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 476:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 477:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 478:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 479:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 481:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 482:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 483:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 484:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 485:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 486:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 487:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 488:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
ARM GAS  /tmp/ccmuMs8M.s 			page 10


 489:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 490:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 491:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 492:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 493:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 494:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 495:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 496:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 497:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 498:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 499:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 500:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 501:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 502:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 503:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 504:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 505:./Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 506:./Drivers/CMSIS/Include/core_cm7.h **** 
 507:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 508:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 509:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 510:./Drivers/CMSIS/Include/core_cm7.h **** 
 511:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 512:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 513:./Drivers/CMSIS/Include/core_cm7.h **** 
 514:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 515:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 516:./Drivers/CMSIS/Include/core_cm7.h **** 
 517:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 518:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 519:./Drivers/CMSIS/Include/core_cm7.h **** 
 520:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 521:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 522:./Drivers/CMSIS/Include/core_cm7.h **** 
 523:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 524:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 525:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 526:./Drivers/CMSIS/Include/core_cm7.h **** 
 527:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 528:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 529:./Drivers/CMSIS/Include/core_cm7.h **** 
 530:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 531:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 532:./Drivers/CMSIS/Include/core_cm7.h **** 
 533:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 534:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 535:./Drivers/CMSIS/Include/core_cm7.h **** 
 536:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 537:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 538:./Drivers/CMSIS/Include/core_cm7.h **** 
 539:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 540:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 541:./Drivers/CMSIS/Include/core_cm7.h **** 
 542:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 543:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 544:./Drivers/CMSIS/Include/core_cm7.h **** 
 545:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
ARM GAS  /tmp/ccmuMs8M.s 			page 11


 546:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 547:./Drivers/CMSIS/Include/core_cm7.h **** 
 548:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 549:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 550:./Drivers/CMSIS/Include/core_cm7.h **** 
 551:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 552:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 553:./Drivers/CMSIS/Include/core_cm7.h **** 
 554:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 555:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 556:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 557:./Drivers/CMSIS/Include/core_cm7.h **** 
 558:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 559:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 560:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 561:./Drivers/CMSIS/Include/core_cm7.h **** 
 562:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 563:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 564:./Drivers/CMSIS/Include/core_cm7.h **** 
 565:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 566:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 567:./Drivers/CMSIS/Include/core_cm7.h **** 
 568:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 569:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 570:./Drivers/CMSIS/Include/core_cm7.h **** 
 571:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 572:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 573:./Drivers/CMSIS/Include/core_cm7.h **** 
 574:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 575:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 576:./Drivers/CMSIS/Include/core_cm7.h **** 
 577:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 578:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 579:./Drivers/CMSIS/Include/core_cm7.h **** 
 580:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 581:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 582:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 583:./Drivers/CMSIS/Include/core_cm7.h **** 
 584:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 585:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 586:./Drivers/CMSIS/Include/core_cm7.h **** 
 587:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 588:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 589:./Drivers/CMSIS/Include/core_cm7.h **** 
 590:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 591:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 592:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 593:./Drivers/CMSIS/Include/core_cm7.h **** 
 594:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 595:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 596:./Drivers/CMSIS/Include/core_cm7.h **** 
 597:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 598:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 599:./Drivers/CMSIS/Include/core_cm7.h **** 
 600:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 601:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 602:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 12


 603:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 604:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 605:./Drivers/CMSIS/Include/core_cm7.h **** 
 606:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 607:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 608:./Drivers/CMSIS/Include/core_cm7.h **** 
 609:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 610:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 611:./Drivers/CMSIS/Include/core_cm7.h **** 
 612:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 613:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 614:./Drivers/CMSIS/Include/core_cm7.h **** 
 615:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 616:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 617:./Drivers/CMSIS/Include/core_cm7.h **** 
 618:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 619:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 620:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 621:./Drivers/CMSIS/Include/core_cm7.h **** 
 622:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 623:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 624:./Drivers/CMSIS/Include/core_cm7.h **** 
 625:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 626:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 627:./Drivers/CMSIS/Include/core_cm7.h **** 
 628:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 629:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 630:./Drivers/CMSIS/Include/core_cm7.h **** 
 631:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 632:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 633:./Drivers/CMSIS/Include/core_cm7.h **** 
 634:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 635:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 636:./Drivers/CMSIS/Include/core_cm7.h **** 
 637:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 638:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 639:./Drivers/CMSIS/Include/core_cm7.h **** 
 640:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 641:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 642:./Drivers/CMSIS/Include/core_cm7.h **** 
 643:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 644:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 645:./Drivers/CMSIS/Include/core_cm7.h **** 
 646:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 647:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 648:./Drivers/CMSIS/Include/core_cm7.h **** 
 649:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 650:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 651:./Drivers/CMSIS/Include/core_cm7.h **** 
 652:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 653:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 654:./Drivers/CMSIS/Include/core_cm7.h **** 
 655:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 656:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 657:./Drivers/CMSIS/Include/core_cm7.h **** 
 658:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 659:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
ARM GAS  /tmp/ccmuMs8M.s 			page 13


 660:./Drivers/CMSIS/Include/core_cm7.h **** 
 661:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 662:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 663:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 664:./Drivers/CMSIS/Include/core_cm7.h **** 
 665:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 666:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 667:./Drivers/CMSIS/Include/core_cm7.h **** 
 668:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 669:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 670:./Drivers/CMSIS/Include/core_cm7.h **** 
 671:./Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 672:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 673:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 674:./Drivers/CMSIS/Include/core_cm7.h **** 
 675:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 676:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 677:./Drivers/CMSIS/Include/core_cm7.h **** 
 678:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 679:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 680:./Drivers/CMSIS/Include/core_cm7.h **** 
 681:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 682:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 683:./Drivers/CMSIS/Include/core_cm7.h **** 
 684:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 685:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 686:./Drivers/CMSIS/Include/core_cm7.h **** 
 687:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 688:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 689:./Drivers/CMSIS/Include/core_cm7.h **** 
 690:./Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 691:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 692:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 693:./Drivers/CMSIS/Include/core_cm7.h **** 
 694:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 695:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 696:./Drivers/CMSIS/Include/core_cm7.h **** 
 697:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 698:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 699:./Drivers/CMSIS/Include/core_cm7.h **** 
 700:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 701:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 702:./Drivers/CMSIS/Include/core_cm7.h **** 
 703:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 704:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 705:./Drivers/CMSIS/Include/core_cm7.h **** 
 706:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 707:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 708:./Drivers/CMSIS/Include/core_cm7.h **** 
 709:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 710:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 711:./Drivers/CMSIS/Include/core_cm7.h **** 
 712:./Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 713:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 714:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 715:./Drivers/CMSIS/Include/core_cm7.h **** 
 716:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
ARM GAS  /tmp/ccmuMs8M.s 			page 14


 717:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 718:./Drivers/CMSIS/Include/core_cm7.h **** 
 719:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 720:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 721:./Drivers/CMSIS/Include/core_cm7.h **** 
 722:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 723:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 724:./Drivers/CMSIS/Include/core_cm7.h **** 
 725:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 726:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 727:./Drivers/CMSIS/Include/core_cm7.h **** 
 728:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 729:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 730:./Drivers/CMSIS/Include/core_cm7.h **** 
 731:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 732:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 733:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 734:./Drivers/CMSIS/Include/core_cm7.h **** 
 735:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 736:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 737:./Drivers/CMSIS/Include/core_cm7.h **** 
 738:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 739:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 740:./Drivers/CMSIS/Include/core_cm7.h **** 
 741:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 742:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 743:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 744:./Drivers/CMSIS/Include/core_cm7.h **** 
 745:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 746:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 747:./Drivers/CMSIS/Include/core_cm7.h **** 
 748:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 749:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 750:./Drivers/CMSIS/Include/core_cm7.h **** 
 751:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 752:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 753:./Drivers/CMSIS/Include/core_cm7.h **** 
 754:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 755:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 756:./Drivers/CMSIS/Include/core_cm7.h **** 
 757:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 758:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 759:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 760:./Drivers/CMSIS/Include/core_cm7.h **** 
 761:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 762:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 763:./Drivers/CMSIS/Include/core_cm7.h **** 
 764:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 765:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 766:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 767:./Drivers/CMSIS/Include/core_cm7.h **** 
 768:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 769:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 770:./Drivers/CMSIS/Include/core_cm7.h **** 
 771:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 772:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 773:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 15


 774:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 775:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 776:./Drivers/CMSIS/Include/core_cm7.h **** 
 777:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 778:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 779:./Drivers/CMSIS/Include/core_cm7.h **** 
 780:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 781:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 782:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 783:./Drivers/CMSIS/Include/core_cm7.h **** 
 784:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 785:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 786:./Drivers/CMSIS/Include/core_cm7.h **** 
 787:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 788:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 789:./Drivers/CMSIS/Include/core_cm7.h **** 
 790:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 791:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 792:./Drivers/CMSIS/Include/core_cm7.h **** 
 793:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 794:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 795:./Drivers/CMSIS/Include/core_cm7.h **** 
 796:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 797:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 798:./Drivers/CMSIS/Include/core_cm7.h **** 
 799:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 800:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 801:./Drivers/CMSIS/Include/core_cm7.h **** 
 802:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 803:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 804:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 805:./Drivers/CMSIS/Include/core_cm7.h **** 
 806:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 807:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 808:./Drivers/CMSIS/Include/core_cm7.h **** 
 809:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 810:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 811:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 812:./Drivers/CMSIS/Include/core_cm7.h **** 
 813:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 814:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 815:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 816:./Drivers/CMSIS/Include/core_cm7.h **** 
 817:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 818:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 819:./Drivers/CMSIS/Include/core_cm7.h **** 
 820:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 821:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 822:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 823:./Drivers/CMSIS/Include/core_cm7.h **** 
 824:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 825:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 826:./Drivers/CMSIS/Include/core_cm7.h **** 
 827:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 828:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 829:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 830:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 16


 831:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 832:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 833:./Drivers/CMSIS/Include/core_cm7.h **** 
 834:./Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 835:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 837:./Drivers/CMSIS/Include/core_cm7.h **** 
 838:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 840:./Drivers/CMSIS/Include/core_cm7.h **** 
 841:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 843:./Drivers/CMSIS/Include/core_cm7.h **** 
 844:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 846:./Drivers/CMSIS/Include/core_cm7.h **** 
 847:./Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 848:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 849:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 850:./Drivers/CMSIS/Include/core_cm7.h **** 
 851:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 852:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 853:./Drivers/CMSIS/Include/core_cm7.h **** 
 854:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 855:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 856:./Drivers/CMSIS/Include/core_cm7.h **** 
 857:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 858:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 859:./Drivers/CMSIS/Include/core_cm7.h **** 
 860:./Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 861:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 862:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 863:./Drivers/CMSIS/Include/core_cm7.h **** 
 864:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 865:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 866:./Drivers/CMSIS/Include/core_cm7.h **** 
 867:./Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 868:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 869:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 870:./Drivers/CMSIS/Include/core_cm7.h **** 
 871:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 872:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 873:./Drivers/CMSIS/Include/core_cm7.h **** 
 874:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 875:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 876:./Drivers/CMSIS/Include/core_cm7.h **** 
 877:./Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 878:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 879:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 880:./Drivers/CMSIS/Include/core_cm7.h **** 
 881:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 882:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 883:./Drivers/CMSIS/Include/core_cm7.h **** 
 884:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 885:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 886:./Drivers/CMSIS/Include/core_cm7.h **** 
 887:./Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
ARM GAS  /tmp/ccmuMs8M.s 			page 17


 888:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 889:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 890:./Drivers/CMSIS/Include/core_cm7.h **** 
 891:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 892:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 893:./Drivers/CMSIS/Include/core_cm7.h **** 
 894:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 895:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 896:./Drivers/CMSIS/Include/core_cm7.h **** 
 897:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 898:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 899:./Drivers/CMSIS/Include/core_cm7.h **** 
 900:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 901:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 902:./Drivers/CMSIS/Include/core_cm7.h **** 
 903:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 904:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 905:./Drivers/CMSIS/Include/core_cm7.h **** 
 906:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 907:./Drivers/CMSIS/Include/core_cm7.h **** 
 908:./Drivers/CMSIS/Include/core_cm7.h **** 
 909:./Drivers/CMSIS/Include/core_cm7.h **** /**
 910:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 911:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 912:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 913:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 914:./Drivers/CMSIS/Include/core_cm7.h ****  */
 915:./Drivers/CMSIS/Include/core_cm7.h **** 
 916:./Drivers/CMSIS/Include/core_cm7.h **** /**
 917:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 918:./Drivers/CMSIS/Include/core_cm7.h ****  */
 919:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 920:./Drivers/CMSIS/Include/core_cm7.h **** {
 921:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 922:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 923:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 924:./Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 925:./Drivers/CMSIS/Include/core_cm7.h **** 
 926:./Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 927:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 928:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 929:./Drivers/CMSIS/Include/core_cm7.h **** 
 930:./Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 931:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 932:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 933:./Drivers/CMSIS/Include/core_cm7.h **** 
 934:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 935:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 936:./Drivers/CMSIS/Include/core_cm7.h **** 
 937:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 938:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 939:./Drivers/CMSIS/Include/core_cm7.h **** 
 940:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 941:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 942:./Drivers/CMSIS/Include/core_cm7.h **** 
 943:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 944:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  /tmp/ccmuMs8M.s 			page 18


 945:./Drivers/CMSIS/Include/core_cm7.h **** 
 946:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 947:./Drivers/CMSIS/Include/core_cm7.h **** 
 948:./Drivers/CMSIS/Include/core_cm7.h **** 
 949:./Drivers/CMSIS/Include/core_cm7.h **** /**
 950:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 951:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 952:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 953:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 954:./Drivers/CMSIS/Include/core_cm7.h ****  */
 955:./Drivers/CMSIS/Include/core_cm7.h **** 
 956:./Drivers/CMSIS/Include/core_cm7.h **** /**
 957:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 958:./Drivers/CMSIS/Include/core_cm7.h ****  */
 959:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 960:./Drivers/CMSIS/Include/core_cm7.h **** {
 961:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 962:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 963:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 964:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 965:./Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 966:./Drivers/CMSIS/Include/core_cm7.h **** 
 967:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 968:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 969:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 970:./Drivers/CMSIS/Include/core_cm7.h **** 
 971:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 972:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 973:./Drivers/CMSIS/Include/core_cm7.h **** 
 974:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 975:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 976:./Drivers/CMSIS/Include/core_cm7.h **** 
 977:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 978:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 979:./Drivers/CMSIS/Include/core_cm7.h **** 
 980:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 981:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 982:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 983:./Drivers/CMSIS/Include/core_cm7.h **** 
 984:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 985:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 986:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 987:./Drivers/CMSIS/Include/core_cm7.h **** 
 988:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 989:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 990:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 991:./Drivers/CMSIS/Include/core_cm7.h **** 
 992:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 993:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 994:./Drivers/CMSIS/Include/core_cm7.h **** 
 995:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 996:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 997:./Drivers/CMSIS/Include/core_cm7.h **** 
 998:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 999:./Drivers/CMSIS/Include/core_cm7.h **** 
1000:./Drivers/CMSIS/Include/core_cm7.h **** 
1001:./Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccmuMs8M.s 			page 19


1002:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1003:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1004:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1005:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1006:./Drivers/CMSIS/Include/core_cm7.h ****  */
1007:./Drivers/CMSIS/Include/core_cm7.h **** 
1008:./Drivers/CMSIS/Include/core_cm7.h **** /**
1009:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1010:./Drivers/CMSIS/Include/core_cm7.h ****  */
1011:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1012:./Drivers/CMSIS/Include/core_cm7.h **** {
1013:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1014:./Drivers/CMSIS/Include/core_cm7.h ****   {
1015:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1016:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1017:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1018:./Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1019:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1020:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1021:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1022:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1023:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1024:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1025:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1026:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1027:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1028:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1029:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1030:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1031:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1032:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1033:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1034:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1035:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1036:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1037:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1038:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1039:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1040:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1041:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1042:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1043:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1044:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1045:./Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1046:./Drivers/CMSIS/Include/core_cm7.h **** 
1047:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1048:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1049:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1050:./Drivers/CMSIS/Include/core_cm7.h **** 
1051:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1052:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1053:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1054:./Drivers/CMSIS/Include/core_cm7.h **** 
1055:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1056:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1057:./Drivers/CMSIS/Include/core_cm7.h **** 
1058:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
ARM GAS  /tmp/ccmuMs8M.s 			page 20


1059:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1060:./Drivers/CMSIS/Include/core_cm7.h **** 
1061:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1062:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1063:./Drivers/CMSIS/Include/core_cm7.h **** 
1064:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1065:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1066:./Drivers/CMSIS/Include/core_cm7.h **** 
1067:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1068:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1069:./Drivers/CMSIS/Include/core_cm7.h **** 
1070:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1071:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1072:./Drivers/CMSIS/Include/core_cm7.h **** 
1073:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1074:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1075:./Drivers/CMSIS/Include/core_cm7.h **** 
1076:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1077:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1078:./Drivers/CMSIS/Include/core_cm7.h **** 
1079:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1080:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1081:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1082:./Drivers/CMSIS/Include/core_cm7.h **** 
1083:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1084:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1085:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1086:./Drivers/CMSIS/Include/core_cm7.h **** 
1087:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1088:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1089:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1090:./Drivers/CMSIS/Include/core_cm7.h **** 
1091:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1092:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1093:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1094:./Drivers/CMSIS/Include/core_cm7.h **** 
1095:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1096:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1097:./Drivers/CMSIS/Include/core_cm7.h **** 
1098:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1099:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1100:./Drivers/CMSIS/Include/core_cm7.h **** 
1101:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1102:./Drivers/CMSIS/Include/core_cm7.h **** 
1103:./Drivers/CMSIS/Include/core_cm7.h **** 
1104:./Drivers/CMSIS/Include/core_cm7.h **** /**
1105:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1106:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1107:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1108:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1109:./Drivers/CMSIS/Include/core_cm7.h ****  */
1110:./Drivers/CMSIS/Include/core_cm7.h **** 
1111:./Drivers/CMSIS/Include/core_cm7.h **** /**
1112:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1113:./Drivers/CMSIS/Include/core_cm7.h ****  */
1114:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1115:./Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccmuMs8M.s 			page 21


1116:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1117:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1118:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1119:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1120:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1121:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1122:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1123:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1124:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1125:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1126:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1127:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1128:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1129:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1130:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1131:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1132:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1133:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1134:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1135:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1136:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1137:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1138:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1139:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1140:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1141:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1142:./Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1143:./Drivers/CMSIS/Include/core_cm7.h **** 
1144:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1145:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1146:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1147:./Drivers/CMSIS/Include/core_cm7.h **** 
1148:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1149:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1150:./Drivers/CMSIS/Include/core_cm7.h **** 
1151:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1152:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1153:./Drivers/CMSIS/Include/core_cm7.h **** 
1154:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1155:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1156:./Drivers/CMSIS/Include/core_cm7.h **** 
1157:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1158:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1159:./Drivers/CMSIS/Include/core_cm7.h **** 
1160:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1161:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1162:./Drivers/CMSIS/Include/core_cm7.h **** 
1163:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1164:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1165:./Drivers/CMSIS/Include/core_cm7.h **** 
1166:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1167:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1168:./Drivers/CMSIS/Include/core_cm7.h **** 
1169:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1170:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1171:./Drivers/CMSIS/Include/core_cm7.h **** 
1172:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
ARM GAS  /tmp/ccmuMs8M.s 			page 22


1173:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1174:./Drivers/CMSIS/Include/core_cm7.h **** 
1175:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1176:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1177:./Drivers/CMSIS/Include/core_cm7.h **** 
1178:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1179:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1180:./Drivers/CMSIS/Include/core_cm7.h **** 
1181:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1182:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1183:./Drivers/CMSIS/Include/core_cm7.h **** 
1184:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1185:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1186:./Drivers/CMSIS/Include/core_cm7.h **** 
1187:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1188:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1189:./Drivers/CMSIS/Include/core_cm7.h **** 
1190:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1191:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1192:./Drivers/CMSIS/Include/core_cm7.h **** 
1193:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1194:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1195:./Drivers/CMSIS/Include/core_cm7.h **** 
1196:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1197:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1198:./Drivers/CMSIS/Include/core_cm7.h **** 
1199:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1200:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1201:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1202:./Drivers/CMSIS/Include/core_cm7.h **** 
1203:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1204:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1205:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1206:./Drivers/CMSIS/Include/core_cm7.h **** 
1207:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1208:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1209:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1210:./Drivers/CMSIS/Include/core_cm7.h **** 
1211:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1212:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1213:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1214:./Drivers/CMSIS/Include/core_cm7.h **** 
1215:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1216:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1217:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1218:./Drivers/CMSIS/Include/core_cm7.h **** 
1219:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1220:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1221:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1222:./Drivers/CMSIS/Include/core_cm7.h **** 
1223:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1224:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1225:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1226:./Drivers/CMSIS/Include/core_cm7.h **** 
1227:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1228:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1229:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 23


1230:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1231:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1232:./Drivers/CMSIS/Include/core_cm7.h **** 
1233:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1234:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1235:./Drivers/CMSIS/Include/core_cm7.h **** 
1236:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1237:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1238:./Drivers/CMSIS/Include/core_cm7.h **** 
1239:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1240:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1241:./Drivers/CMSIS/Include/core_cm7.h **** 
1242:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1243:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1244:./Drivers/CMSIS/Include/core_cm7.h **** 
1245:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1246:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1247:./Drivers/CMSIS/Include/core_cm7.h **** 
1248:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1249:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1250:./Drivers/CMSIS/Include/core_cm7.h **** 
1251:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1252:./Drivers/CMSIS/Include/core_cm7.h **** 
1253:./Drivers/CMSIS/Include/core_cm7.h **** 
1254:./Drivers/CMSIS/Include/core_cm7.h **** /**
1255:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1256:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1257:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1258:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1259:./Drivers/CMSIS/Include/core_cm7.h ****  */
1260:./Drivers/CMSIS/Include/core_cm7.h **** 
1261:./Drivers/CMSIS/Include/core_cm7.h **** /**
1262:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1263:./Drivers/CMSIS/Include/core_cm7.h ****  */
1264:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1265:./Drivers/CMSIS/Include/core_cm7.h **** {
1266:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1267:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1268:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1269:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1270:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1271:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1272:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1273:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1274:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1275:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1276:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1277:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1278:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1279:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1280:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1281:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1282:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1283:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1284:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1285:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1286:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
ARM GAS  /tmp/ccmuMs8M.s 			page 24


1287:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1288:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1289:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1290:./Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1291:./Drivers/CMSIS/Include/core_cm7.h **** 
1292:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1293:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1294:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1295:./Drivers/CMSIS/Include/core_cm7.h **** 
1296:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1297:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1298:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1299:./Drivers/CMSIS/Include/core_cm7.h **** 
1300:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1301:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1302:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1303:./Drivers/CMSIS/Include/core_cm7.h **** 
1304:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1305:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1306:./Drivers/CMSIS/Include/core_cm7.h **** 
1307:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1308:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1309:./Drivers/CMSIS/Include/core_cm7.h **** 
1310:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1311:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1312:./Drivers/CMSIS/Include/core_cm7.h **** 
1313:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1314:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1315:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1316:./Drivers/CMSIS/Include/core_cm7.h **** 
1317:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1318:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1319:./Drivers/CMSIS/Include/core_cm7.h **** 
1320:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1321:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1322:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1323:./Drivers/CMSIS/Include/core_cm7.h **** 
1324:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1325:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1326:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1327:./Drivers/CMSIS/Include/core_cm7.h **** 
1328:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1329:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1330:./Drivers/CMSIS/Include/core_cm7.h **** 
1331:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1332:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1333:./Drivers/CMSIS/Include/core_cm7.h **** 
1334:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1335:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1336:./Drivers/CMSIS/Include/core_cm7.h **** 
1337:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1338:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1339:./Drivers/CMSIS/Include/core_cm7.h **** 
1340:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1341:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1342:./Drivers/CMSIS/Include/core_cm7.h **** 
1343:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
ARM GAS  /tmp/ccmuMs8M.s 			page 25


1344:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1345:./Drivers/CMSIS/Include/core_cm7.h **** 
1346:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1347:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1348:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1349:./Drivers/CMSIS/Include/core_cm7.h **** 
1350:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1351:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1352:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1353:./Drivers/CMSIS/Include/core_cm7.h **** 
1354:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1355:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1356:./Drivers/CMSIS/Include/core_cm7.h **** 
1357:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1358:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1359:./Drivers/CMSIS/Include/core_cm7.h **** 
1360:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1361:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1362:./Drivers/CMSIS/Include/core_cm7.h **** 
1363:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1364:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1365:./Drivers/CMSIS/Include/core_cm7.h **** 
1366:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1367:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1368:./Drivers/CMSIS/Include/core_cm7.h **** 
1369:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1370:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1371:./Drivers/CMSIS/Include/core_cm7.h **** 
1372:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1373:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1374:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1375:./Drivers/CMSIS/Include/core_cm7.h **** 
1376:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1377:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1378:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1379:./Drivers/CMSIS/Include/core_cm7.h **** 
1380:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1381:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1382:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1383:./Drivers/CMSIS/Include/core_cm7.h **** 
1384:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1385:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1386:./Drivers/CMSIS/Include/core_cm7.h **** 
1387:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1388:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1389:./Drivers/CMSIS/Include/core_cm7.h **** 
1390:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1391:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1392:./Drivers/CMSIS/Include/core_cm7.h **** 
1393:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1394:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1395:./Drivers/CMSIS/Include/core_cm7.h **** 
1396:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1397:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1398:./Drivers/CMSIS/Include/core_cm7.h **** 
1399:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1400:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
ARM GAS  /tmp/ccmuMs8M.s 			page 26


1401:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1402:./Drivers/CMSIS/Include/core_cm7.h **** 
1403:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1404:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1405:./Drivers/CMSIS/Include/core_cm7.h **** 
1406:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1407:./Drivers/CMSIS/Include/core_cm7.h **** 
1408:./Drivers/CMSIS/Include/core_cm7.h **** 
1409:./Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1410:./Drivers/CMSIS/Include/core_cm7.h **** /**
1411:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1412:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1413:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1414:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1415:./Drivers/CMSIS/Include/core_cm7.h ****  */
1416:./Drivers/CMSIS/Include/core_cm7.h **** 
1417:./Drivers/CMSIS/Include/core_cm7.h **** /**
1418:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1419:./Drivers/CMSIS/Include/core_cm7.h ****  */
1420:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1421:./Drivers/CMSIS/Include/core_cm7.h **** {
1422:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1423:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1424:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1425:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1426:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1427:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1428:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1429:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1430:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1431:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1432:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1433:./Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1434:./Drivers/CMSIS/Include/core_cm7.h **** 
1435:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1436:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1437:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1438:./Drivers/CMSIS/Include/core_cm7.h **** 
1439:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1440:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1441:./Drivers/CMSIS/Include/core_cm7.h **** 
1442:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1443:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1444:./Drivers/CMSIS/Include/core_cm7.h **** 
1445:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1446:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1447:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1448:./Drivers/CMSIS/Include/core_cm7.h **** 
1449:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1450:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1451:./Drivers/CMSIS/Include/core_cm7.h **** 
1452:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1453:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1454:./Drivers/CMSIS/Include/core_cm7.h **** 
1455:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1456:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1457:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
ARM GAS  /tmp/ccmuMs8M.s 			page 27


1458:./Drivers/CMSIS/Include/core_cm7.h **** 
1459:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1460:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1461:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1462:./Drivers/CMSIS/Include/core_cm7.h **** 
1463:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1464:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1465:./Drivers/CMSIS/Include/core_cm7.h **** 
1466:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1467:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1468:./Drivers/CMSIS/Include/core_cm7.h **** 
1469:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1470:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1471:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1472:./Drivers/CMSIS/Include/core_cm7.h **** 
1473:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1474:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1475:./Drivers/CMSIS/Include/core_cm7.h **** 
1476:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1477:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1478:./Drivers/CMSIS/Include/core_cm7.h **** 
1479:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1480:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1481:./Drivers/CMSIS/Include/core_cm7.h **** 
1482:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1483:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1484:./Drivers/CMSIS/Include/core_cm7.h **** 
1485:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1486:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1487:./Drivers/CMSIS/Include/core_cm7.h **** 
1488:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1489:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1490:./Drivers/CMSIS/Include/core_cm7.h **** 
1491:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1492:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1493:./Drivers/CMSIS/Include/core_cm7.h **** 
1494:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1495:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1496:./Drivers/CMSIS/Include/core_cm7.h **** 
1497:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1498:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1499:./Drivers/CMSIS/Include/core_cm7.h **** 
1500:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1501:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1502:./Drivers/CMSIS/Include/core_cm7.h **** 
1503:./Drivers/CMSIS/Include/core_cm7.h **** 
1504:./Drivers/CMSIS/Include/core_cm7.h **** /**
1505:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1506:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1507:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1508:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1509:./Drivers/CMSIS/Include/core_cm7.h ****  */
1510:./Drivers/CMSIS/Include/core_cm7.h **** 
1511:./Drivers/CMSIS/Include/core_cm7.h **** /**
1512:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1513:./Drivers/CMSIS/Include/core_cm7.h ****  */
1514:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
ARM GAS  /tmp/ccmuMs8M.s 			page 28


1515:./Drivers/CMSIS/Include/core_cm7.h **** {
1516:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1517:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1518:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1519:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1520:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1521:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1522:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1523:./Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1524:./Drivers/CMSIS/Include/core_cm7.h **** 
1525:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1526:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1527:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1528:./Drivers/CMSIS/Include/core_cm7.h **** 
1529:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1530:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1531:./Drivers/CMSIS/Include/core_cm7.h **** 
1532:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1533:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1534:./Drivers/CMSIS/Include/core_cm7.h **** 
1535:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1536:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1537:./Drivers/CMSIS/Include/core_cm7.h **** 
1538:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1539:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1540:./Drivers/CMSIS/Include/core_cm7.h **** 
1541:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1542:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1543:./Drivers/CMSIS/Include/core_cm7.h **** 
1544:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1545:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1546:./Drivers/CMSIS/Include/core_cm7.h **** 
1547:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1548:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1549:./Drivers/CMSIS/Include/core_cm7.h **** 
1550:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1551:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1552:./Drivers/CMSIS/Include/core_cm7.h **** 
1553:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1554:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1555:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1556:./Drivers/CMSIS/Include/core_cm7.h **** 
1557:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1558:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1559:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1560:./Drivers/CMSIS/Include/core_cm7.h **** 
1561:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1562:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1563:./Drivers/CMSIS/Include/core_cm7.h **** 
1564:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1565:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1566:./Drivers/CMSIS/Include/core_cm7.h **** 
1567:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1568:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1569:./Drivers/CMSIS/Include/core_cm7.h **** 
1570:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1571:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
ARM GAS  /tmp/ccmuMs8M.s 			page 29


1572:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1573:./Drivers/CMSIS/Include/core_cm7.h **** 
1574:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1575:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1576:./Drivers/CMSIS/Include/core_cm7.h **** 
1577:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1578:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1579:./Drivers/CMSIS/Include/core_cm7.h **** 
1580:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1581:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1582:./Drivers/CMSIS/Include/core_cm7.h **** 
1583:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1584:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1585:./Drivers/CMSIS/Include/core_cm7.h **** 
1586:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1587:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1588:./Drivers/CMSIS/Include/core_cm7.h **** 
1589:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1590:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1591:./Drivers/CMSIS/Include/core_cm7.h **** 
1592:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1593:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1594:./Drivers/CMSIS/Include/core_cm7.h **** 
1595:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1596:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1597:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1598:./Drivers/CMSIS/Include/core_cm7.h **** 
1599:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1600:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1601:./Drivers/CMSIS/Include/core_cm7.h **** 
1602:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1603:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1604:./Drivers/CMSIS/Include/core_cm7.h **** 
1605:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1606:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1607:./Drivers/CMSIS/Include/core_cm7.h **** 
1608:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1609:./Drivers/CMSIS/Include/core_cm7.h **** 
1610:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1611:./Drivers/CMSIS/Include/core_cm7.h **** 
1612:./Drivers/CMSIS/Include/core_cm7.h **** 
1613:./Drivers/CMSIS/Include/core_cm7.h **** /**
1614:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1615:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1616:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1617:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1618:./Drivers/CMSIS/Include/core_cm7.h ****  */
1619:./Drivers/CMSIS/Include/core_cm7.h **** 
1620:./Drivers/CMSIS/Include/core_cm7.h **** /**
1621:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1622:./Drivers/CMSIS/Include/core_cm7.h ****  */
1623:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1624:./Drivers/CMSIS/Include/core_cm7.h **** {
1625:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1626:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1627:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1628:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  /tmp/ccmuMs8M.s 			page 30


1629:./Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1630:./Drivers/CMSIS/Include/core_cm7.h **** 
1631:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1632:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1633:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1634:./Drivers/CMSIS/Include/core_cm7.h **** 
1635:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1636:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1637:./Drivers/CMSIS/Include/core_cm7.h **** 
1638:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1639:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1640:./Drivers/CMSIS/Include/core_cm7.h **** 
1641:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1642:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1643:./Drivers/CMSIS/Include/core_cm7.h **** 
1644:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1645:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1646:./Drivers/CMSIS/Include/core_cm7.h **** 
1647:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1648:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1649:./Drivers/CMSIS/Include/core_cm7.h **** 
1650:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1651:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1652:./Drivers/CMSIS/Include/core_cm7.h **** 
1653:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1654:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1655:./Drivers/CMSIS/Include/core_cm7.h **** 
1656:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1657:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1658:./Drivers/CMSIS/Include/core_cm7.h **** 
1659:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1660:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1661:./Drivers/CMSIS/Include/core_cm7.h **** 
1662:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1663:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1664:./Drivers/CMSIS/Include/core_cm7.h **** 
1665:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1666:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1667:./Drivers/CMSIS/Include/core_cm7.h **** 
1668:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1669:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1670:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1671:./Drivers/CMSIS/Include/core_cm7.h **** 
1672:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1673:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1674:./Drivers/CMSIS/Include/core_cm7.h **** 
1675:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1676:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1677:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1678:./Drivers/CMSIS/Include/core_cm7.h **** 
1679:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1680:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1681:./Drivers/CMSIS/Include/core_cm7.h **** 
1682:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1683:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1684:./Drivers/CMSIS/Include/core_cm7.h **** 
1685:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
ARM GAS  /tmp/ccmuMs8M.s 			page 31


1686:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1687:./Drivers/CMSIS/Include/core_cm7.h **** 
1688:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1689:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1690:./Drivers/CMSIS/Include/core_cm7.h **** 
1691:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1692:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1693:./Drivers/CMSIS/Include/core_cm7.h **** 
1694:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1695:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1696:./Drivers/CMSIS/Include/core_cm7.h **** 
1697:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1698:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1699:./Drivers/CMSIS/Include/core_cm7.h **** 
1700:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1701:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1702:./Drivers/CMSIS/Include/core_cm7.h **** 
1703:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1704:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1705:./Drivers/CMSIS/Include/core_cm7.h **** 
1706:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1707:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1708:./Drivers/CMSIS/Include/core_cm7.h **** 
1709:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1710:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1711:./Drivers/CMSIS/Include/core_cm7.h **** 
1712:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1713:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1714:./Drivers/CMSIS/Include/core_cm7.h **** 
1715:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1716:./Drivers/CMSIS/Include/core_cm7.h **** 
1717:./Drivers/CMSIS/Include/core_cm7.h **** 
1718:./Drivers/CMSIS/Include/core_cm7.h **** /**
1719:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1720:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1721:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1722:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1723:./Drivers/CMSIS/Include/core_cm7.h ****  */
1724:./Drivers/CMSIS/Include/core_cm7.h **** 
1725:./Drivers/CMSIS/Include/core_cm7.h **** /**
1726:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1727:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1728:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1729:./Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1730:./Drivers/CMSIS/Include/core_cm7.h **** */
1731:./Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1732:./Drivers/CMSIS/Include/core_cm7.h **** 
1733:./Drivers/CMSIS/Include/core_cm7.h **** /**
1734:./Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1735:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1736:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1737:./Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1738:./Drivers/CMSIS/Include/core_cm7.h **** */
1739:./Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1740:./Drivers/CMSIS/Include/core_cm7.h **** 
1741:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1742:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 32


1743:./Drivers/CMSIS/Include/core_cm7.h **** 
1744:./Drivers/CMSIS/Include/core_cm7.h **** /**
1745:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1746:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1747:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1748:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1749:./Drivers/CMSIS/Include/core_cm7.h ****  */
1750:./Drivers/CMSIS/Include/core_cm7.h **** 
1751:./Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1752:./Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1753:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1754:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1755:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1756:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1757:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1758:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1759:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1760:./Drivers/CMSIS/Include/core_cm7.h **** 
1761:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1762:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1763:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1764:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1765:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1766:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1767:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1768:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1769:./Drivers/CMSIS/Include/core_cm7.h **** 
1770:./Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1771:./Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1772:./Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1773:./Drivers/CMSIS/Include/core_cm7.h **** #endif
1774:./Drivers/CMSIS/Include/core_cm7.h **** 
1775:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1776:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1777:./Drivers/CMSIS/Include/core_cm7.h **** 
1778:./Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1779:./Drivers/CMSIS/Include/core_cm7.h **** 
1780:./Drivers/CMSIS/Include/core_cm7.h **** 
1781:./Drivers/CMSIS/Include/core_cm7.h **** 
1782:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1783:./Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1784:./Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1785:./Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1786:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1787:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1788:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1789:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1790:./Drivers/CMSIS/Include/core_cm7.h **** /**
1791:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1792:./Drivers/CMSIS/Include/core_cm7.h **** */
1793:./Drivers/CMSIS/Include/core_cm7.h **** 
1794:./Drivers/CMSIS/Include/core_cm7.h **** 
1795:./Drivers/CMSIS/Include/core_cm7.h **** 
1796:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1797:./Drivers/CMSIS/Include/core_cm7.h **** /**
1798:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1799:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
ARM GAS  /tmp/ccmuMs8M.s 			page 33


1800:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1801:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1802:./Drivers/CMSIS/Include/core_cm7.h ****  */
1803:./Drivers/CMSIS/Include/core_cm7.h **** 
1804:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL
1805:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1806:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1807:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1808:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1809:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1810:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1811:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1812:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1813:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1814:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1815:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1816:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1817:./Drivers/CMSIS/Include/core_cm7.h **** 
1818:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL
1819:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1820:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1821:./Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1822:./Drivers/CMSIS/Include/core_cm7.h **** 
1823:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1824:./Drivers/CMSIS/Include/core_cm7.h **** 
1825:./Drivers/CMSIS/Include/core_cm7.h **** 
1826:./Drivers/CMSIS/Include/core_cm7.h **** 
1827:./Drivers/CMSIS/Include/core_cm7.h **** /**
1828:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1829:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1830:./Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1831:./Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1832:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1833:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1834:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1835:./Drivers/CMSIS/Include/core_cm7.h ****  */
1836:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1837:./Drivers/CMSIS/Include/core_cm7.h **** {
  27              		.loc 1 1837 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
1838:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1839:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  40              		.loc 1 1839 12
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 03F00703 		and	r3, r3, #7
  43 000e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccmuMs8M.s 			page 34


1840:./Drivers/CMSIS/Include/core_cm7.h **** 
1841:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  44              		.loc 1 1841 20
  45 0010 0B4B     		ldr	r3, .L2
  46              		.loc 1 1841 14
  47 0012 DB68     		ldr	r3, [r3, #12]
  48 0014 BB60     		str	r3, [r7, #8]
1842:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 1 1842 13
  50 0016 BA68     		ldr	r2, [r7, #8]
  51 0018 4FF6FF03 		movw	r3, #63743
  52 001c 1340     		ands	r3, r3, r2
  53 001e BB60     		str	r3, [r7, #8]
1843:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1844:./Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1845:./Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  54              		.loc 1 1845 35
  55 0020 FB68     		ldr	r3, [r7, #12]
  56 0022 1A02     		lsls	r2, r3, #8
1844:./Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  57              		.loc 1 1844 62
  58 0024 BB68     		ldr	r3, [r7, #8]
  59 0026 1A43     		orrs	r2, r2, r3
1843:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  60              		.loc 1 1843 14
  61 0028 064B     		ldr	r3, .L2+4
  62 002a 1343     		orrs	r3, r3, r2
  63 002c BB60     		str	r3, [r7, #8]
1846:./Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
  64              		.loc 1 1846 6
  65 002e 044A     		ldr	r2, .L2
  66              		.loc 1 1846 14
  67 0030 BB68     		ldr	r3, [r7, #8]
  68 0032 D360     		str	r3, [r2, #12]
1847:./Drivers/CMSIS/Include/core_cm7.h **** }
  69              		.loc 1 1847 1
  70 0034 00BF     		nop
  71 0036 1437     		adds	r7, r7, #20
  72              		.cfi_def_cfa_offset 4
  73 0038 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 003a 5DF8047B 		ldr	r7, [sp], #4
  77              		.cfi_restore 7
  78              		.cfi_def_cfa_offset 0
  79 003e 7047     		bx	lr
  80              	.L3:
  81              		.align	2
  82              	.L2:
  83 0040 00ED00E0 		.word	-536810240
  84 0044 0000FA05 		.word	100270080
  85              		.cfi_endproc
  86              	.LFE102:
  88              		.section	.text.__NVIC_GetPriorityGrouping,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.thumb
ARM GAS  /tmp/ccmuMs8M.s 			page 35


  92              		.thumb_func
  93              		.fpu fpv5-d16
  95              	__NVIC_GetPriorityGrouping:
  96              	.LFB103:
1848:./Drivers/CMSIS/Include/core_cm7.h **** 
1849:./Drivers/CMSIS/Include/core_cm7.h **** 
1850:./Drivers/CMSIS/Include/core_cm7.h **** /**
1851:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1852:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1853:./Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1854:./Drivers/CMSIS/Include/core_cm7.h ****  */
1855:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1856:./Drivers/CMSIS/Include/core_cm7.h **** {
  97              		.loc 1 1856 1
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
1857:./Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 107              		.loc 1 1857 26
 108 0004 044B     		ldr	r3, .L6
 109 0006 DB68     		ldr	r3, [r3, #12]
 110              		.loc 1 1857 11
 111 0008 1B0A     		lsrs	r3, r3, #8
 112 000a 03F00703 		and	r3, r3, #7
1858:./Drivers/CMSIS/Include/core_cm7.h **** }
 113              		.loc 1 1858 1
 114 000e 1846     		mov	r0, r3
 115 0010 BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 0012 5DF8047B 		ldr	r7, [sp], #4
 119              		.cfi_restore 7
 120              		.cfi_def_cfa_offset 0
 121 0016 7047     		bx	lr
 122              	.L7:
 123              		.align	2
 124              	.L6:
 125 0018 00ED00E0 		.word	-536810240
 126              		.cfi_endproc
 127              	.LFE103:
 129              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
 130              		.align	1
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv5-d16
 136              	__NVIC_EnableIRQ:
 137              	.LFB104:
1859:./Drivers/CMSIS/Include/core_cm7.h **** 
1860:./Drivers/CMSIS/Include/core_cm7.h **** 
1861:./Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccmuMs8M.s 			page 36


1862:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1863:./Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1864:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1865:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1866:./Drivers/CMSIS/Include/core_cm7.h ****  */
1867:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1868:./Drivers/CMSIS/Include/core_cm7.h **** {
 138              		.loc 1 1868 1
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0000 80B4     		push	{r7}
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 0002 83B0     		sub	sp, sp, #12
 147              		.cfi_def_cfa_offset 16
 148 0004 00AF     		add	r7, sp, #0
 149              		.cfi_def_cfa_register 7
 150 0006 0346     		mov	r3, r0
 151 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1869:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 152              		.loc 1 1869 6
 153 000a B7F90630 		ldrsh	r3, [r7, #6]
 154 000e 002B     		cmp	r3, #0
 155 0010 0BDB     		blt	.L10
1870:./Drivers/CMSIS/Include/core_cm7.h ****   {
1871:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 156              		.loc 1 1871 99
 157 0012 FB88     		ldrh	r3, [r7, #6]
 158 0014 03F01F02 		and	r2, r3, #31
 159              		.loc 1 1871 9
 160 0018 0749     		ldr	r1, .L11
 161              		.loc 1 1871 18
 162 001a B7F90630 		ldrsh	r3, [r7, #6]
 163              		.loc 1 1871 43
 164 001e 5B09     		lsrs	r3, r3, #5
 165              		.loc 1 1871 54
 166 0020 0120     		movs	r0, #1
 167 0022 00FA02F2 		lsl	r2, r0, r2
 168              		.loc 1 1871 52
 169 0026 41F82320 		str	r2, [r1, r3, lsl #2]
 170              	.L10:
1872:./Drivers/CMSIS/Include/core_cm7.h ****   }
1873:./Drivers/CMSIS/Include/core_cm7.h **** }
 171              		.loc 1 1873 1
 172 002a 00BF     		nop
 173 002c 0C37     		adds	r7, r7, #12
 174              		.cfi_def_cfa_offset 4
 175 002e BD46     		mov	sp, r7
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 0030 5DF8047B 		ldr	r7, [sp], #4
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 0034 7047     		bx	lr
 182              	.L12:
ARM GAS  /tmp/ccmuMs8M.s 			page 37


 183 0036 00BF     		.align	2
 184              	.L11:
 185 0038 00E100E0 		.word	-536813312
 186              		.cfi_endproc
 187              	.LFE104:
 189              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv5-d16
 196              	__NVIC_DisableIRQ:
 197              	.LFB106:
1874:./Drivers/CMSIS/Include/core_cm7.h **** 
1875:./Drivers/CMSIS/Include/core_cm7.h **** 
1876:./Drivers/CMSIS/Include/core_cm7.h **** /**
1877:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1878:./Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1879:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1880:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1881:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1882:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1883:./Drivers/CMSIS/Include/core_cm7.h ****  */
1884:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1885:./Drivers/CMSIS/Include/core_cm7.h **** {
1886:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1887:./Drivers/CMSIS/Include/core_cm7.h ****   {
1888:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1889:./Drivers/CMSIS/Include/core_cm7.h ****   }
1890:./Drivers/CMSIS/Include/core_cm7.h ****   else
1891:./Drivers/CMSIS/Include/core_cm7.h ****   {
1892:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1893:./Drivers/CMSIS/Include/core_cm7.h ****   }
1894:./Drivers/CMSIS/Include/core_cm7.h **** }
1895:./Drivers/CMSIS/Include/core_cm7.h **** 
1896:./Drivers/CMSIS/Include/core_cm7.h **** 
1897:./Drivers/CMSIS/Include/core_cm7.h **** /**
1898:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1899:./Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1900:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1901:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1902:./Drivers/CMSIS/Include/core_cm7.h ****  */
1903:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1904:./Drivers/CMSIS/Include/core_cm7.h **** {
 198              		.loc 1 1904 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 7, -4
 206 0002 83B0     		sub	sp, sp, #12
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 0346     		mov	r3, r0
ARM GAS  /tmp/ccmuMs8M.s 			page 38


 211 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1905:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 212              		.loc 1 1905 6
 213 000a B7F90630 		ldrsh	r3, [r7, #6]
 214 000e 002B     		cmp	r3, #0
 215 0010 10DB     		blt	.L15
1906:./Drivers/CMSIS/Include/core_cm7.h ****   {
1907:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 216              		.loc 1 1907 99
 217 0012 FB88     		ldrh	r3, [r7, #6]
 218 0014 03F01F02 		and	r2, r3, #31
 219              		.loc 1 1907 9
 220 0018 0949     		ldr	r1, .L16
 221              		.loc 1 1907 18
 222 001a B7F90630 		ldrsh	r3, [r7, #6]
 223              		.loc 1 1907 43
 224 001e 5B09     		lsrs	r3, r3, #5
 225              		.loc 1 1907 54
 226 0020 0120     		movs	r0, #1
 227 0022 00FA02F2 		lsl	r2, r0, r2
 228              		.loc 1 1907 52
 229 0026 2033     		adds	r3, r3, #32
 230 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 231              	.LBB16:
 232              	.LBB17:
 233              		.file 2 "./Drivers/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:./Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/ccmuMs8M.s 			page 39


  32:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:./Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 40


  89:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /tmp/ccmuMs8M.s 			page 41


 146:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccmuMs8M.s 			page 42


 203:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
ARM GAS  /tmp/ccmuMs8M.s 			page 43


 260:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 44


 317:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
ARM GAS  /tmp/ccmuMs8M.s 			page 45


 374:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
ARM GAS  /tmp/ccmuMs8M.s 			page 46


 431:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:./Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccmuMs8M.s 			page 47


 488:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
ARM GAS  /tmp/ccmuMs8M.s 			page 48


 545:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
ARM GAS  /tmp/ccmuMs8M.s 			page 49


 602:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:./Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccmuMs8M.s 			page 50


 659:./Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:./Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:./Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:./Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccmuMs8M.s 			page 51


 716:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:./Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:./Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:./Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 234              		.loc 2 753 3
 235              		.syntax unified
 236              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 237 002c BFF34F8F 		dsb 0xF
 238              	@ 0 "" 2
 239              		.thumb
 240              		.syntax unified
 241              	.LBE17:
 242              	.LBE16:
 243              	.LBB18:
 244              	.LBB19:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 245              		.loc 2 742 3
 246              		.syntax unified
 247              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 248 0030 BFF36F8F 		isb 0xF
 249              	@ 0 "" 2
 250              		.thumb
 251              		.syntax unified
ARM GAS  /tmp/ccmuMs8M.s 			page 52


 252              	.L15:
 253              	.LBE19:
 254              	.LBE18:
1908:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1909:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1910:./Drivers/CMSIS/Include/core_cm7.h ****   }
1911:./Drivers/CMSIS/Include/core_cm7.h **** }
 255              		.loc 1 1911 1
 256 0034 00BF     		nop
 257 0036 0C37     		adds	r7, r7, #12
 258              		.cfi_def_cfa_offset 4
 259 0038 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 003a 5DF8047B 		ldr	r7, [sp], #4
 263              		.cfi_restore 7
 264              		.cfi_def_cfa_offset 0
 265 003e 7047     		bx	lr
 266              	.L17:
 267              		.align	2
 268              	.L16:
 269 0040 00E100E0 		.word	-536813312
 270              		.cfi_endproc
 271              	.LFE106:
 273              		.section	.text.__NVIC_GetPendingIRQ,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv5-d16
 280              	__NVIC_GetPendingIRQ:
 281              	.LFB107:
1912:./Drivers/CMSIS/Include/core_cm7.h **** 
1913:./Drivers/CMSIS/Include/core_cm7.h **** 
1914:./Drivers/CMSIS/Include/core_cm7.h **** /**
1915:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1916:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1917:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1918:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1919:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1920:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1921:./Drivers/CMSIS/Include/core_cm7.h ****  */
1922:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1923:./Drivers/CMSIS/Include/core_cm7.h **** {
 282              		.loc 1 1923 1
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 83B0     		sub	sp, sp, #12
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 0346     		mov	r3, r0
ARM GAS  /tmp/ccmuMs8M.s 			page 53


 295 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1924:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 296              		.loc 1 1924 6
 297 000a B7F90630 		ldrsh	r3, [r7, #6]
 298 000e 002B     		cmp	r3, #0
 299 0010 0EDB     		blt	.L19
1925:./Drivers/CMSIS/Include/core_cm7.h ****   {
1926:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
 300              		.loc 1 1926 29
 301 0012 0B4A     		ldr	r2, .L21
 302              		.loc 1 1926 38
 303 0014 B7F90630 		ldrsh	r3, [r7, #6]
 304              		.loc 1 1926 63
 305 0018 5B09     		lsrs	r3, r3, #5
 306              		.loc 1 1926 35
 307 001a 4033     		adds	r3, r3, #64
 308 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 309              		.loc 1 1926 109
 310 0020 FB88     		ldrh	r3, [r7, #6]
 311 0022 03F01F03 		and	r3, r3, #31
 312              		.loc 1 1926 121
 313 0026 22FA03F3 		lsr	r3, r2, r3
 314              		.loc 1 1926 12
 315 002a 03F00103 		and	r3, r3, #1
 316 002e 00E0     		b	.L20
 317              	.L19:
1927:./Drivers/CMSIS/Include/core_cm7.h ****   }
1928:./Drivers/CMSIS/Include/core_cm7.h ****   else
1929:./Drivers/CMSIS/Include/core_cm7.h ****   {
1930:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
 318              		.loc 1 1930 11
 319 0030 0023     		movs	r3, #0
 320              	.L20:
1931:./Drivers/CMSIS/Include/core_cm7.h ****   }
1932:./Drivers/CMSIS/Include/core_cm7.h **** }
 321              		.loc 1 1932 1
 322 0032 1846     		mov	r0, r3
 323 0034 0C37     		adds	r7, r7, #12
 324              		.cfi_def_cfa_offset 4
 325 0036 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 0038 5DF8047B 		ldr	r7, [sp], #4
 329              		.cfi_restore 7
 330              		.cfi_def_cfa_offset 0
 331 003c 7047     		bx	lr
 332              	.L22:
 333 003e 00BF     		.align	2
 334              	.L21:
 335 0040 00E100E0 		.word	-536813312
 336              		.cfi_endproc
 337              	.LFE107:
 339              		.section	.text.__NVIC_SetPendingIRQ,"ax",%progbits
 340              		.align	1
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
ARM GAS  /tmp/ccmuMs8M.s 			page 54


 344              		.fpu fpv5-d16
 346              	__NVIC_SetPendingIRQ:
 347              	.LFB108:
1933:./Drivers/CMSIS/Include/core_cm7.h **** 
1934:./Drivers/CMSIS/Include/core_cm7.h **** 
1935:./Drivers/CMSIS/Include/core_cm7.h **** /**
1936:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1937:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1939:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1940:./Drivers/CMSIS/Include/core_cm7.h ****  */
1941:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:./Drivers/CMSIS/Include/core_cm7.h **** {
 348              		.loc 1 1942 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 7, -4
 356 0002 83B0     		sub	sp, sp, #12
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 360 0006 0346     		mov	r3, r0
 361 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1943:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 362              		.loc 1 1943 6
 363 000a B7F90630 		ldrsh	r3, [r7, #6]
 364 000e 002B     		cmp	r3, #0
 365 0010 0CDB     		blt	.L25
1944:./Drivers/CMSIS/Include/core_cm7.h ****   {
1945:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 366              		.loc 1 1945 99
 367 0012 FB88     		ldrh	r3, [r7, #6]
 368 0014 03F01F02 		and	r2, r3, #31
 369              		.loc 1 1945 9
 370 0018 0749     		ldr	r1, .L26
 371              		.loc 1 1945 18
 372 001a B7F90630 		ldrsh	r3, [r7, #6]
 373              		.loc 1 1945 43
 374 001e 5B09     		lsrs	r3, r3, #5
 375              		.loc 1 1945 54
 376 0020 0120     		movs	r0, #1
 377 0022 00FA02F2 		lsl	r2, r0, r2
 378              		.loc 1 1945 52
 379 0026 4033     		adds	r3, r3, #64
 380 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 381              	.L25:
1946:./Drivers/CMSIS/Include/core_cm7.h ****   }
1947:./Drivers/CMSIS/Include/core_cm7.h **** }
 382              		.loc 1 1947 1
 383 002c 00BF     		nop
 384 002e 0C37     		adds	r7, r7, #12
 385              		.cfi_def_cfa_offset 4
 386 0030 BD46     		mov	sp, r7
ARM GAS  /tmp/ccmuMs8M.s 			page 55


 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 0032 5DF8047B 		ldr	r7, [sp], #4
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 0036 7047     		bx	lr
 393              	.L27:
 394              		.align	2
 395              	.L26:
 396 0038 00E100E0 		.word	-536813312
 397              		.cfi_endproc
 398              	.LFE108:
 400              		.section	.text.__NVIC_ClearPendingIRQ,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-d16
 407              	__NVIC_ClearPendingIRQ:
 408              	.LFB109:
1948:./Drivers/CMSIS/Include/core_cm7.h **** 
1949:./Drivers/CMSIS/Include/core_cm7.h **** 
1950:./Drivers/CMSIS/Include/core_cm7.h **** /**
1951:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1952:./Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1953:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1954:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1955:./Drivers/CMSIS/Include/core_cm7.h ****  */
1956:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1957:./Drivers/CMSIS/Include/core_cm7.h **** {
 409              		.loc 1 1957 1
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414 0000 80B4     		push	{r7}
 415              		.cfi_def_cfa_offset 4
 416              		.cfi_offset 7, -4
 417 0002 83B0     		sub	sp, sp, #12
 418              		.cfi_def_cfa_offset 16
 419 0004 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 421 0006 0346     		mov	r3, r0
 422 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1958:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 423              		.loc 1 1958 6
 424 000a B7F90630 		ldrsh	r3, [r7, #6]
 425 000e 002B     		cmp	r3, #0
 426 0010 0CDB     		blt	.L30
1959:./Drivers/CMSIS/Include/core_cm7.h ****   {
1960:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
 427              		.loc 1 1960 99
 428 0012 FB88     		ldrh	r3, [r7, #6]
 429 0014 03F01F02 		and	r2, r3, #31
 430              		.loc 1 1960 9
 431 0018 0749     		ldr	r1, .L31
 432              		.loc 1 1960 18
ARM GAS  /tmp/ccmuMs8M.s 			page 56


 433 001a B7F90630 		ldrsh	r3, [r7, #6]
 434              		.loc 1 1960 43
 435 001e 5B09     		lsrs	r3, r3, #5
 436              		.loc 1 1960 54
 437 0020 0120     		movs	r0, #1
 438 0022 00FA02F2 		lsl	r2, r0, r2
 439              		.loc 1 1960 52
 440 0026 6033     		adds	r3, r3, #96
 441 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 442              	.L30:
1961:./Drivers/CMSIS/Include/core_cm7.h ****   }
1962:./Drivers/CMSIS/Include/core_cm7.h **** }
 443              		.loc 1 1962 1
 444 002c 00BF     		nop
 445 002e 0C37     		adds	r7, r7, #12
 446              		.cfi_def_cfa_offset 4
 447 0030 BD46     		mov	sp, r7
 448              		.cfi_def_cfa_register 13
 449              		@ sp needed
 450 0032 5DF8047B 		ldr	r7, [sp], #4
 451              		.cfi_restore 7
 452              		.cfi_def_cfa_offset 0
 453 0036 7047     		bx	lr
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 0038 00E100E0 		.word	-536813312
 458              		.cfi_endproc
 459              	.LFE109:
 461              		.section	.text.__NVIC_GetActive,"ax",%progbits
 462              		.align	1
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv5-d16
 468              	__NVIC_GetActive:
 469              	.LFB110:
1963:./Drivers/CMSIS/Include/core_cm7.h **** 
1964:./Drivers/CMSIS/Include/core_cm7.h **** 
1965:./Drivers/CMSIS/Include/core_cm7.h **** /**
1966:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1967:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1968:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1969:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1970:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
1971:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1972:./Drivers/CMSIS/Include/core_cm7.h ****  */
1973:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1974:./Drivers/CMSIS/Include/core_cm7.h **** {
 470              		.loc 1 1974 1
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              		.cfi_def_cfa_offset 4
 477              		.cfi_offset 7, -4
ARM GAS  /tmp/ccmuMs8M.s 			page 57


 478 0002 83B0     		sub	sp, sp, #12
 479              		.cfi_def_cfa_offset 16
 480 0004 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 482 0006 0346     		mov	r3, r0
 483 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1975:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 484              		.loc 1 1975 6
 485 000a B7F90630 		ldrsh	r3, [r7, #6]
 486 000e 002B     		cmp	r3, #0
 487 0010 0EDB     		blt	.L34
1976:./Drivers/CMSIS/Include/core_cm7.h ****   {
1977:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
 488              		.loc 1 1977 29
 489 0012 0B4A     		ldr	r2, .L36
 490              		.loc 1 1977 38
 491 0014 B7F90630 		ldrsh	r3, [r7, #6]
 492              		.loc 1 1977 63
 493 0018 5B09     		lsrs	r3, r3, #5
 494              		.loc 1 1977 35
 495 001a 8033     		adds	r3, r3, #128
 496 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 497              		.loc 1 1977 109
 498 0020 FB88     		ldrh	r3, [r7, #6]
 499 0022 03F01F03 		and	r3, r3, #31
 500              		.loc 1 1977 121
 501 0026 22FA03F3 		lsr	r3, r2, r3
 502              		.loc 1 1977 12
 503 002a 03F00103 		and	r3, r3, #1
 504 002e 00E0     		b	.L35
 505              	.L34:
1978:./Drivers/CMSIS/Include/core_cm7.h ****   }
1979:./Drivers/CMSIS/Include/core_cm7.h ****   else
1980:./Drivers/CMSIS/Include/core_cm7.h ****   {
1981:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
 506              		.loc 1 1981 11
 507 0030 0023     		movs	r3, #0
 508              	.L35:
1982:./Drivers/CMSIS/Include/core_cm7.h ****   }
1983:./Drivers/CMSIS/Include/core_cm7.h **** }
 509              		.loc 1 1983 1
 510 0032 1846     		mov	r0, r3
 511 0034 0C37     		adds	r7, r7, #12
 512              		.cfi_def_cfa_offset 4
 513 0036 BD46     		mov	sp, r7
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 0038 5DF8047B 		ldr	r7, [sp], #4
 517              		.cfi_restore 7
 518              		.cfi_def_cfa_offset 0
 519 003c 7047     		bx	lr
 520              	.L37:
 521 003e 00BF     		.align	2
 522              	.L36:
 523 0040 00E100E0 		.word	-536813312
 524              		.cfi_endproc
 525              	.LFE110:
ARM GAS  /tmp/ccmuMs8M.s 			page 58


 527              		.section	.text.__NVIC_SetPriority,"ax",%progbits
 528              		.align	1
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv5-d16
 534              	__NVIC_SetPriority:
 535              	.LFB111:
1984:./Drivers/CMSIS/Include/core_cm7.h **** 
1985:./Drivers/CMSIS/Include/core_cm7.h **** 
1986:./Drivers/CMSIS/Include/core_cm7.h **** /**
1987:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1988:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1989:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
1990:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
1991:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1992:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1993:./Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
1994:./Drivers/CMSIS/Include/core_cm7.h ****  */
1995:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1996:./Drivers/CMSIS/Include/core_cm7.h **** {
 536              		.loc 1 1996 1
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              		.cfi_def_cfa_offset 16
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 0346     		mov	r3, r0
 549 0008 3960     		str	r1, [r7]
 550 000a FB80     		strh	r3, [r7, #6]	@ movhi
1997:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 551              		.loc 1 1997 6
 552 000c B7F90630 		ldrsh	r3, [r7, #6]
 553 0010 002B     		cmp	r3, #0
 554 0012 0ADB     		blt	.L39
1998:./Drivers/CMSIS/Include/core_cm7.h ****   {
1999:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
 555              		.loc 1 1999 58
 556 0014 3B68     		ldr	r3, [r7]
 557 0016 DAB2     		uxtb	r2, r3
 558              		.loc 1 1999 9
 559 0018 0C49     		ldr	r1, .L42
 560              		.loc 1 1999 15
 561 001a B7F90630 		ldrsh	r3, [r7, #6]
 562              		.loc 1 1999 58
 563 001e 1201     		lsls	r2, r2, #4
 564 0020 D2B2     		uxtb	r2, r2
 565              		.loc 1 1999 56
 566 0022 0B44     		add	r3, r3, r1
 567 0024 83F80023 		strb	r2, [r3, #768]
2000:./Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  /tmp/ccmuMs8M.s 			page 59


2001:./Drivers/CMSIS/Include/core_cm7.h ****   else
2002:./Drivers/CMSIS/Include/core_cm7.h ****   {
2003:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
2004:./Drivers/CMSIS/Include/core_cm7.h ****   }
2005:./Drivers/CMSIS/Include/core_cm7.h **** }
 568              		.loc 1 2005 1
 569 0028 0AE0     		b	.L41
 570              	.L39:
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 571              		.loc 1 2003 58
 572 002a 3B68     		ldr	r3, [r7]
 573 002c DAB2     		uxtb	r2, r3
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 574              		.loc 1 2003 8
 575 002e 0849     		ldr	r1, .L42+4
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 576              		.loc 1 2003 42
 577 0030 FB88     		ldrh	r3, [r7, #6]
 578 0032 03F00F03 		and	r3, r3, #15
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 579              		.loc 1 2003 50
 580 0036 043B     		subs	r3, r3, #4
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 581              		.loc 1 2003 58
 582 0038 1201     		lsls	r2, r2, #4
 583 003a D2B2     		uxtb	r2, r2
2003:./Drivers/CMSIS/Include/core_cm7.h ****   }
 584              		.loc 1 2003 56
 585 003c 0B44     		add	r3, r3, r1
 586 003e 1A76     		strb	r2, [r3, #24]
 587              	.L41:
 588              		.loc 1 2005 1
 589 0040 00BF     		nop
 590 0042 0C37     		adds	r7, r7, #12
 591              		.cfi_def_cfa_offset 4
 592 0044 BD46     		mov	sp, r7
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 0046 5DF8047B 		ldr	r7, [sp], #4
 596              		.cfi_restore 7
 597              		.cfi_def_cfa_offset 0
 598 004a 7047     		bx	lr
 599              	.L43:
 600              		.align	2
 601              	.L42:
 602 004c 00E100E0 		.word	-536813312
 603 0050 00ED00E0 		.word	-536810240
 604              		.cfi_endproc
 605              	.LFE111:
 607              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 608              		.align	1
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv5-d16
 614              	__NVIC_GetPriority:
 615              	.LFB112:
ARM GAS  /tmp/ccmuMs8M.s 			page 60


2006:./Drivers/CMSIS/Include/core_cm7.h **** 
2007:./Drivers/CMSIS/Include/core_cm7.h **** 
2008:./Drivers/CMSIS/Include/core_cm7.h **** /**
2009:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2010:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2011:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2012:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2013:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2014:./Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2015:./Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2016:./Drivers/CMSIS/Include/core_cm7.h ****  */
2017:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2018:./Drivers/CMSIS/Include/core_cm7.h **** {
 616              		.loc 1 2018 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              		.cfi_def_cfa_offset 4
 623              		.cfi_offset 7, -4
 624 0002 83B0     		sub	sp, sp, #12
 625              		.cfi_def_cfa_offset 16
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 0346     		mov	r3, r0
 629 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2019:./Drivers/CMSIS/Include/core_cm7.h **** 
2020:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 630              		.loc 1 2020 6
 631 000a B7F90630 		ldrsh	r3, [r7, #6]
 632 000e 002B     		cmp	r3, #0
 633 0010 09DB     		blt	.L45
2021:./Drivers/CMSIS/Include/core_cm7.h ****   {
2022:./Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
 634              		.loc 1 2022 27
 635 0012 0D4A     		ldr	r2, .L47
 636              		.loc 1 2022 33
 637 0014 B7F90630 		ldrsh	r3, [r7, #6]
 638              		.loc 1 2022 31
 639 0018 1344     		add	r3, r3, r2
 640 001a 93F80033 		ldrb	r3, [r3, #768]
 641 001e DBB2     		uxtb	r3, r3
 642              		.loc 1 2022 74
 643 0020 1B09     		lsrs	r3, r3, #4
 644 0022 DBB2     		uxtb	r3, r3
 645 0024 09E0     		b	.L46
 646              	.L45:
2023:./Drivers/CMSIS/Include/core_cm7.h ****   }
2024:./Drivers/CMSIS/Include/core_cm7.h ****   else
2025:./Drivers/CMSIS/Include/core_cm7.h ****   {
2026:./Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
 647              		.loc 1 2026 26
 648 0026 094A     		ldr	r2, .L47+4
 649              		.loc 1 2026 60
 650 0028 FB88     		ldrh	r3, [r7, #6]
 651 002a 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccmuMs8M.s 			page 61


 652              		.loc 1 2026 68
 653 002e 043B     		subs	r3, r3, #4
 654              		.loc 1 2026 32
 655 0030 1344     		add	r3, r3, r2
 656 0032 1B7E     		ldrb	r3, [r3, #24]
 657 0034 DBB2     		uxtb	r3, r3
 658              		.loc 1 2026 74
 659 0036 1B09     		lsrs	r3, r3, #4
 660 0038 DBB2     		uxtb	r3, r3
 661              	.L46:
2027:./Drivers/CMSIS/Include/core_cm7.h ****   }
2028:./Drivers/CMSIS/Include/core_cm7.h **** }
 662              		.loc 1 2028 1
 663 003a 1846     		mov	r0, r3
 664 003c 0C37     		adds	r7, r7, #12
 665              		.cfi_def_cfa_offset 4
 666 003e BD46     		mov	sp, r7
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 0040 5DF8047B 		ldr	r7, [sp], #4
 670              		.cfi_restore 7
 671              		.cfi_def_cfa_offset 0
 672 0044 7047     		bx	lr
 673              	.L48:
 674 0046 00BF     		.align	2
 675              	.L47:
 676 0048 00E100E0 		.word	-536813312
 677 004c 00ED00E0 		.word	-536810240
 678              		.cfi_endproc
 679              	.LFE112:
 681              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 682              		.align	1
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 686              		.fpu fpv5-d16
 688              	NVIC_EncodePriority:
 689              	.LFB113:
2029:./Drivers/CMSIS/Include/core_cm7.h **** 
2030:./Drivers/CMSIS/Include/core_cm7.h **** 
2031:./Drivers/CMSIS/Include/core_cm7.h **** /**
2032:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2033:./Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2034:./Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2035:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2036:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2037:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2038:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2039:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2040:./Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2041:./Drivers/CMSIS/Include/core_cm7.h ****  */
2042:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2043:./Drivers/CMSIS/Include/core_cm7.h **** {
 690              		.loc 1 2043 1
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 32
 693              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccmuMs8M.s 			page 62


 694              		@ link register save eliminated.
 695 0000 80B4     		push	{r7}
 696              		.cfi_def_cfa_offset 4
 697              		.cfi_offset 7, -4
 698 0002 89B0     		sub	sp, sp, #36
 699              		.cfi_def_cfa_offset 40
 700 0004 00AF     		add	r7, sp, #0
 701              		.cfi_def_cfa_register 7
 702 0006 F860     		str	r0, [r7, #12]
 703 0008 B960     		str	r1, [r7, #8]
 704 000a 7A60     		str	r2, [r7, #4]
2044:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 705              		.loc 1 2044 12
 706 000c FB68     		ldr	r3, [r7, #12]
 707 000e 03F00703 		and	r3, r3, #7
 708 0012 FB61     		str	r3, [r7, #28]
2045:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2046:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2047:./Drivers/CMSIS/Include/core_cm7.h **** 
2048:./Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 709              		.loc 1 2048 31
 710 0014 FB69     		ldr	r3, [r7, #28]
 711 0016 C3F10703 		rsb	r3, r3, #7
 712              		.loc 1 2048 23
 713 001a 042B     		cmp	r3, #4
 714 001c 28BF     		it	cs
 715 001e 0423     		movcs	r3, #4
 716 0020 BB61     		str	r3, [r7, #24]
2049:./Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 717              		.loc 1 2049 44
 718 0022 FB69     		ldr	r3, [r7, #28]
 719 0024 0433     		adds	r3, r3, #4
 720              		.loc 1 2049 109
 721 0026 062B     		cmp	r3, #6
 722 0028 02D9     		bls	.L50
 723              		.loc 1 2049 109 is_stmt 0 discriminator 1
 724 002a FB69     		ldr	r3, [r7, #28]
 725 002c 033B     		subs	r3, r3, #3
 726 002e 00E0     		b	.L51
 727              	.L50:
 728              		.loc 1 2049 109 discriminator 2
 729 0030 0023     		movs	r3, #0
 730              	.L51:
 731              		.loc 1 2049 23 is_stmt 1 discriminator 4
 732 0032 7B61     		str	r3, [r7, #20]
2050:./Drivers/CMSIS/Include/core_cm7.h **** 
2051:./Drivers/CMSIS/Include/core_cm7.h ****   return (
2052:./Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 733              		.loc 1 2052 30 discriminator 4
 734 0034 4FF0FF32 		mov	r2, #-1
 735 0038 BB69     		ldr	r3, [r7, #24]
 736 003a 02FA03F3 		lsl	r3, r2, r3
 737 003e DA43     		mvns	r2, r3
 738 0040 BB68     		ldr	r3, [r7, #8]
 739 0042 1A40     		ands	r2, r2, r3
 740              		.loc 1 2052 82 discriminator 4
 741 0044 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccmuMs8M.s 			page 63


 742 0046 9A40     		lsls	r2, r2, r3
2053:./Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 743              		.loc 1 2053 30 discriminator 4
 744 0048 4FF0FF31 		mov	r1, #-1
 745 004c 7B69     		ldr	r3, [r7, #20]
 746 004e 01FA03F3 		lsl	r3, r1, r3
 747 0052 D943     		mvns	r1, r3
 748 0054 7B68     		ldr	r3, [r7, #4]
 749 0056 0B40     		ands	r3, r3, r1
2052:./Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 750              		.loc 1 2052 102 discriminator 4
 751 0058 1343     		orrs	r3, r3, r2
2054:./Drivers/CMSIS/Include/core_cm7.h ****          );
2055:./Drivers/CMSIS/Include/core_cm7.h **** }
 752              		.loc 1 2055 1 discriminator 4
 753 005a 1846     		mov	r0, r3
 754 005c 2437     		adds	r7, r7, #36
 755              		.cfi_def_cfa_offset 4
 756 005e BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0060 5DF8047B 		ldr	r7, [sp], #4
 760              		.cfi_restore 7
 761              		.cfi_def_cfa_offset 0
 762 0064 7047     		bx	lr
 763              		.cfi_endproc
 764              	.LFE113:
 766              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 767              		.align	1
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv5-d16
 773              	NVIC_DecodePriority:
 774              	.LFB114:
2056:./Drivers/CMSIS/Include/core_cm7.h **** 
2057:./Drivers/CMSIS/Include/core_cm7.h **** 
2058:./Drivers/CMSIS/Include/core_cm7.h **** /**
2059:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2060:./Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2061:./Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2062:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2063:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2064:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2065:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2066:./Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2067:./Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2068:./Drivers/CMSIS/Include/core_cm7.h ****  */
2069:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2070:./Drivers/CMSIS/Include/core_cm7.h **** {
 775              		.loc 1 2070 1
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 32
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 780 0000 80B4     		push	{r7}
 781              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccmuMs8M.s 			page 64


 782              		.cfi_offset 7, -4
 783 0002 89B0     		sub	sp, sp, #36
 784              		.cfi_def_cfa_offset 40
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 F860     		str	r0, [r7, #12]
 788 0008 B960     		str	r1, [r7, #8]
 789 000a 7A60     		str	r2, [r7, #4]
 790 000c 3B60     		str	r3, [r7]
2071:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 791              		.loc 1 2071 12
 792 000e BB68     		ldr	r3, [r7, #8]
 793 0010 03F00703 		and	r3, r3, #7
 794 0014 FB61     		str	r3, [r7, #28]
2072:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2073:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2074:./Drivers/CMSIS/Include/core_cm7.h **** 
2075:./Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 795              		.loc 1 2075 31
 796 0016 FB69     		ldr	r3, [r7, #28]
 797 0018 C3F10703 		rsb	r3, r3, #7
 798              		.loc 1 2075 23
 799 001c 042B     		cmp	r3, #4
 800 001e 28BF     		it	cs
 801 0020 0423     		movcs	r3, #4
 802 0022 BB61     		str	r3, [r7, #24]
2076:./Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 803              		.loc 1 2076 44
 804 0024 FB69     		ldr	r3, [r7, #28]
 805 0026 0433     		adds	r3, r3, #4
 806              		.loc 1 2076 109
 807 0028 062B     		cmp	r3, #6
 808 002a 02D9     		bls	.L54
 809              		.loc 1 2076 109 is_stmt 0 discriminator 1
 810 002c FB69     		ldr	r3, [r7, #28]
 811 002e 033B     		subs	r3, r3, #3
 812 0030 00E0     		b	.L55
 813              	.L54:
 814              		.loc 1 2076 109 discriminator 2
 815 0032 0023     		movs	r3, #0
 816              	.L55:
 817              		.loc 1 2076 23 is_stmt 1 discriminator 4
 818 0034 7B61     		str	r3, [r7, #20]
2077:./Drivers/CMSIS/Include/core_cm7.h **** 
2078:./Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 819              		.loc 1 2078 33 discriminator 4
 820 0036 FA68     		ldr	r2, [r7, #12]
 821 0038 7B69     		ldr	r3, [r7, #20]
 822 003a DA40     		lsrs	r2, r2, r3
 823              		.loc 1 2078 53 discriminator 4
 824 003c 4FF0FF31 		mov	r1, #-1
 825 0040 BB69     		ldr	r3, [r7, #24]
 826 0042 01FA03F3 		lsl	r3, r1, r3
 827 0046 DB43     		mvns	r3, r3
 828 0048 1A40     		ands	r2, r2, r3
 829              		.loc 1 2078 21 discriminator 4
 830 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmuMs8M.s 			page 65


 831 004c 1A60     		str	r2, [r3]
2079:./Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 832              		.loc 1 2079 53 discriminator 4
 833 004e 4FF0FF32 		mov	r2, #-1
 834 0052 7B69     		ldr	r3, [r7, #20]
 835 0054 02FA03F3 		lsl	r3, r2, r3
 836 0058 DA43     		mvns	r2, r3
 837 005a FB68     		ldr	r3, [r7, #12]
 838 005c 1A40     		ands	r2, r2, r3
 839              		.loc 1 2079 21 discriminator 4
 840 005e 3B68     		ldr	r3, [r7]
 841 0060 1A60     		str	r2, [r3]
2080:./Drivers/CMSIS/Include/core_cm7.h **** }
 842              		.loc 1 2080 1 discriminator 4
 843 0062 00BF     		nop
 844 0064 2437     		adds	r7, r7, #36
 845              		.cfi_def_cfa_offset 4
 846 0066 BD46     		mov	sp, r7
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
 849 0068 5DF8047B 		ldr	r7, [sp], #4
 850              		.cfi_restore 7
 851              		.cfi_def_cfa_offset 0
 852 006c 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE114:
 856              		.section	.text.NVIC_SystemReset,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv5-d16
 863              	NVIC_SystemReset:
 864              	.LFB117:
2081:./Drivers/CMSIS/Include/core_cm7.h **** 
2082:./Drivers/CMSIS/Include/core_cm7.h **** 
2083:./Drivers/CMSIS/Include/core_cm7.h **** /**
2084:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2085:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2086:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2087:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2088:./Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2089:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2090:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2091:./Drivers/CMSIS/Include/core_cm7.h ****  */
2092:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2093:./Drivers/CMSIS/Include/core_cm7.h **** {
2094:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2095:./Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2096:./Drivers/CMSIS/Include/core_cm7.h **** }
2097:./Drivers/CMSIS/Include/core_cm7.h **** 
2098:./Drivers/CMSIS/Include/core_cm7.h **** 
2099:./Drivers/CMSIS/Include/core_cm7.h **** /**
2100:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2101:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2102:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2103:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
ARM GAS  /tmp/ccmuMs8M.s 			page 66


2104:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2105:./Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2106:./Drivers/CMSIS/Include/core_cm7.h ****  */
2107:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2108:./Drivers/CMSIS/Include/core_cm7.h **** {
2109:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2110:./Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2111:./Drivers/CMSIS/Include/core_cm7.h **** }
2112:./Drivers/CMSIS/Include/core_cm7.h **** 
2113:./Drivers/CMSIS/Include/core_cm7.h **** 
2114:./Drivers/CMSIS/Include/core_cm7.h **** /**
2115:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2116:./Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2117:./Drivers/CMSIS/Include/core_cm7.h ****  */
2118:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
2119:./Drivers/CMSIS/Include/core_cm7.h **** {
 865              		.loc 1 2119 1
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870 0000 80B4     		push	{r7}
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875              	.LBB20:
 876              	.LBB21:
 877              		.loc 2 753 3
 878              		.syntax unified
 879              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 880 0004 BFF34F8F 		dsb 0xF
 881              	@ 0 "" 2
 882              		.thumb
 883              		.syntax unified
 884              	.LBE21:
 885              	.LBE20:
2120:./Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2121:./Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2122:./Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2123:./Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 886              		.loc 1 2123 32
 887 0008 054B     		ldr	r3, .L58
 888 000a DB68     		ldr	r3, [r3, #12]
 889              		.loc 1 2123 40
 890 000c 03F4E062 		and	r2, r3, #1792
2122:./Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 891              		.loc 1 2122 6
 892 0010 0349     		ldr	r1, .L58
2122:./Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 893              		.loc 1 2122 17
 894 0012 044B     		ldr	r3, .L58+4
 895 0014 1343     		orrs	r3, r3, r2
2122:./Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 896              		.loc 1 2122 15
 897 0016 CB60     		str	r3, [r1, #12]
 898              	.LBB22:
ARM GAS  /tmp/ccmuMs8M.s 			page 67


 899              	.LBB23:
 900              		.loc 2 753 3
 901              		.syntax unified
 902              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 903 0018 BFF34F8F 		dsb 0xF
 904              	@ 0 "" 2
 905              		.thumb
 906              		.syntax unified
 907              	.L57:
 908              	.LBE23:
 909              	.LBE22:
2124:./Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2125:./Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2126:./Drivers/CMSIS/Include/core_cm7.h **** 
2127:./Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2128:./Drivers/CMSIS/Include/core_cm7.h ****   {
2129:./Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
 910              		.loc 1 2129 5 discriminator 1
 911              		.syntax unified
 912              	@ 2129 "./Drivers/CMSIS/Include/core_cm7.h" 1
 913 001c 00BF     		nop
 914              	@ 0 "" 2
 915              		.thumb
 916              		.syntax unified
 917 001e FDE7     		b	.L57
 918              	.L59:
 919              		.align	2
 920              	.L58:
 921 0020 00ED00E0 		.word	-536810240
 922 0024 0400FA05 		.word	100270084
 923              		.cfi_endproc
 924              	.LFE117:
 926              		.section	.text.SysTick_Config,"ax",%progbits
 927              		.align	1
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 931              		.fpu fpv5-d16
 933              	SysTick_Config:
 934              	.LFB130:
2130:./Drivers/CMSIS/Include/core_cm7.h ****   }
2131:./Drivers/CMSIS/Include/core_cm7.h **** }
2132:./Drivers/CMSIS/Include/core_cm7.h **** 
2133:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2134:./Drivers/CMSIS/Include/core_cm7.h **** 
2135:./Drivers/CMSIS/Include/core_cm7.h **** 
2136:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2137:./Drivers/CMSIS/Include/core_cm7.h **** /**
2138:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2139:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2140:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2141:./Drivers/CMSIS/Include/core_cm7.h ****   @{
2142:./Drivers/CMSIS/Include/core_cm7.h ****  */
2143:./Drivers/CMSIS/Include/core_cm7.h **** 
2144:./Drivers/CMSIS/Include/core_cm7.h **** /**
2145:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2146:./Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
ARM GAS  /tmp/ccmuMs8M.s 			page 68


2147:./Drivers/CMSIS/Include/core_cm7.h ****   \returns
2148:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2149:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2150:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2151:./Drivers/CMSIS/Include/core_cm7.h ****  */
2152:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2153:./Drivers/CMSIS/Include/core_cm7.h **** {
2154:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2155:./Drivers/CMSIS/Include/core_cm7.h **** 
2156:./Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2157:./Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2158:./Drivers/CMSIS/Include/core_cm7.h ****   {
2159:./Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2160:./Drivers/CMSIS/Include/core_cm7.h ****   }
2161:./Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2162:./Drivers/CMSIS/Include/core_cm7.h ****   {
2163:./Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2164:./Drivers/CMSIS/Include/core_cm7.h ****   }
2165:./Drivers/CMSIS/Include/core_cm7.h ****   else
2166:./Drivers/CMSIS/Include/core_cm7.h ****   {
2167:./Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2168:./Drivers/CMSIS/Include/core_cm7.h ****   }
2169:./Drivers/CMSIS/Include/core_cm7.h **** }
2170:./Drivers/CMSIS/Include/core_cm7.h **** 
2171:./Drivers/CMSIS/Include/core_cm7.h **** 
2172:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2173:./Drivers/CMSIS/Include/core_cm7.h **** 
2174:./Drivers/CMSIS/Include/core_cm7.h **** 
2175:./Drivers/CMSIS/Include/core_cm7.h **** 
2176:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2177:./Drivers/CMSIS/Include/core_cm7.h **** /**
2178:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2179:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2180:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2181:./Drivers/CMSIS/Include/core_cm7.h ****   @{
2182:./Drivers/CMSIS/Include/core_cm7.h ****  */
2183:./Drivers/CMSIS/Include/core_cm7.h **** 
2184:./Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2185:./Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2186:./Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2187:./Drivers/CMSIS/Include/core_cm7.h **** 
2188:./Drivers/CMSIS/Include/core_cm7.h **** 
2189:./Drivers/CMSIS/Include/core_cm7.h **** /**
2190:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2191:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2192:./Drivers/CMSIS/Include/core_cm7.h ****   */
2193:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2194:./Drivers/CMSIS/Include/core_cm7.h **** {
2195:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2196:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2197:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2198:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2199:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2200:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2201:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2202:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2203:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
ARM GAS  /tmp/ccmuMs8M.s 			page 69


2204:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2205:./Drivers/CMSIS/Include/core_cm7.h **** }
2206:./Drivers/CMSIS/Include/core_cm7.h **** 
2207:./Drivers/CMSIS/Include/core_cm7.h **** 
2208:./Drivers/CMSIS/Include/core_cm7.h **** /**
2209:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2210:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2211:./Drivers/CMSIS/Include/core_cm7.h ****   */
2212:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2213:./Drivers/CMSIS/Include/core_cm7.h **** {
2214:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2215:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2216:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2217:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2218:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2219:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2220:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2221:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2222:./Drivers/CMSIS/Include/core_cm7.h **** }
2223:./Drivers/CMSIS/Include/core_cm7.h **** 
2224:./Drivers/CMSIS/Include/core_cm7.h **** 
2225:./Drivers/CMSIS/Include/core_cm7.h **** /**
2226:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2227:./Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2228:./Drivers/CMSIS/Include/core_cm7.h ****   */
2229:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2230:./Drivers/CMSIS/Include/core_cm7.h **** {
2231:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2233:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2234:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2235:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2236:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2237:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2238:./Drivers/CMSIS/Include/core_cm7.h **** }
2239:./Drivers/CMSIS/Include/core_cm7.h **** 
2240:./Drivers/CMSIS/Include/core_cm7.h **** 
2241:./Drivers/CMSIS/Include/core_cm7.h **** /**
2242:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2243:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2244:./Drivers/CMSIS/Include/core_cm7.h ****   */
2245:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2246:./Drivers/CMSIS/Include/core_cm7.h **** {
2247:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2248:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2249:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2250:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2251:./Drivers/CMSIS/Include/core_cm7.h **** 
2252:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2253:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2254:./Drivers/CMSIS/Include/core_cm7.h **** 
2255:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2256:./Drivers/CMSIS/Include/core_cm7.h **** 
2257:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2258:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2259:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2260:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
ARM GAS  /tmp/ccmuMs8M.s 			page 70


2261:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2262:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2263:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2264:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2265:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2266:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2267:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2268:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2269:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:./Drivers/CMSIS/Include/core_cm7.h **** 
2271:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2272:./Drivers/CMSIS/Include/core_cm7.h **** 
2273:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2274:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2275:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2276:./Drivers/CMSIS/Include/core_cm7.h **** }
2277:./Drivers/CMSIS/Include/core_cm7.h **** 
2278:./Drivers/CMSIS/Include/core_cm7.h **** 
2279:./Drivers/CMSIS/Include/core_cm7.h **** /**
2280:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2281:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2282:./Drivers/CMSIS/Include/core_cm7.h ****   */
2283:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2284:./Drivers/CMSIS/Include/core_cm7.h **** {
2285:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2286:./Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t ccsidr;
2287:./Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t sets;
2288:./Drivers/CMSIS/Include/core_cm7.h ****     register uint32_t ways;
2289:./Drivers/CMSIS/Include/core_cm7.h **** 
2290:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2291:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2292:./Drivers/CMSIS/Include/core_cm7.h **** 
2293:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2294:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2295:./Drivers/CMSIS/Include/core_cm7.h **** 
2296:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2297:./Drivers/CMSIS/Include/core_cm7.h **** 
2298:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2299:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2300:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2301:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2302:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2303:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2304:./Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2305:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2306:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2307:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2308:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2309:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2310:./Drivers/CMSIS/Include/core_cm7.h **** 
2311:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2312:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2313:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2314:./Drivers/CMSIS/Include/core_cm7.h **** }
2315:./Drivers/CMSIS/Include/core_cm7.h **** 
2316:./Drivers/CMSIS/Include/core_cm7.h **** 
2317:./Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccmuMs8M.s 			page 71


2318:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2319:./Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2320:./Drivers/CMSIS/Include/core_cm7.h ****   */
2321:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2322:./Drivers/CMSIS/Include/core_cm7.h **** {
2323:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2324:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2325:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2326:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2327:./Drivers/CMSIS/Include/core_cm7.h **** 
2328:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2329:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2330:./Drivers/CMSIS/Include/core_cm7.h **** 
2331:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2332:./Drivers/CMSIS/Include/core_cm7.h **** 
2333:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2334:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2335:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2336:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2337:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2338:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2339:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2340:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2341:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2342:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2343:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2344:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2345:./Drivers/CMSIS/Include/core_cm7.h **** 
2346:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2347:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2348:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2349:./Drivers/CMSIS/Include/core_cm7.h **** }
2350:./Drivers/CMSIS/Include/core_cm7.h **** 
2351:./Drivers/CMSIS/Include/core_cm7.h **** 
2352:./Drivers/CMSIS/Include/core_cm7.h **** /**
2353:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2354:./Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2355:./Drivers/CMSIS/Include/core_cm7.h ****   */
2356:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2357:./Drivers/CMSIS/Include/core_cm7.h **** {
2358:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2359:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2360:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2361:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2362:./Drivers/CMSIS/Include/core_cm7.h **** 
2363:./Drivers/CMSIS/Include/core_cm7.h ****      SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2364:./Drivers/CMSIS/Include/core_cm7.h ****    __DSB();
2365:./Drivers/CMSIS/Include/core_cm7.h **** 
2366:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2367:./Drivers/CMSIS/Include/core_cm7.h **** 
2368:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2369:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2370:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2371:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2372:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2373:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2374:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
ARM GAS  /tmp/ccmuMs8M.s 			page 72


2375:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2376:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2377:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2378:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2379:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2380:./Drivers/CMSIS/Include/core_cm7.h **** 
2381:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2382:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2383:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2384:./Drivers/CMSIS/Include/core_cm7.h **** }
2385:./Drivers/CMSIS/Include/core_cm7.h **** 
2386:./Drivers/CMSIS/Include/core_cm7.h **** 
2387:./Drivers/CMSIS/Include/core_cm7.h **** /**
2388:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2389:./Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2390:./Drivers/CMSIS/Include/core_cm7.h ****   */
2391:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2392:./Drivers/CMSIS/Include/core_cm7.h **** {
2393:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2394:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2395:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2396:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2397:./Drivers/CMSIS/Include/core_cm7.h **** 
2398:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2399:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2400:./Drivers/CMSIS/Include/core_cm7.h **** 
2401:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2402:./Drivers/CMSIS/Include/core_cm7.h **** 
2403:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2404:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2405:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2406:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2407:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2408:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2409:./Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2410:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2411:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2412:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2413:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2414:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2415:./Drivers/CMSIS/Include/core_cm7.h **** 
2416:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2417:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2418:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2419:./Drivers/CMSIS/Include/core_cm7.h **** }
2420:./Drivers/CMSIS/Include/core_cm7.h **** 
2421:./Drivers/CMSIS/Include/core_cm7.h **** 
2422:./Drivers/CMSIS/Include/core_cm7.h **** /**
2423:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2424:./Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2425:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2426:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2427:./Drivers/CMSIS/Include/core_cm7.h **** */
2428:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2429:./Drivers/CMSIS/Include/core_cm7.h **** {
2430:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2431:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
ARM GAS  /tmp/ccmuMs8M.s 			page 73


2432:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2433:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2434:./Drivers/CMSIS/Include/core_cm7.h **** 
2435:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2436:./Drivers/CMSIS/Include/core_cm7.h **** 
2437:./Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2438:./Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2439:./Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2440:./Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2441:./Drivers/CMSIS/Include/core_cm7.h ****     }
2442:./Drivers/CMSIS/Include/core_cm7.h **** 
2443:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2444:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2445:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2446:./Drivers/CMSIS/Include/core_cm7.h **** }
2447:./Drivers/CMSIS/Include/core_cm7.h **** 
2448:./Drivers/CMSIS/Include/core_cm7.h **** 
2449:./Drivers/CMSIS/Include/core_cm7.h **** /**
2450:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2451:./Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2452:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2453:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2454:./Drivers/CMSIS/Include/core_cm7.h **** */
2455:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2456:./Drivers/CMSIS/Include/core_cm7.h **** {
2457:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2458:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2459:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2460:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2461:./Drivers/CMSIS/Include/core_cm7.h **** 
2462:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2463:./Drivers/CMSIS/Include/core_cm7.h **** 
2464:./Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2465:./Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2466:./Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2467:./Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2468:./Drivers/CMSIS/Include/core_cm7.h ****     }
2469:./Drivers/CMSIS/Include/core_cm7.h **** 
2470:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2471:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2472:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2473:./Drivers/CMSIS/Include/core_cm7.h **** }
2474:./Drivers/CMSIS/Include/core_cm7.h **** 
2475:./Drivers/CMSIS/Include/core_cm7.h **** 
2476:./Drivers/CMSIS/Include/core_cm7.h **** /**
2477:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2478:./Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2479:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2480:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2481:./Drivers/CMSIS/Include/core_cm7.h **** */
2482:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2483:./Drivers/CMSIS/Include/core_cm7.h **** {
2484:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2485:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2486:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2487:./Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
2488:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 74


2489:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2490:./Drivers/CMSIS/Include/core_cm7.h **** 
2491:./Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2492:./Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2493:./Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
2494:./Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
2495:./Drivers/CMSIS/Include/core_cm7.h ****     }
2496:./Drivers/CMSIS/Include/core_cm7.h **** 
2497:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2498:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2499:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2500:./Drivers/CMSIS/Include/core_cm7.h **** }
2501:./Drivers/CMSIS/Include/core_cm7.h **** 
2502:./Drivers/CMSIS/Include/core_cm7.h **** 
2503:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2504:./Drivers/CMSIS/Include/core_cm7.h **** 
2505:./Drivers/CMSIS/Include/core_cm7.h **** 
2506:./Drivers/CMSIS/Include/core_cm7.h **** 
2507:./Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2508:./Drivers/CMSIS/Include/core_cm7.h **** /**
2509:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2510:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2511:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2512:./Drivers/CMSIS/Include/core_cm7.h ****   @{
2513:./Drivers/CMSIS/Include/core_cm7.h ****  */
2514:./Drivers/CMSIS/Include/core_cm7.h **** 
2515:./Drivers/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2516:./Drivers/CMSIS/Include/core_cm7.h **** 
2517:./Drivers/CMSIS/Include/core_cm7.h **** /**
2518:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2519:./Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2520:./Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2521:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2522:./Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2523:./Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2524:./Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2525:./Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2526:./Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2527:./Drivers/CMSIS/Include/core_cm7.h ****  */
2528:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2529:./Drivers/CMSIS/Include/core_cm7.h **** {
 935              		.loc 1 2529 1
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 8
 938              		@ frame_needed = 1, uses_anonymous_args = 0
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
2530:./Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 948              		.loc 1 2530 14
 949 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccmuMs8M.s 			page 75


 950 000a 013B     		subs	r3, r3, #1
 951              		.loc 1 2530 6
 952 000c B3F1807F 		cmp	r3, #16777216
 953 0010 01D3     		bcc	.L61
2531:./Drivers/CMSIS/Include/core_cm7.h ****   {
2532:./Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
 954              		.loc 1 2532 12
 955 0012 0123     		movs	r3, #1
 956 0014 0FE0     		b	.L62
 957              	.L61:
2533:./Drivers/CMSIS/Include/core_cm7.h ****   }
2534:./Drivers/CMSIS/Include/core_cm7.h **** 
2535:./Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 958              		.loc 1 2535 10
 959 0016 0A4A     		ldr	r2, .L63
 960              		.loc 1 2535 20
 961 0018 7B68     		ldr	r3, [r7, #4]
 962 001a 013B     		subs	r3, r3, #1
 963              		.loc 1 2535 18
 964 001c 5360     		str	r3, [r2, #4]
2536:./Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 965              		.loc 1 2536 3
 966 001e 0F21     		movs	r1, #15
 967 0020 4FF0FF30 		mov	r0, #-1
 968 0024 FFF7FEFF 		bl	__NVIC_SetPriority
2537:./Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 969              		.loc 1 2537 10
 970 0028 054B     		ldr	r3, .L63
 971              		.loc 1 2537 18
 972 002a 0022     		movs	r2, #0
 973 002c 9A60     		str	r2, [r3, #8]
2538:./Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 974              		.loc 1 2538 10
 975 002e 044B     		ldr	r3, .L63
 976              		.loc 1 2538 18
 977 0030 0722     		movs	r2, #7
 978 0032 1A60     		str	r2, [r3]
2539:./Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2540:./Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2541:./Drivers/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
 979              		.loc 1 2541 10
 980 0034 0023     		movs	r3, #0
 981              	.L62:
2542:./Drivers/CMSIS/Include/core_cm7.h **** }
 982              		.loc 1 2542 1
 983 0036 1846     		mov	r0, r3
 984 0038 0837     		adds	r7, r7, #8
 985              		.cfi_def_cfa_offset 8
 986 003a BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 003c 80BD     		pop	{r7, pc}
 990              	.L64:
 991 003e 00BF     		.align	2
 992              	.L63:
 993 0040 10E000E0 		.word	-536813552
 994              		.cfi_endproc
ARM GAS  /tmp/ccmuMs8M.s 			page 76


 995              	.LFE130:
 997              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 998              		.align	1
 999              		.global	HAL_NVIC_SetPriorityGrouping
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1003              		.fpu fpv5-d16
 1005              	HAL_NVIC_SetPriorityGrouping:
 1006              	.LFB134:
 1007              		.file 3 "./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c"
   1:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
   2:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
   3:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @file    stm32h7xx_hal_cortex.c
   4:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  11:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @verbatim
  12:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  13:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  15:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  16:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  17:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ===========================================================
  19:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  20:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     The Cortex-M exceptions are managed by CMSIS functions.
  22:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  23:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         function according to the following table.
  25:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  26:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority.
  28:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  29:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible.
  30:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  32:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  37:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  38:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ========================================================
  40:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  41:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  43:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        is a CMSIS function that:
  45:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
ARM GAS  /tmp/ccmuMs8M.s 			page 77


  47:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  52:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() macro is defined
  55:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        inside the stm32h7xx_hal_cortex.h file.
  56:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  57:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  61:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  63:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  67:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @endverbatim
  68:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  69:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @attention
  70:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  71:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
  72:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * All rights reserved.</center></h2>
  73:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  74:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  75:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * the "License"; You may not use this file except in compliance with the
  76:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * License. You may obtain a copy of the License at:
  77:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  78:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  79:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  80:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  81:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  82:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  83:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #include "stm32h7xx_hal.h"
  84:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  85:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  86:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  87:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  88:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  89:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  90:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  91:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  92:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  93:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  94:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  95:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  96:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  97:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  98:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  99:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
ARM GAS  /tmp/ccmuMs8M.s 			page 78


 104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       Systick functionalities
 118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         using the required unlock sequence.
 127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length.
 128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
 140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1008              		.loc 3 144 1
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 82B0     		sub	sp, sp, #8
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
 1020 0006 7860     		str	r0, [r7, #4]
 145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 79


 148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 1021              		.loc 3 149 3
 1022 0008 7868     		ldr	r0, [r7, #4]
 1023 000a FFF7FEFF 		bl	__NVIC_SetPriorityGrouping
 150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1024              		.loc 3 150 1
 1025 000e 00BF     		nop
 1026 0010 0837     		adds	r7, r7, #8
 1027              		.cfi_def_cfa_offset 8
 1028 0012 BD46     		mov	sp, r7
 1029              		.cfi_def_cfa_register 13
 1030              		@ sp needed
 1031 0014 80BD     		pop	{r7, pc}
 1032              		.cfi_endproc
 1033              	.LFE134:
 1035              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 1036              		.align	1
 1037              		.global	HAL_NVIC_SetPriority
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1041              		.fpu fpv5-d16
 1043              	HAL_NVIC_SetPriority:
 1044              	.LFB135:
 151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1045              		.loc 3 166 1
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 24
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 86B0     		sub	sp, sp, #24
 1054              		.cfi_def_cfa_offset 32
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 0346     		mov	r3, r0
 1058 0008 B960     		str	r1, [r7, #8]
 1059 000a 7A60     		str	r2, [r7, #4]
 1060 000c FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  /tmp/ccmuMs8M.s 			page 80


 167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   uint32_t prioritygroup;
 168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 1061              		.loc 3 173 19
 1062 000e FFF7FEFF 		bl	__NVIC_GetPriorityGrouping
 1063 0012 7861     		str	r0, [r7, #20]
 174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 1064              		.loc 3 175 3
 1065 0014 7A68     		ldr	r2, [r7, #4]
 1066 0016 B968     		ldr	r1, [r7, #8]
 1067 0018 7869     		ldr	r0, [r7, #20]
 1068 001a FFF7FEFF 		bl	NVIC_EncodePriority
 1069 001e 0246     		mov	r2, r0
 1070 0020 B7F90E30 		ldrsh	r3, [r7, #14]
 1071 0024 1146     		mov	r1, r2
 1072 0026 1846     		mov	r0, r3
 1073 0028 FFF7FEFF 		bl	__NVIC_SetPriority
 176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1074              		.loc 3 176 1
 1075 002c 00BF     		nop
 1076 002e 1837     		adds	r7, r7, #24
 1077              		.cfi_def_cfa_offset 8
 1078 0030 BD46     		mov	sp, r7
 1079              		.cfi_def_cfa_register 13
 1080              		@ sp needed
 1081 0032 80BD     		pop	{r7, pc}
 1082              		.cfi_endproc
 1083              	.LFE135:
 1085              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1086              		.align	1
 1087              		.global	HAL_NVIC_EnableIRQ
 1088              		.syntax unified
 1089              		.thumb
 1090              		.thumb_func
 1091              		.fpu fpv5-d16
 1093              	HAL_NVIC_EnableIRQ:
 1094              	.LFB136:
 177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         function should be called before.
 182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1095              		.loc 3 188 1
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccmuMs8M.s 			page 81


 1098              		@ frame_needed = 1, uses_anonymous_args = 0
 1099 0000 80B5     		push	{r7, lr}
 1100              		.cfi_def_cfa_offset 8
 1101              		.cfi_offset 7, -8
 1102              		.cfi_offset 14, -4
 1103 0002 82B0     		sub	sp, sp, #8
 1104              		.cfi_def_cfa_offset 16
 1105 0004 00AF     		add	r7, sp, #0
 1106              		.cfi_def_cfa_register 7
 1107 0006 0346     		mov	r3, r0
 1108 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable interrupt */
 193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1109              		.loc 3 193 3
 1110 000a B7F90630 		ldrsh	r3, [r7, #6]
 1111 000e 1846     		mov	r0, r3
 1112 0010 FFF7FEFF 		bl	__NVIC_EnableIRQ
 194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1113              		.loc 3 194 1
 1114 0014 00BF     		nop
 1115 0016 0837     		adds	r7, r7, #8
 1116              		.cfi_def_cfa_offset 8
 1117 0018 BD46     		mov	sp, r7
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 001a 80BD     		pop	{r7, pc}
 1121              		.cfi_endproc
 1122              	.LFE136:
 1124              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1125              		.align	1
 1126              		.global	HAL_NVIC_DisableIRQ
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv5-d16
 1132              	HAL_NVIC_DisableIRQ:
 1133              	.LFB137:
 195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1134              		.loc 3 204 1
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 8
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0000 80B5     		push	{r7, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
ARM GAS  /tmp/ccmuMs8M.s 			page 82


 1141              		.cfi_offset 14, -4
 1142 0002 82B0     		sub	sp, sp, #8
 1143              		.cfi_def_cfa_offset 16
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 1146 0006 0346     		mov	r3, r0
 1147 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable interrupt */
 209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1148              		.loc 3 209 3
 1149 000a B7F90630 		ldrsh	r3, [r7, #6]
 1150 000e 1846     		mov	r0, r3
 1151 0010 FFF7FEFF 		bl	__NVIC_DisableIRQ
 210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1152              		.loc 3 210 1
 1153 0014 00BF     		nop
 1154 0016 0837     		adds	r7, r7, #8
 1155              		.cfi_def_cfa_offset 8
 1156 0018 BD46     		mov	sp, r7
 1157              		.cfi_def_cfa_register 13
 1158              		@ sp needed
 1159 001a 80BD     		pop	{r7, pc}
 1160              		.cfi_endproc
 1161              	.LFE137:
 1163              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1164              		.align	1
 1165              		.global	HAL_NVIC_SystemReset
 1166              		.syntax unified
 1167              		.thumb
 1168              		.thumb_func
 1169              		.fpu fpv5-d16
 1171              	HAL_NVIC_SystemReset:
 1172              	.LFB138:
 211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1173              		.loc 3 217 1
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
 1177 0000 80B5     		push	{r7, lr}
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0002 00AF     		add	r7, sp, #0
 1182              		.cfi_def_cfa_register 7
 218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* System Reset */
 219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SystemReset();
 1183              		.loc 3 219 3
 1184 0004 FFF7FEFF 		bl	NVIC_SystemReset
ARM GAS  /tmp/ccmuMs8M.s 			page 83


 220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1185              		.loc 3 220 1
 1186 0008 00BF     		nop
 1187 000a 80BD     		pop	{r7, pc}
 1188              		.cfi_endproc
 1189              	.LFE138:
 1191              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1192              		.align	1
 1193              		.global	HAL_SYSTICK_Config
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu fpv5-d16
 1199              	HAL_SYSTICK_Config:
 1200              	.LFB139:
 221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status   - 0  Function succeeded.
 227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  - 1  Function failed.
 228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1201              		.loc 3 230 1
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 8
 1204              		@ frame_needed = 1, uses_anonymous_args = 0
 1205 0000 80B5     		push	{r7, lr}
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 82B0     		sub	sp, sp, #8
 1210              		.cfi_def_cfa_offset 16
 1211 0004 00AF     		add	r7, sp, #0
 1212              		.cfi_def_cfa_register 7
 1213 0006 7860     		str	r0, [r7, #4]
 231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1214              		.loc 3 231 11
 1215 0008 7868     		ldr	r0, [r7, #4]
 1216 000a FFF7FEFF 		bl	SysTick_Config
 1217 000e 0346     		mov	r3, r0
 232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1218              		.loc 3 232 1
 1219 0010 1846     		mov	r0, r3
 1220 0012 0837     		adds	r7, r7, #8
 1221              		.cfi_def_cfa_offset 8
 1222 0014 BD46     		mov	sp, r7
 1223              		.cfi_def_cfa_register 13
 1224              		@ sp needed
 1225 0016 80BD     		pop	{r7, pc}
 1226              		.cfi_endproc
 1227              	.LFE139:
 1229              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1230              		.align	1
 1231              		.global	HAL_MPU_Disable
ARM GAS  /tmp/ccmuMs8M.s 			page 84


 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1235              		.fpu fpv5-d16
 1237              	HAL_MPU_Disable:
 1238              	.LFB140:
 233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @}
 235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief   Cortex control functions
 239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables the MPU
 255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1239              		.loc 3 258 1
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 1, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244 0000 80B4     		push	{r7}
 1245              		.cfi_def_cfa_offset 4
 1246              		.cfi_offset 7, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249              	.LBB24:
 1250              	.LBB25:
 754:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 756:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 758:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 759:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 760:./Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 761:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 763:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1251              		.loc 2 764 3
 1252              		.syntax unified
ARM GAS  /tmp/ccmuMs8M.s 			page 85


 1253              	@ 764 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1254 0004 BFF35F8F 		dmb 0xF
 1255              	@ 0 "" 2
 1256              		.thumb
 1257              		.syntax unified
 1258              	.LBE25:
 1259              	.LBE24:
 259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DMB();
 261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable fault exceptions */
 263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 1260              		.loc 3 263 14
 1261 0008 064B     		ldr	r3, .L73
 1262 000a 5B6A     		ldr	r3, [r3, #36]
 1263 000c 054A     		ldr	r2, .L73
 1264 000e 23F48033 		bic	r3, r3, #65536
 1265 0012 5362     		str	r3, [r2, #36]
 264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = 0;
 1266              		.loc 3 266 6
 1267 0014 044B     		ldr	r3, .L73+4
 1268              		.loc 3 266 13
 1269 0016 0022     		movs	r2, #0
 1270 0018 5A60     		str	r2, [r3, #4]
 267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1271              		.loc 3 267 1
 1272 001a 00BF     		nop
 1273 001c BD46     		mov	sp, r7
 1274              		.cfi_def_cfa_register 13
 1275              		@ sp needed
 1276 001e 5DF8047B 		ldr	r7, [sp], #4
 1277              		.cfi_restore 7
 1278              		.cfi_def_cfa_offset 0
 1279 0022 7047     		bx	lr
 1280              	.L74:
 1281              		.align	2
 1282              	.L73:
 1283 0024 00ED00E0 		.word	-536810240
 1284 0028 90ED00E0 		.word	-536810096
 1285              		.cfi_endproc
 1286              	.LFE140:
 1288              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_MPU_Enable
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv5-d16
 1296              	HAL_MPU_Enable:
 1297              	.LFB141:
 268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables the MPU
 271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault,
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         NMI, FAULTMASK and privileged access to the default memory
ARM GAS  /tmp/ccmuMs8M.s 			page 86


 273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1298              		.loc 3 281 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 8
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              		.cfi_def_cfa_offset 4
 1305              		.cfi_offset 7, -4
 1306 0002 83B0     		sub	sp, sp, #12
 1307              		.cfi_def_cfa_offset 16
 1308 0004 00AF     		add	r7, sp, #0
 1309              		.cfi_def_cfa_register 7
 1310 0006 7860     		str	r0, [r7, #4]
 282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable the MPU */
 283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 1311              		.loc 3 283 6
 1312 0008 0A4A     		ldr	r2, .L76
 1313              		.loc 3 283 27
 1314 000a 7B68     		ldr	r3, [r7, #4]
 1315 000c 43F00103 		orr	r3, r3, #1
 1316              		.loc 3 283 13
 1317 0010 5360     		str	r3, [r2, #4]
 284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable fault exceptions */
 286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 1318              		.loc 3 286 14
 1319 0012 094B     		ldr	r3, .L76+4
 1320 0014 5B6A     		ldr	r3, [r3, #36]
 1321 0016 084A     		ldr	r2, .L76+4
 1322 0018 43F48033 		orr	r3, r3, #65536
 1323 001c 5362     		str	r3, [r2, #36]
 1324              	.LBB26:
 1325              	.LBB27:
 753:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1326              		.loc 2 753 3
 1327              		.syntax unified
 1328              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1329 001e BFF34F8F 		dsb 0xF
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333              	.LBE27:
 1334              	.LBE26:
 1335              	.LBB28:
 1336              	.LBB29:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1337              		.loc 2 742 3
 1338              		.syntax unified
ARM GAS  /tmp/ccmuMs8M.s 			page 87


 1339              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1340 0022 BFF36F8F 		isb 0xF
 1341              	@ 0 "" 2
 1342              		.thumb
 1343              		.syntax unified
 1344              	.LBE29:
 1345              	.LBE28:
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DSB();
 290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __ISB();
 291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1346              		.loc 3 291 1
 1347 0026 00BF     		nop
 1348 0028 0C37     		adds	r7, r7, #12
 1349              		.cfi_def_cfa_offset 4
 1350 002a BD46     		mov	sp, r7
 1351              		.cfi_def_cfa_register 13
 1352              		@ sp needed
 1353 002c 5DF8047B 		ldr	r7, [sp], #4
 1354              		.cfi_restore 7
 1355              		.cfi_def_cfa_offset 0
 1356 0030 7047     		bx	lr
 1357              	.L77:
 1358 0032 00BF     		.align	2
 1359              	.L76:
 1360 0034 90ED00E0 		.word	-536810096
 1361 0038 00ED00E0 		.word	-536810240
 1362              		.cfi_endproc
 1363              	.LFE141:
 1365              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1366              		.align	1
 1367              		.global	HAL_MPU_ConfigRegion
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv5-d16
 1373              	HAL_MPU_ConfigRegion:
 1374              	.LFB142:
 292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  the initialization and configuration information.
 296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1375              		.loc 3 299 1
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
 1383 0002 83B0     		sub	sp, sp, #12
 1384              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccmuMs8M.s 			page 88


 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the Region number */
 305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1388              		.loc 3 305 22
 1389 0008 7B68     		ldr	r3, [r7, #4]
 1390 000a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1391              		.loc 3 305 6
 1392 000c 1D4B     		ldr	r3, .L82
 1393              		.loc 3 305 12
 1394 000e 9A60     		str	r2, [r3, #8]
 306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != 0UL)
 1395              		.loc 3 307 16
 1396 0010 7B68     		ldr	r3, [r7, #4]
 1397 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1398              		.loc 3 307 6
 1399 0014 002B     		cmp	r3, #0
 1400 0016 29D0     		beq	.L79
 308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     /* Check the parameters */
 310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1401              		.loc 3 319 8
 1402 0018 1A4A     		ldr	r2, .L82
 1403              		.loc 3 319 25
 1404 001a 7B68     		ldr	r3, [r7, #4]
 1405 001c 5B68     		ldr	r3, [r3, #4]
 1406              		.loc 3 319 15
 1407 001e D360     		str	r3, [r2, #12]
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1408              		.loc 3 320 36
 1409 0020 7B68     		ldr	r3, [r7, #4]
 1410 0022 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1411              		.loc 3 320 62
 1412 0024 1A07     		lsls	r2, r3, #28
 321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1413              		.loc 3 321 36
 1414 0026 7B68     		ldr	r3, [r7, #4]
 1415 0028 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1416              		.loc 3 321 62
 1417 002a 1B06     		lsls	r3, r3, #24
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1418              		.loc 3 320 84
ARM GAS  /tmp/ccmuMs8M.s 			page 89


 1419 002c 1A43     		orrs	r2, r2, r3
 322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1420              		.loc 3 322 36
 1421 002e 7B68     		ldr	r3, [r7, #4]
 1422 0030 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1423              		.loc 3 322 62
 1424 0032 DB04     		lsls	r3, r3, #19
 321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1425              		.loc 3 321 84
 1426 0034 1A43     		orrs	r2, r2, r3
 323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1427              		.loc 3 323 36
 1428 0036 7B68     		ldr	r3, [r7, #4]
 1429 0038 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1430              		.loc 3 323 62
 1431 003a 9B04     		lsls	r3, r3, #18
 322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1432              		.loc 3 322 84
 1433 003c 1A43     		orrs	r2, r2, r3
 324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1434              		.loc 3 324 36
 1435 003e 7B68     		ldr	r3, [r7, #4]
 1436 0040 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1437              		.loc 3 324 62
 1438 0042 5B04     		lsls	r3, r3, #17
 323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1439              		.loc 3 323 84
 1440 0044 1A43     		orrs	r2, r2, r3
 325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1441              		.loc 3 325 36
 1442 0046 7B68     		ldr	r3, [r7, #4]
 1443 0048 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1444              		.loc 3 325 62
 1445 004a 1B04     		lsls	r3, r3, #16
 324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1446              		.loc 3 324 84
 1447 004c 1A43     		orrs	r2, r2, r3
 326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1448              		.loc 3 326 36
 1449 004e 7B68     		ldr	r3, [r7, #4]
 1450 0050 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1451              		.loc 3 326 62
 1452 0052 1B02     		lsls	r3, r3, #8
 325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1453              		.loc 3 325 84
 1454 0054 1A43     		orrs	r2, r2, r3
 327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1455              		.loc 3 327 36
 1456 0056 7B68     		ldr	r3, [r7, #4]
 1457 0058 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1458              		.loc 3 327 62
 1459 005a 5B00     		lsls	r3, r3, #1
 326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1460              		.loc 3 326 84
 1461 005c 1343     		orrs	r3, r3, r2
 328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 1462              		.loc 3 328 36
ARM GAS  /tmp/ccmuMs8M.s 			page 90


 1463 005e 7A68     		ldr	r2, [r7, #4]
 1464 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1465              		.loc 3 328 62
 1466 0062 1146     		mov	r1, r2
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1467              		.loc 3 320 8
 1468 0064 074A     		ldr	r2, .L82
 327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1469              		.loc 3 327 84
 1470 0066 0B43     		orrs	r3, r3, r1
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1471              		.loc 3 320 15
 1472 0068 1361     		str	r3, [r2, #16]
 329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1473              		.loc 3 335 1
 1474 006a 05E0     		b	.L81
 1475              	.L79:
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1476              		.loc 3 332 8
 1477 006c 054B     		ldr	r3, .L82
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1478              		.loc 3 332 15
 1479 006e 0022     		movs	r2, #0
 1480 0070 DA60     		str	r2, [r3, #12]
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1481              		.loc 3 333 8
 1482 0072 044B     		ldr	r3, .L82
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1483              		.loc 3 333 15
 1484 0074 0022     		movs	r2, #0
 1485 0076 1A61     		str	r2, [r3, #16]
 1486              	.L81:
 1487              		.loc 3 335 1
 1488 0078 00BF     		nop
 1489 007a 0C37     		adds	r7, r7, #12
 1490              		.cfi_def_cfa_offset 4
 1491 007c BD46     		mov	sp, r7
 1492              		.cfi_def_cfa_register 13
 1493              		@ sp needed
 1494 007e 5DF8047B 		ldr	r7, [sp], #4
 1495              		.cfi_restore 7
 1496              		.cfi_def_cfa_offset 0
 1497 0082 7047     		bx	lr
 1498              	.L83:
 1499              		.align	2
 1500              	.L82:
 1501 0084 90ED00E0 		.word	-536810096
 1502              		.cfi_endproc
 1503              	.LFE142:
 1505              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1506              		.align	1
ARM GAS  /tmp/ccmuMs8M.s 			page 91


 1507              		.global	HAL_NVIC_GetPriorityGrouping
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu fpv5-d16
 1513              	HAL_NVIC_GetPriorityGrouping:
 1514              	.LFB143:
 336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1515              		.loc 3 343 1
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 1, uses_anonymous_args = 0
 1519 0000 80B5     		push	{r7, lr}
 1520              		.cfi_def_cfa_offset 8
 1521              		.cfi_offset 7, -8
 1522              		.cfi_offset 14, -4
 1523 0002 00AF     		add	r7, sp, #0
 1524              		.cfi_def_cfa_register 7
 344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1525              		.loc 3 345 10
 1526 0004 FFF7FEFF 		bl	__NVIC_GetPriorityGrouping
 1527 0008 0346     		mov	r3, r0
 346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1528              		.loc 3 346 1
 1529 000a 1846     		mov	r0, r3
 1530 000c 80BD     		pop	{r7, pc}
 1531              		.cfi_endproc
 1532              	.LFE143:
 1534              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1535              		.align	1
 1536              		.global	HAL_NVIC_GetPriority
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu fpv5-d16
 1542              	HAL_NVIC_GetPriority:
 1543              	.LFB144:
 347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      3 bits for subpriority
ARM GAS  /tmp/ccmuMs8M.s 			page 92


 359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1544              		.loc 3 370 1
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 16
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548 0000 80B5     		push	{r7, lr}
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 84B0     		sub	sp, sp, #16
 1553              		.cfi_def_cfa_offset 24
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556 0006 B960     		str	r1, [r7, #8]
 1557 0008 7A60     		str	r2, [r7, #4]
 1558 000a 3B60     		str	r3, [r7]
 1559 000c 0346     		mov	r3, r0	@ movhi
 1560 000e FB81     		strh	r3, [r7, #14]	@ movhi
 371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1561              		.loc 3 374 3
 1562 0010 B7F90E30 		ldrsh	r3, [r7, #14]
 1563 0014 1846     		mov	r0, r3
 1564 0016 FFF7FEFF 		bl	__NVIC_GetPriority
 1565 001a 3B68     		ldr	r3, [r7]
 1566 001c 7A68     		ldr	r2, [r7, #4]
 1567 001e B968     		ldr	r1, [r7, #8]
 1568 0020 FFF7FEFF 		bl	NVIC_DecodePriority
 375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1569              		.loc 3 375 1
 1570 0024 00BF     		nop
 1571 0026 1037     		adds	r7, r7, #16
 1572              		.cfi_def_cfa_offset 8
 1573 0028 BD46     		mov	sp, r7
 1574              		.cfi_def_cfa_register 13
 1575              		@ sp needed
 1576 002a 80BD     		pop	{r7, pc}
 1577              		.cfi_endproc
 1578              	.LFE144:
 1580              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1581              		.align	1
 1582              		.global	HAL_NVIC_SetPendingIRQ
 1583              		.syntax unified
 1584              		.thumb
ARM GAS  /tmp/ccmuMs8M.s 			page 93


 1585              		.thumb_func
 1586              		.fpu fpv5-d16
 1588              	HAL_NVIC_SetPendingIRQ:
 1589              	.LFB145:
 376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1590              		.loc 3 385 1
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 8
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594 0000 80B5     		push	{r7, lr}
 1595              		.cfi_def_cfa_offset 8
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598 0002 82B0     		sub	sp, sp, #8
 1599              		.cfi_def_cfa_offset 16
 1600 0004 00AF     		add	r7, sp, #0
 1601              		.cfi_def_cfa_register 7
 1602 0006 0346     		mov	r3, r0
 1603 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set interrupt pending */
 390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1604              		.loc 3 390 3
 1605 000a B7F90630 		ldrsh	r3, [r7, #6]
 1606 000e 1846     		mov	r0, r3
 1607 0010 FFF7FEFF 		bl	__NVIC_SetPendingIRQ
 391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1608              		.loc 3 391 1
 1609 0014 00BF     		nop
 1610 0016 0837     		adds	r7, r7, #8
 1611              		.cfi_def_cfa_offset 8
 1612 0018 BD46     		mov	sp, r7
 1613              		.cfi_def_cfa_register 13
 1614              		@ sp needed
 1615 001a 80BD     		pop	{r7, pc}
 1616              		.cfi_endproc
 1617              	.LFE145:
 1619              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1620              		.align	1
 1621              		.global	HAL_NVIC_GetPendingIRQ
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1625              		.fpu fpv5-d16
 1627              	HAL_NVIC_GetPendingIRQ:
 1628              	.LFB146:
ARM GAS  /tmp/ccmuMs8M.s 			page 94


 392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1629              		.loc 3 403 1
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 8
 1632              		@ frame_needed = 1, uses_anonymous_args = 0
 1633 0000 80B5     		push	{r7, lr}
 1634              		.cfi_def_cfa_offset 8
 1635              		.cfi_offset 7, -8
 1636              		.cfi_offset 14, -4
 1637 0002 82B0     		sub	sp, sp, #8
 1638              		.cfi_def_cfa_offset 16
 1639 0004 00AF     		add	r7, sp, #0
 1640              		.cfi_def_cfa_register 7
 1641 0006 0346     		mov	r3, r0
 1642 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1643              		.loc 3 408 10
 1644 000a B7F90630 		ldrsh	r3, [r7, #6]
 1645 000e 1846     		mov	r0, r3
 1646 0010 FFF7FEFF 		bl	__NVIC_GetPendingIRQ
 1647 0014 0346     		mov	r3, r0
 409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1648              		.loc 3 409 1
 1649 0016 1846     		mov	r0, r3
 1650 0018 0837     		adds	r7, r7, #8
 1651              		.cfi_def_cfa_offset 8
 1652 001a BD46     		mov	sp, r7
 1653              		.cfi_def_cfa_register 13
 1654              		@ sp needed
 1655 001c 80BD     		pop	{r7, pc}
 1656              		.cfi_endproc
 1657              	.LFE146:
 1659              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1660              		.align	1
 1661              		.global	HAL_NVIC_ClearPendingIRQ
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv5-d16
 1667              	HAL_NVIC_ClearPendingIRQ:
 1668              	.LFB147:
 410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /tmp/ccmuMs8M.s 			page 95


 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1669              		.loc 3 419 1
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 8
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 82B0     		sub	sp, sp, #8
 1678              		.cfi_def_cfa_offset 16
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 1681 0006 0346     		mov	r3, r0
 1682 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Clear pending interrupt */
 424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1683              		.loc 3 424 3
 1684 000a B7F90630 		ldrsh	r3, [r7, #6]
 1685 000e 1846     		mov	r0, r3
 1686 0010 FFF7FEFF 		bl	__NVIC_ClearPendingIRQ
 425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1687              		.loc 3 425 1
 1688 0014 00BF     		nop
 1689 0016 0837     		adds	r7, r7, #8
 1690              		.cfi_def_cfa_offset 8
 1691 0018 BD46     		mov	sp, r7
 1692              		.cfi_def_cfa_register 13
 1693              		@ sp needed
 1694 001a 80BD     		pop	{r7, pc}
 1695              		.cfi_endproc
 1696              	.LFE147:
 1698              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1699              		.align	1
 1700              		.global	HAL_NVIC_GetActive
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu fpv5-d16
 1706              	HAL_NVIC_GetActive:
 1707              	.LFB148:
 426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
ARM GAS  /tmp/ccmuMs8M.s 			page 96


 431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1708              		.loc 3 436 1
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 8
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712 0000 80B5     		push	{r7, lr}
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0002 82B0     		sub	sp, sp, #8
 1717              		.cfi_def_cfa_offset 16
 1718 0004 00AF     		add	r7, sp, #0
 1719              		.cfi_def_cfa_register 7
 1720 0006 0346     		mov	r3, r0
 1721 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1722              		.loc 3 441 10
 1723 000a B7F90630 		ldrsh	r3, [r7, #6]
 1724 000e 1846     		mov	r0, r3
 1725 0010 FFF7FEFF 		bl	__NVIC_GetActive
 1726 0014 0346     		mov	r3, r0
 442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1727              		.loc 3 442 1
 1728 0016 1846     		mov	r0, r3
 1729 0018 0837     		adds	r7, r7, #8
 1730              		.cfi_def_cfa_offset 8
 1731 001a BD46     		mov	sp, r7
 1732              		.cfi_def_cfa_register 13
 1733              		@ sp needed
 1734 001c 80BD     		pop	{r7, pc}
 1735              		.cfi_endproc
 1736              	.LFE148:
 1738              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1739              		.align	1
 1740              		.global	HAL_SYSTICK_CLKSourceConfig
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu fpv5-d16
 1746              	HAL_SYSTICK_CLKSourceConfig:
 1747              	.LFB149:
 443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
ARM GAS  /tmp/ccmuMs8M.s 			page 97


 450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1748              		.loc 3 453 1
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 0000 80B4     		push	{r7}
 1754              		.cfi_def_cfa_offset 4
 1755              		.cfi_offset 7, -4
 1756 0002 83B0     		sub	sp, sp, #12
 1757              		.cfi_def_cfa_offset 16
 1758 0004 00AF     		add	r7, sp, #0
 1759              		.cfi_def_cfa_register 7
 1760 0006 7860     		str	r0, [r7, #4]
 454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1761              		.loc 3 456 6
 1762 0008 7B68     		ldr	r3, [r7, #4]
 1763 000a 042B     		cmp	r3, #4
 1764 000c 06D1     		bne	.L94
 457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1765              		.loc 3 458 19
 1766 000e 094B     		ldr	r3, .L97
 1767 0010 1B68     		ldr	r3, [r3]
 1768 0012 084A     		ldr	r2, .L97
 1769 0014 43F00403 		orr	r3, r3, #4
 1770 0018 1360     		str	r3, [r2]
 459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1771              		.loc 3 464 1
 1772 001a 05E0     		b	.L96
 1773              	.L94:
 462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1774              		.loc 3 462 19
 1775 001c 054B     		ldr	r3, .L97
 1776 001e 1B68     		ldr	r3, [r3]
 1777 0020 044A     		ldr	r2, .L97
 1778 0022 23F00403 		bic	r3, r3, #4
 1779 0026 1360     		str	r3, [r2]
 1780              	.L96:
 1781              		.loc 3 464 1
 1782 0028 00BF     		nop
 1783 002a 0C37     		adds	r7, r7, #12
 1784              		.cfi_def_cfa_offset 4
 1785 002c BD46     		mov	sp, r7
 1786              		.cfi_def_cfa_register 13
 1787              		@ sp needed
 1788 002e 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccmuMs8M.s 			page 98


 1789              		.cfi_restore 7
 1790              		.cfi_def_cfa_offset 0
 1791 0032 7047     		bx	lr
 1792              	.L98:
 1793              		.align	2
 1794              	.L97:
 1795 0034 10E000E0 		.word	-536813552
 1796              		.cfi_endproc
 1797              	.LFE149:
 1799              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1800              		.align	1
 1801              		.global	HAL_SYSTICK_IRQHandler
 1802              		.syntax unified
 1803              		.thumb
 1804              		.thumb_func
 1805              		.fpu fpv5-d16
 1807              	HAL_SYSTICK_IRQHandler:
 1808              	.LFB150:
 465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1809              		.loc 3 471 1
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813 0000 80B5     		push	{r7, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 7, -8
 1816              		.cfi_offset 14, -4
 1817 0002 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1819              		.loc 3 472 3
 1820 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1821              		.loc 3 473 1
 1822 0008 00BF     		nop
 1823 000a 80BD     		pop	{r7, pc}
 1824              		.cfi_endproc
 1825              	.LFE150:
 1827              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1828              		.align	1
 1829              		.weak	HAL_SYSTICK_Callback
 1830              		.syntax unified
 1831              		.thumb
 1832              		.thumb_func
 1833              		.fpu fpv5-d16
 1835              	HAL_SYSTICK_Callback:
 1836              	.LFB151:
 474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
ARM GAS  /tmp/ccmuMs8M.s 			page 99


 478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1837              		.loc 3 480 1
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
 1842 0000 80B4     		push	{r7}
 1843              		.cfi_def_cfa_offset 4
 1844              		.cfi_offset 7, -4
 1845 0002 00AF     		add	r7, sp, #0
 1846              		.cfi_def_cfa_register 7
 481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    */
 484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1847              		.loc 3 484 1
 1848 0004 00BF     		nop
 1849 0006 BD46     		mov	sp, r7
 1850              		.cfi_def_cfa_register 13
 1851              		@ sp needed
 1852 0008 5DF8047B 		ldr	r7, [sp], #4
 1853              		.cfi_restore 7
 1854              		.cfi_def_cfa_offset 0
 1855 000c 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE151:
 1859              		.section	.text.HAL_GetCurrentCPUID,"ax",%progbits
 1860              		.align	1
 1861              		.global	HAL_GetCurrentCPUID
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1865              		.fpu fpv5-d16
 1867              	HAL_GetCurrentCPUID:
 1868              	.LFB152:
 485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if defined(DUAL_CORE)
 487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Returns the current CPU ID.
 490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval CPU identifier
 491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return  CM7_CPUID;
 497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return CM4_CPUID;
 501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #else
ARM GAS  /tmp/ccmuMs8M.s 			page 100


 505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @brief  Returns the current CPU ID.
 508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @retval CPU identifier
 509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** */
 510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1869              		.loc 3 511 1
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 1, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874 0000 80B4     		push	{r7}
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 7, -4
 1877 0002 00AF     		add	r7, sp, #0
 1878              		.cfi_def_cfa_register 7
 512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return  CM7_CPUID;
 1879              		.loc 3 512 11
 1880 0004 0323     		movs	r3, #3
 513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1881              		.loc 3 513 1
 1882 0006 1846     		mov	r0, r3
 1883 0008 BD46     		mov	sp, r7
 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 000a 5DF8047B 		ldr	r7, [sp], #4
 1887              		.cfi_restore 7
 1888              		.cfi_def_cfa_offset 0
 1889 000e 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE152:
 1893              		.text
 1894              	.Letext0:
 1895              		.file 4 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1896              		.file 5 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/ma
 1897              		.file 6 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 1898              		.file 7 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1899              		.file 8 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.
 1900              		.file 9 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 1901              		.file 10 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 1902              		.file 11 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 1903              		.file 12 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/m
 1904              		.file 13 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1905              		.file 14 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1906              		.file 15 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccmuMs8M.s 			page 101


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_cortex.c
     /tmp/ccmuMs8M.s:17     .text.__NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccmuMs8M.s:24     .text.__NVIC_SetPriorityGrouping:0000000000000000 __NVIC_SetPriorityGrouping
     /tmp/ccmuMs8M.s:83     .text.__NVIC_SetPriorityGrouping:0000000000000040 $d
     /tmp/ccmuMs8M.s:89     .text.__NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccmuMs8M.s:95     .text.__NVIC_GetPriorityGrouping:0000000000000000 __NVIC_GetPriorityGrouping
     /tmp/ccmuMs8M.s:125    .text.__NVIC_GetPriorityGrouping:0000000000000018 $d
     /tmp/ccmuMs8M.s:130    .text.__NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:136    .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
     /tmp/ccmuMs8M.s:185    .text.__NVIC_EnableIRQ:0000000000000038 $d
     /tmp/ccmuMs8M.s:190    .text.__NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:196    .text.__NVIC_DisableIRQ:0000000000000000 __NVIC_DisableIRQ
     /tmp/ccmuMs8M.s:269    .text.__NVIC_DisableIRQ:0000000000000040 $d
     /tmp/ccmuMs8M.s:274    .text.__NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:280    .text.__NVIC_GetPendingIRQ:0000000000000000 __NVIC_GetPendingIRQ
     /tmp/ccmuMs8M.s:335    .text.__NVIC_GetPendingIRQ:0000000000000040 $d
     /tmp/ccmuMs8M.s:340    .text.__NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:346    .text.__NVIC_SetPendingIRQ:0000000000000000 __NVIC_SetPendingIRQ
     /tmp/ccmuMs8M.s:396    .text.__NVIC_SetPendingIRQ:0000000000000038 $d
     /tmp/ccmuMs8M.s:401    .text.__NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:407    .text.__NVIC_ClearPendingIRQ:0000000000000000 __NVIC_ClearPendingIRQ
     /tmp/ccmuMs8M.s:457    .text.__NVIC_ClearPendingIRQ:0000000000000038 $d
     /tmp/ccmuMs8M.s:462    .text.__NVIC_GetActive:0000000000000000 $t
     /tmp/ccmuMs8M.s:468    .text.__NVIC_GetActive:0000000000000000 __NVIC_GetActive
     /tmp/ccmuMs8M.s:523    .text.__NVIC_GetActive:0000000000000040 $d
     /tmp/ccmuMs8M.s:528    .text.__NVIC_SetPriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:534    .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
     /tmp/ccmuMs8M.s:602    .text.__NVIC_SetPriority:000000000000004c $d
     /tmp/ccmuMs8M.s:608    .text.__NVIC_GetPriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:614    .text.__NVIC_GetPriority:0000000000000000 __NVIC_GetPriority
     /tmp/ccmuMs8M.s:676    .text.__NVIC_GetPriority:0000000000000048 $d
     /tmp/ccmuMs8M.s:682    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:688    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/ccmuMs8M.s:767    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:773    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/ccmuMs8M.s:857    .text.NVIC_SystemReset:0000000000000000 $t
     /tmp/ccmuMs8M.s:863    .text.NVIC_SystemReset:0000000000000000 NVIC_SystemReset
     /tmp/ccmuMs8M.s:921    .text.NVIC_SystemReset:0000000000000020 $d
     /tmp/ccmuMs8M.s:927    .text.SysTick_Config:0000000000000000 $t
     /tmp/ccmuMs8M.s:933    .text.SysTick_Config:0000000000000000 SysTick_Config
     /tmp/ccmuMs8M.s:993    .text.SysTick_Config:0000000000000040 $d
     /tmp/ccmuMs8M.s:998    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccmuMs8M.s:1005   .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccmuMs8M.s:1036   .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:1043   .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccmuMs8M.s:1086   .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:1093   .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccmuMs8M.s:1125   .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:1132   .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccmuMs8M.s:1164   .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccmuMs8M.s:1171   .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccmuMs8M.s:1192   .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccmuMs8M.s:1199   .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccmuMs8M.s:1230   .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccmuMs8M.s:1237   .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccmuMs8M.s:1283   .text.HAL_MPU_Disable:0000000000000024 $d
ARM GAS  /tmp/ccmuMs8M.s 			page 102


     /tmp/ccmuMs8M.s:1289   .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccmuMs8M.s:1296   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccmuMs8M.s:1360   .text.HAL_MPU_Enable:0000000000000034 $d
     /tmp/ccmuMs8M.s:1366   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccmuMs8M.s:1373   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccmuMs8M.s:1501   .text.HAL_MPU_ConfigRegion:0000000000000084 $d
     /tmp/ccmuMs8M.s:1506   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccmuMs8M.s:1513   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccmuMs8M.s:1535   .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccmuMs8M.s:1542   .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccmuMs8M.s:1581   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:1588   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccmuMs8M.s:1620   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:1627   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccmuMs8M.s:1660   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccmuMs8M.s:1667   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccmuMs8M.s:1699   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccmuMs8M.s:1706   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccmuMs8M.s:1739   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccmuMs8M.s:1746   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccmuMs8M.s:1795   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000034 $d
     /tmp/ccmuMs8M.s:1800   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccmuMs8M.s:1807   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccmuMs8M.s:1835   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccmuMs8M.s:1828   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccmuMs8M.s:1860   .text.HAL_GetCurrentCPUID:0000000000000000 $t
     /tmp/ccmuMs8M.s:1867   .text.HAL_GetCurrentCPUID:0000000000000000 HAL_GetCurrentCPUID

NO UNDEFINED SYMBOLS
