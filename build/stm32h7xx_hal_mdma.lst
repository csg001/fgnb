ARM GAS  /tmp/ccoEQtJm.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_mdma.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_MDMA_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_MDMA_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_MDMA_Init:
  26              	.LFB134:
  27              		.file 1 "./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c"
   1:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
   2:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
   3:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @file    stm32h7xx_hal_mdma.c
   4:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @author  MCD Application Team
   5:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  This file provides firmware functions to manage the following
   6:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         functionalities of the Master Direct Memory Access (MDMA) peripheral:
   7:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Initialization/de-initialization functions
   8:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + I/O operation functions
   9:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *           + Peripheral State and errors functions
  10:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   @verbatim     
  11:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ==============================================================================      
  12:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                         ##### How to use this driver #####
  13:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ============================================================================== 
  14:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   [..]
  15:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#) Enable and configure the peripheral to be connected to the MDMA Channel
  16:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  17:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        necessary) please refer to Reference manual for connection between peripherals
  18:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        and MDMA requests. 
  19:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           
  20:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    (#) 
  21:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        For a given Channel use HAL_MDMA_Init function to program the required configuration through
  22:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        transfer request , channel priority, data endianness, Source increment, destination incremen
  23:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        source data size, destination data size, data alignment, source Burst, destination Burst , 
  24:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        buffer Transfer Length, Transfer Trigger Mode (buffer transfer, block transfer, repeated blo
  25:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        or full transfer) source and destination block address offset, mask address and data.
  26:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
  27:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        If using the MDMA in linked list mode then use function HAL_MDMA_LinkedList_CreateNode to fi
  28:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that parameters given to the function HAL_MDMA_Init corresponds always to the node zero
  29:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Use function HAL_MDMA_LinkedList_AddNode to connect the created node to the linked list at a
  30:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        User can make a linked list circular using function HAL_MDMA_LinkedList_EnableCircularMode ,
  31:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        last node of the list to the first one in order to make the list circular.
ARM GAS  /tmp/ccoEQtJm.s 			page 2


  32:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        In this case the linked list will loop on node 1 : first node connected after the initial tr
  33:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
  34:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -@-   The initial transfer itself (node 0 corresponding to the Init).
  35:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             User can disable the circular mode using function HAL_MDMA_LinkedList_DisableCircularMo
  36:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             the connection between last node and first one.
  37:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  38:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Function HAL_MDMA_LinkedList_RemoveNode can be used to remove (disconnect) a node from the t
  39:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        When a linked list is circular (last node connected to first one), if removing node1  (node 
  40:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        the linked list remains circular and node 2 becomes the first one.
  41:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Note that if the linked list is made circular the transfer will loop infinitely (or until ab
  42:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  43:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  44:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        (+) User can select the transfer trigger mode (parameter TransferTriggerMode) to define the 
  45:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****            transfer upon a request :
  46:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BUFFER_TRANSFER : each request triggers a transfer of BufferTransferLength d
  47:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with BufferTransferLength defined within the HAL_MDMA_Init.
  48:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_BLOCK_TRANSFER : each request triggers a transfer of a block 
  49:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size defined within the function HAL_MDMA_Start/HAL_MDMA_Start_IT 
  50:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  51:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_REPEAT_BLOCK_TRANSFER : each request triggers a transfer of a number of bloc
  52:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                with block size and number of blocks defined within the function HAL_MDMA_Start/HAL_
  53:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                or within the current linked list node parameters.
  54:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              (++) MDMA_FULL_TRANSFER : each request triggers a full transfer 
  55:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               all blocks and all nodes(if a linked list has been created using HAL_MDMA_LinkedList_
  56:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
  57:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Polling mode IO operation ***
  58:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =================================   
  59:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..] 
  60:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start() to start MDMA transfer after the configuration of Source 
  61:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               address and destination address and the Length of data to be transferred.
  62:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_PollForTransfer() to poll for the end of current transfer or a transfer 
  63:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              In this case a fixed Timeout can be configured by User depending from his application.
  64:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort() function to abort the current transfer : blocking method this AP
  65:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               when the abort ends or timeout (should not be called from an interrupt service routin
  66:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                
  67:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** Interrupt mode IO operation ***    
  68:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      =================================== 
  69:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]     
  70:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Configure the MDMA interrupt priority using HAL_NVIC_SetPriority()
  71:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Enable the MDMA IRQ handler using HAL_NVIC_EnableIRQ() 
  72:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Start_IT() to start MDMA transfer after the configuration of  
  73:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Source address and destination address and the Length of data to be transferred. In t
  74:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               case the MDMA interrupt is configured. 
  75:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_IRQHandler() called under MDMA_IRQHandler() Interrupt subroutine
  76:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) At the end of data transfer HAL_MDMA_IRQHandler() function is executed and user can 
  77:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  78:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               XferErrorCallback (i.e a member of MDMA handle structure). 
  79:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  80:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use HAL_MDMA_Abort_IT() function to abort the current transfer : non-blocking method.
  81:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               then the callback XferAbortCallback (if specified  by the user) is asserted once the 
  82:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (could be called from an interrupt service routine).
  83:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  84:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           (+) Use functions HAL_MDMA_RegisterCallback and HAL_MDMA_UnRegisterCallback respectevely 
  85:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               from the following list :
  86:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferCpltCallback            : transfer complete callback.
  87:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBufferCpltCallback      : buffer transfer complete callback.
  88:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferBlockCpltCallback       : block transfer complete callback.
ARM GAS  /tmp/ccoEQtJm.s 			page 3


  89:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferRepeatBlockCpltCallback : repeated block transfer complete callback.        
  90:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferErrorCallback           : transfer error callback.      
  91:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) XferAbortCallback           : transfer abort complete callback.    
  92:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
  93:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
  94:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          (+)  If the transfer Request corresponds to SW request (MDMA_REQUEST_SW) User can use func
  95:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               trigger requests manually. Function HAL_MDMA_GenerateSWRequest must be used with the 
  96:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) This function returns an error if used while the Transfer has ended or not start
  97:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) If used while the current request has not been served yet (current request trans
  98:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                 this function returns an error and the new request is ignored.
  99:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               
 100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               Generally this function should be used in conjunctions with the MDMA callbacks:      
 101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 1:  
 102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for buffer transfer complete (using callback ID set to H
 104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the buffer transfer complete callback is asserted first buffer has been
 106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    request using HAL_MDMA_GenerateSWRequest. 
 107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               (++) example 2:  
 109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Configure a transfer with request set to MDMA_REQUEST_SW and trigger mode se
 110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) Register a callback for block transfer complete (using callback ID HAL_MDMA_
 111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) After calling HAL_MDMA_Start_IT the MDMA will issue the transfer of a first 
 112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                  (+++) When the block transfer complete callback is asserted the first block has be
 113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                    for a new block transfer request using HAL_MDMA_GenerateSWRequest. 
 114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  Use HAL_MDMA_GetState() function to return the MDMA state and HAL_MDMA_GetError() in case
 116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      *** MDMA HAL driver macros list ***
 118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      ============================================= 
 119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..]
 120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        Below the list of most used macros in MDMA HAL driver.
 121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****        
 122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE: Enable the specified MDMA Channel.
 123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE: Disable the specified MDMA Channel.
 124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_FLAG: Get the MDMA Channel pending flags.
 125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_CLEAR_FLAG: Clear the MDMA Channel pending flags.
 126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_ENABLE_IT: Enable the specified MDMA Channel interrupts.
 127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_DISABLE_IT: Disable the specified MDMA Channel interrupts.
 128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) __HAL_MDMA_GET_IT_SOURCE: Check whether the specified MDMA Channel interrupt has occurred
 129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      
 130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      [..] 
 131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (@) You can refer to the header file of the MDMA HAL driver for more useful macros.
 132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     @endverbatim
 136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
 137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @attention
 138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
 140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * All rights reserved.</center></h2>
 141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * the "License"; You may not use this file except in compliance with the
 144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * License. You may obtain a copy of the License at:
 145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccoEQtJm.s 			page 4


 146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   ******************************************************************************
 148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Includes ------------------------------------------------------------------*/
 151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #include "stm32h7xx_hal.h"
 152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup STM32H7xx_HAL_Driver
 154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @defgroup MDMA  MDMA
 158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief MDMA HAL module driver
 159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #ifdef HAL_MDMA_MODULE_ENABLED
 163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private typedef -----------------------------------------------------------*/
 165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private constants ---------------------------------------------------------*/
 166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Constants
 167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  * @{
 168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  */
 169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_TIMEOUT_MDMA_ABORT    5U    /* 5 ms */
 170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** #define HAL_MDMA_CHANNEL_SIZE     0x40U /* an MDMA instance channel size is 64 byte  */ 
 171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private macro -------------------------------------------------------------*/
 175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private variables ---------------------------------------------------------*/
 176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /* Private function prototypes -----------------------------------------------*/
 177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions_Prototypes
 178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
 181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma);
 182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions MDMA Exported Functions
 188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group1
 192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
 194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****              ##### Initialization and de-initialization functions  #####
 196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
 197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This section provides functions allowing to :
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Initialize and de-initialize the MDMA channel.
 200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       Register and Unregister MDMA callbacks    
 201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
 202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_Init() function follows the MDMA channel configuration procedures as described in
ARM GAS  /tmp/ccoEQtJm.s 			page 5


 203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     reference manual. 
 204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     The HAL_MDMA_DeInit function allows to deinitialize the MDMA channel.
 205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     HAL_MDMA_RegisterCallback and  HAL_MDMA_UnRegisterCallback functions allows 
 206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     respectevely to register/unregister an MDMA callback function.
 207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA according to the specified
 214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef and create the associated handle.
 215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
 216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
 217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
 220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
  28              		.loc 1 220 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart = HAL_GetTick();
  41              		.loc 1 221 24
  42 0008 FFF7FEFF 		bl	HAL_GetTick
  43 000c F860     		str	r0, [r7, #12]
 222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
  44              		.loc 1 224 5
  45 000e 7B68     		ldr	r3, [r7, #4]
  46 0010 002B     		cmp	r3, #0
  47 0012 01D1     		bne	.L2
 225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
  48              		.loc 1 226 12
  49 0014 0123     		movs	r3, #1
  50 0016 3BE0     		b	.L3
  51              	.L2:
 227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_STREAM_ALL_INSTANCE(hmdma->Instance));
 231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(hmdma->Init.Priority));
 232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(hmdma->Init.Endianness));
 233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(hmdma->Init.Request));
 234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(hmdma->Init.SourceInc));
 235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(hmdma->Init.DestinationInc));
ARM GAS  /tmp/ccoEQtJm.s 			page 6


 236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(hmdma->Init.SourceDataSize));
 237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(hmdma->Init.DestDataSize));
 238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(hmdma->Init.DataAlignment));
 239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(hmdma->Init.SourceBurst));
 240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(hmdma->Init.DestBurst));
 241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(hmdma->Init.BufferTransferLength));
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(hmdma->Init.TransferTriggerMode));
 243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
 244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset)); 
 245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Allocate lock resource */
 248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
  52              		.loc 1 248 3
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a 0022     		movs	r2, #0
  55 001c 83F83C20 		strb	r2, [r3, #60]
 249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Change MDMA peripheral state */
 251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_BUSY;
  56              		.loc 1 251 16
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 0222     		movs	r2, #2
  59 0024 83F83D20 		strb	r2, [r3, #61]
 252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the MDMA channel */
 254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
  60              		.loc 1 254 3
  61 0028 7B68     		ldr	r3, [r7, #4]
  62 002a 1B68     		ldr	r3, [r3]
  63 002c DA68     		ldr	r2, [r3, #12]
  64 002e 7B68     		ldr	r3, [r7, #4]
  65 0030 1B68     		ldr	r3, [r3]
  66 0032 22F00102 		bic	r2, r2, #1
  67 0036 DA60     		str	r2, [r3, #12]
 255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check if the MDMA channel is effectively disabled */
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
  68              		.loc 1 257 8
  69 0038 0FE0     		b	.L4
  70              	.L5:
 258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
 260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
  71              		.loc 1 260 9
  72 003a FFF7FEFF 		bl	HAL_GetTick
  73 003e 0246     		mov	r2, r0
  74              		.loc 1 260 23
  75 0040 FB68     		ldr	r3, [r7, #12]
  76 0042 D31A     		subs	r3, r2, r3
  77              		.loc 1 260 7
  78 0044 052B     		cmp	r3, #5
  79 0046 08D9     		bls	.L4
 261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Update error code */
 263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
  80              		.loc 1 263 24
ARM GAS  /tmp/ccoEQtJm.s 			page 7


  81 0048 7B68     		ldr	r3, [r7, #4]
  82 004a 4022     		movs	r2, #64
  83 004c 9A66     		str	r2, [r3, #104]
 264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state */
 266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
  84              		.loc 1 266 20
  85 004e 7B68     		ldr	r3, [r7, #4]
  86 0050 0322     		movs	r2, #3
  87 0052 83F83D20 		strb	r2, [r3, #61]
 267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
  88              		.loc 1 268 14
  89 0056 0123     		movs	r3, #1
  90 0058 1AE0     		b	.L3
  91              	.L4:
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
  92              		.loc 1 257 15
  93 005a 7B68     		ldr	r3, [r7, #4]
  94 005c 1B68     		ldr	r3, [r3]
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
  95              		.loc 1 257 25
  96 005e DB68     		ldr	r3, [r3, #12]
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
  97              		.loc 1 257 31
  98 0060 03F00103 		and	r3, r3, #1
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
  99              		.loc 1 257 8
 100 0064 002B     		cmp	r3, #0
 101 0066 E8D1     		bne	.L5
 269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA channel registers */
 273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_Init(hmdma);
 102              		.loc 1 273 3
 103 0068 7868     		ldr	r0, [r7, #4]
 104 006a FFF7FEFF 		bl	MDMA_Init
 274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the MDMA first/last linkedlist node addresses and node counter */
 276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0; 
 105              		.loc 1 276 38
 106 006e 7B68     		ldr	r3, [r7, #4]
 107 0070 0022     		movs	r2, #0
 108 0072 DA65     		str	r2, [r3, #92]
 277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 109              		.loc 1 277 38
 110 0074 7B68     		ldr	r3, [r7, #4]
 111 0076 0022     		movs	r2, #0
 112 0078 1A66     		str	r2, [r3, #96]
 278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0;  
 113              		.loc 1 278 33
 114 007a 7B68     		ldr	r3, [r7, #4]
 115 007c 0022     		movs	r2, #0
 116 007e 5A66     		str	r2, [r3, #100]
 279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
ARM GAS  /tmp/ccoEQtJm.s 			page 8


 281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 117              		.loc 1 281 20
 118 0080 7B68     		ldr	r3, [r7, #4]
 119 0082 0022     		movs	r2, #0
 120 0084 9A66     		str	r2, [r3, #104]
 282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 121              		.loc 1 284 16
 122 0086 7B68     		ldr	r3, [r7, #4]
 123 0088 0122     		movs	r2, #1
 124 008a 83F83D20 		strb	r2, [r3, #61]
 285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 125              		.loc 1 286 10
 126 008e 0023     		movs	r3, #0
 127              	.L3:
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 128              		.loc 1 287 1
 129 0090 1846     		mov	r0, r3
 130 0092 1037     		adds	r7, r7, #16
 131              		.cfi_def_cfa_offset 8
 132 0094 BD46     		mov	sp, r7
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 0096 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE134:
 139              		.section	.text.HAL_MDMA_DeInit,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_MDMA_DeInit
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	HAL_MDMA_DeInit:
 148              	.LFB135:
 288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  DeInitializes the MDMA peripheral 
 291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
 292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
 293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_DeInit(MDMA_HandleTypeDef *hmdma)
 296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {  
 149              		.loc 1 296 1
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 80B4     		push	{r7}
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 7, -4
 157 0002 83B0     		sub	sp, sp, #12
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccoEQtJm.s 			page 9


 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
 297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 162              		.loc 1 299 5
 163 0008 7B68     		ldr	r3, [r7, #4]
 164 000a 002B     		cmp	r3, #0
 165 000c 01D1     		bne	.L7
 300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 166              		.loc 1 301 12
 167 000e 0123     		movs	r3, #1
 168 0010 54E0     		b	.L8
 169              	.L7:
 302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral state */
 305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->State == HAL_MDMA_STATE_BUSY)
 170              		.loc 1 305 11
 171 0012 7B68     		ldr	r3, [r7, #4]
 172 0014 93F83D30 		ldrb	r3, [r3, #61]
 173 0018 DBB2     		uxtb	r3, r3
 174              		.loc 1 305 5
 175 001a 022B     		cmp	r3, #2
 176 001c 05D1     		bne	.L9
 306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_BUSY;
 177              		.loc 1 307 22
 178 001e 7B68     		ldr	r3, [r7, #4]
 179 0020 4FF48072 		mov	r2, #256
 180 0024 9A66     		str	r2, [r3, #104]
 308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 181              		.loc 1 308 12
 182 0026 0123     		movs	r3, #1
 183 0028 48E0     		b	.L8
 184              	.L9:
 309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Disable the selected MDMA Channelx */
 312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_DISABLE(hmdma);
 185              		.loc 1 312 3
 186 002a 7B68     		ldr	r3, [r7, #4]
 187 002c 1B68     		ldr	r3, [r3]
 188 002e DA68     		ldr	r2, [r3, #12]
 189 0030 7B68     		ldr	r3, [r7, #4]
 190 0032 1B68     		ldr	r3, [r3]
 191 0034 22F00102 		bic	r2, r2, #1
 192 0038 DA60     		str	r2, [r3, #12]
 313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset MDMA Channel control register */
 315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR  = 0;
 193              		.loc 1 315 8
 194 003a 7B68     		ldr	r3, [r7, #4]
 195 003c 1B68     		ldr	r3, [r3]
 196              		.loc 1 315 25
 197 003e 0022     		movs	r2, #0
ARM GAS  /tmp/ccoEQtJm.s 			page 10


 198 0040 DA60     		str	r2, [r3, #12]
 316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR = 0;
 199              		.loc 1 316 8
 200 0042 7B68     		ldr	r3, [r7, #4]
 201 0044 1B68     		ldr	r3, [r3]
 202              		.loc 1 316 25
 203 0046 0022     		movs	r2, #0
 204 0048 1A61     		str	r2, [r3, #16]
 317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 205              		.loc 1 317 8
 206 004a 7B68     		ldr	r3, [r7, #4]
 207 004c 1B68     		ldr	r3, [r3]
 208              		.loc 1 317 27
 209 004e 0022     		movs	r2, #0
 210 0050 5A61     		str	r2, [r3, #20]
 318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = 0;
 211              		.loc 1 318 8
 212 0052 7B68     		ldr	r3, [r7, #4]
 213 0054 1B68     		ldr	r3, [r3]
 214              		.loc 1 318 25
 215 0056 0022     		movs	r2, #0
 216 0058 9A61     		str	r2, [r3, #24]
 319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = 0;  
 217              		.loc 1 319 8
 218 005a 7B68     		ldr	r3, [r7, #4]
 219 005c 1B68     		ldr	r3, [r3]
 220              		.loc 1 319 25
 221 005e 0022     		movs	r2, #0
 222 0060 DA61     		str	r2, [r3, #28]
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBRUR = 0;
 223              		.loc 1 320 8
 224 0062 7B68     		ldr	r3, [r7, #4]
 225 0064 1B68     		ldr	r3, [r3]
 226              		.loc 1 320 26
 227 0066 0022     		movs	r2, #0
 228 0068 1A62     		str	r2, [r3, #32]
 321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = 0;
 229              		.loc 1 321 8
 230 006a 7B68     		ldr	r3, [r7, #4]
 231 006c 1B68     		ldr	r3, [r3]
 232              		.loc 1 321 25
 233 006e 0022     		movs	r2, #0
 234 0070 5A62     		str	r2, [r3, #36]
 322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTBR = 0;
 235              		.loc 1 322 8
 236 0072 7B68     		ldr	r3, [r7, #4]
 237 0074 1B68     		ldr	r3, [r3]
 238              		.loc 1 322 25
 239 0076 0022     		movs	r2, #0
 240 0078 9A62     		str	r2, [r3, #40]
 323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMAR = 0;
 241              		.loc 1 323 8
 242 007a 7B68     		ldr	r3, [r7, #4]
 243 007c 1B68     		ldr	r3, [r3]
 244              		.loc 1 323 25
 245 007e 0022     		movs	r2, #0
 246 0080 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccoEQtJm.s 			page 11


 324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CMDR = 0;
 247              		.loc 1 324 8
 248 0082 7B68     		ldr	r3, [r7, #4]
 249 0084 1B68     		ldr	r3, [r3]
 250              		.loc 1 324 25
 251 0086 0022     		movs	r2, #0
 252 0088 5A63     		str	r2, [r3, #52]
 325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all flags */
 327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_F
 253              		.loc 1 327 3
 254 008a 7B68     		ldr	r3, [r7, #4]
 255 008c 1B68     		ldr	r3, [r3]
 256 008e 1F22     		movs	r2, #31
 257 0090 5A60     		str	r2, [r3, #4]
 328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset the  MDMA first/last linkedlist node addresses and node counter */
 330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->FirstLinkedListNodeAddress  = 0; 
 258              		.loc 1 330 38
 259 0092 7B68     		ldr	r3, [r7, #4]
 260 0094 0022     		movs	r2, #0
 261 0096 DA65     		str	r2, [r3, #92]
 331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LastLinkedListNodeAddress   = 0; 
 262              		.loc 1 331 38
 263 0098 7B68     		ldr	r3, [r7, #4]
 264 009a 0022     		movs	r2, #0
 265 009c 1A66     		str	r2, [r3, #96]
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->LinkedListNodeCounter  = 0; 
 266              		.loc 1 332 33
 267 009e 7B68     		ldr	r3, [r7, #4]
 268 00a0 0022     		movs	r2, #0
 269 00a2 5A66     		str	r2, [r3, #100]
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the error code */
 335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 270              		.loc 1 335 20
 271 00a4 7B68     		ldr	r3, [r7, #4]
 272 00a6 0022     		movs	r2, #0
 273 00a8 9A66     		str	r2, [r3, #104]
 336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Initialize the MDMA state */
 338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_RESET;
 274              		.loc 1 338 16
 275 00aa 7B68     		ldr	r3, [r7, #4]
 276 00ac 0022     		movs	r2, #0
 277 00ae 83F83D20 		strb	r2, [r3, #61]
 339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 278              		.loc 1 341 3
 279 00b2 7B68     		ldr	r3, [r7, #4]
 280 00b4 0022     		movs	r2, #0
 281 00b6 83F83C20 		strb	r2, [r3, #60]
 342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 282              		.loc 1 343 10
 283 00ba 0023     		movs	r3, #0
ARM GAS  /tmp/ccoEQtJm.s 			page 12


 284              	.L8:
 344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 285              		.loc 1 344 1
 286 00bc 1846     		mov	r0, r3
 287 00be 0C37     		adds	r7, r7, #12
 288              		.cfi_def_cfa_offset 4
 289 00c0 BD46     		mov	sp, r7
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 00c2 5DF8047B 		ldr	r7, [sp], #4
 293              		.cfi_restore 7
 294              		.cfi_def_cfa_offset 0
 295 00c6 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE135:
 299              		.section	.text.HAL_MDMA_ConfigPostRequestMask,"ax",%progbits
 300              		.align	1
 301              		.global	HAL_MDMA_ConfigPostRequestMask
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	HAL_MDMA_ConfigPostRequestMask:
 308              	.LFB136:
 345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Config the Post request Mask address and Mask data
 348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma      : pointer to a MDMA_HandleTypeDef structure that contains
 349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskAddress: specifies the address to be updated (written) with MaskData after a reques
 351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  MaskData:    specifies the value to be written to MaskAddress after a request is served
 352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                      MaskAddress and MaskData could be used to automatically clear a peripheral
 353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */  
 355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_ConfigPostRequestMask(MDMA_HandleTypeDef *hmdma, uint32_t MaskAddress, u
 356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 309              		.loc 1 356 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 24
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 87B0     		sub	sp, sp, #28
 318              		.cfi_def_cfa_offset 32
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 F860     		str	r0, [r7, #12]
 322 0008 B960     		str	r1, [r7, #8]
 323 000a 7A60     		str	r2, [r7, #4]
 357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef  status = HAL_OK;
 324              		.loc 1 357 22
 325 000c 0023     		movs	r3, #0
 326 000e FB75     		strb	r3, [r7, #23]
 358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
ARM GAS  /tmp/ccoEQtJm.s 			page 13


 360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 327              		.loc 1 360 5
 328 0010 FB68     		ldr	r3, [r7, #12]
 329 0012 002B     		cmp	r3, #0
 330 0014 01D1     		bne	.L11
 361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 331              		.loc 1 362 12
 332 0016 0123     		movs	r3, #1
 333 0018 3EE0     		b	.L12
 334              	.L11:
 363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 335              		.loc 1 366 3
 336 001a FB68     		ldr	r3, [r7, #12]
 337 001c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 338 0020 012B     		cmp	r3, #1
 339 0022 01D1     		bne	.L13
 340              		.loc 1 366 3 is_stmt 0 discriminator 1
 341 0024 0223     		movs	r3, #2
 342 0026 37E0     		b	.L12
 343              	.L13:
 344              		.loc 1 366 3 discriminator 2
 345 0028 FB68     		ldr	r3, [r7, #12]
 346 002a 0122     		movs	r2, #1
 347 002c 83F83C20 		strb	r2, [r3, #60]
 367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 348              		.loc 1 368 35 is_stmt 1 discriminator 2
 349 0030 FB68     		ldr	r3, [r7, #12]
 350 0032 93F83D30 		ldrb	r3, [r3, #61]
 351 0036 DBB2     		uxtb	r3, r3
 352              		.loc 1 368 5 discriminator 2
 353 0038 012B     		cmp	r3, #1
 354 003a 26D1     		bne	.L14
 369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if HW request set Post Request MaskAddress and MaskData,  */
 371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
 355              		.loc 1 371 14
 356 003c FB68     		ldr	r3, [r7, #12]
 357 003e 1B68     		ldr	r3, [r3]
 358              		.loc 1 371 24
 359 0040 1B69     		ldr	r3, [r3, #16]
 360              		.loc 1 371 31
 361 0042 03F08043 		and	r3, r3, #1073741824
 362              		.loc 1 371 7
 363 0046 002B     		cmp	r3, #0
 364 0048 1CD1     		bne	.L15
 372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Set the HW request clear Mask and Data */
 374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMAR = MaskAddress;
 365              		.loc 1 374 12
 366 004a FB68     		ldr	r3, [r7, #12]
 367 004c 1B68     		ldr	r3, [r3]
 368              		.loc 1 374 29
ARM GAS  /tmp/ccoEQtJm.s 			page 14


 369 004e BA68     		ldr	r2, [r7, #8]
 370 0050 1A63     		str	r2, [r3, #48]
 375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CMDR = MaskData;
 371              		.loc 1 375 12
 372 0052 FB68     		ldr	r3, [r7, #12]
 373 0054 1B68     		ldr	r3, [r3]
 374              		.loc 1 375 29
 375 0056 7A68     		ldr	r2, [r7, #4]
 376 0058 5A63     		str	r2, [r3, #52]
 376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* 
 378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by SW : BWM could be set to 1 or 0.
 379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       -If the request is done by a peripheral :
 380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address not set (0) => BWM must be set to 0
 381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****          If mask address set (different than 0) => BWM could be set to 1 or 0
 382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */
 383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(MaskAddress == 0U)
 377              		.loc 1 383 9
 378 005a BB68     		ldr	r3, [r7, #8]
 379 005c 002B     		cmp	r3, #0
 380 005e 08D1     		bne	.L16
 384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
 381              		.loc 1 385 14
 382 0060 FB68     		ldr	r3, [r7, #12]
 383 0062 1B68     		ldr	r3, [r3]
 384              		.loc 1 385 31
 385 0064 1A69     		ldr	r2, [r3, #16]
 386              		.loc 1 385 14
 387 0066 FB68     		ldr	r3, [r7, #12]
 388 0068 1B68     		ldr	r3, [r3]
 389              		.loc 1 385 31
 390 006a 22F00042 		bic	r2, r2, #-2147483648
 391 006e 1A61     		str	r2, [r3, #16]
 392 0070 0DE0     		b	.L19
 393              	.L16:
 386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
 394              		.loc 1 389 14
 395 0072 FB68     		ldr	r3, [r7, #12]
 396 0074 1B68     		ldr	r3, [r3]
 397              		.loc 1 389 31
 398 0076 1A69     		ldr	r2, [r3, #16]
 399              		.loc 1 389 14
 400 0078 FB68     		ldr	r3, [r7, #12]
 401 007a 1B68     		ldr	r3, [r3]
 402              		.loc 1 389 31
 403 007c 42F00042 		orr	r2, r2, #-2147483648
 404 0080 1A61     		str	r2, [r3, #16]
 405 0082 04E0     		b	.L19
 406              	.L15:
 390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
ARM GAS  /tmp/ccoEQtJm.s 			page 15


 394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Return error status */
 395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status =  HAL_ERROR;      
 407              		.loc 1 395 14
 408 0084 0123     		movs	r3, #1
 409 0086 FB75     		strb	r3, [r7, #23]
 410 0088 01E0     		b	.L19
 411              	.L14:
 396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 412              		.loc 1 401 12
 413 008a 0123     		movs	r3, #1
 414 008c FB75     		strb	r3, [r7, #23]
 415              	.L19:
 402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 416              		.loc 1 404 3
 417 008e FB68     		ldr	r3, [r7, #12]
 418 0090 0022     		movs	r2, #0
 419 0092 83F83C20 		strb	r2, [r3, #60]
 405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;  
 420              		.loc 1 406 10
 421 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 422              	.L12:
 407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 423              		.loc 1 407 1
 424 0098 1846     		mov	r0, r3
 425 009a 1C37     		adds	r7, r7, #28
 426              		.cfi_def_cfa_offset 4
 427 009c BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 009e 5DF8047B 		ldr	r7, [sp], #4
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
 433 00a2 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE136:
 437              		.section	.text.HAL_MDMA_RegisterCallback,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_MDMA_RegisterCallback
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv5-d16
 445              	HAL_MDMA_RegisterCallback:
 446              	.LFB137:
 408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Register callbacks
 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                pointer to a MDMA_HandleTypeDef structure that contains
 412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
ARM GAS  /tmp/ccoEQtJm.s 			page 16


 413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pCallback:            pointer to callbacsk function.
 415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */                      
 417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_RegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef C
 418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {  
 447              		.loc 1 418 1
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 24
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 0000 80B4     		push	{r7}
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 7, -4
 455 0002 87B0     		sub	sp, sp, #28
 456              		.cfi_def_cfa_offset 32
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0006 F860     		str	r0, [r7, #12]
 460 0008 0B46     		mov	r3, r1
 461 000a 7A60     		str	r2, [r7, #4]
 462 000c FB72     		strb	r3, [r7, #11]
 419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 463              		.loc 1 419 21
 464 000e 0023     		movs	r3, #0
 465 0010 FB75     		strb	r3, [r7, #23]
 420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 466              		.loc 1 422 5
 467 0012 FB68     		ldr	r3, [r7, #12]
 468 0014 002B     		cmp	r3, #0
 469 0016 01D1     		bne	.L21
 423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 470              		.loc 1 424 12
 471 0018 0123     		movs	r3, #1
 472 001a 44E0     		b	.L22
 473              	.L21:
 425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 474              		.loc 1 428 3
 475 001c FB68     		ldr	r3, [r7, #12]
 476 001e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 477 0022 012B     		cmp	r3, #1
 478 0024 01D1     		bne	.L23
 479              		.loc 1 428 3 is_stmt 0 discriminator 1
 480 0026 0223     		movs	r3, #2
 481 0028 3DE0     		b	.L22
 482              	.L23:
 483              		.loc 1 428 3 discriminator 2
 484 002a FB68     		ldr	r3, [r7, #12]
 485 002c 0122     		movs	r2, #1
 486 002e 83F83C20 		strb	r2, [r3, #60]
 429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
ARM GAS  /tmp/ccoEQtJm.s 			page 17


 430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 487              		.loc 1 430 35 is_stmt 1 discriminator 2
 488 0032 FB68     		ldr	r3, [r7, #12]
 489 0034 93F83D30 		ldrb	r3, [r3, #61]
 490 0038 DBB2     		uxtb	r3, r3
 491              		.loc 1 430 5 discriminator 2
 492 003a 012B     		cmp	r3, #1
 493 003c 2AD1     		bne	.L24
 431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
 494              		.loc 1 432 5
 495 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 496 0040 052B     		cmp	r3, #5
 497 0042 2AD8     		bhi	.L35
 498 0044 01A2     		adr	r2, .L27
 499 0046 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 500 004a 00BF     		.p2align 2
 501              	.L27:
 502 004c 65000000 		.word	.L32+1
 503 0050 6D000000 		.word	.L31+1
 504 0054 75000000 		.word	.L30+1
 505 0058 7D000000 		.word	.L29+1
 506 005c 85000000 		.word	.L28+1
 507 0060 8D000000 		.word	.L26+1
 508              		.p2align 1
 509              	.L32:
 433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = pCallback;
 510              		.loc 1 435 31
 511 0064 FB68     		ldr	r3, [r7, #12]
 512 0066 7A68     		ldr	r2, [r7, #4]
 513 0068 5A64     		str	r2, [r3, #68]
 436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 514              		.loc 1 436 7
 515 006a 17E0     		b	.L34
 516              	.L31:
 437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = pCallback;
 517              		.loc 1 439 37
 518 006c FB68     		ldr	r3, [r7, #12]
 519 006e 7A68     		ldr	r2, [r7, #4]
 520 0070 9A64     		str	r2, [r3, #72]
 440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 521              		.loc 1 440 7
 522 0072 13E0     		b	.L34
 523              	.L30:
 441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = pCallback;
 524              		.loc 1 443 36
 525 0074 FB68     		ldr	r3, [r7, #12]
 526 0076 7A68     		ldr	r2, [r7, #4]
 527 0078 DA64     		str	r2, [r3, #76]
 444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 528              		.loc 1 444 7
ARM GAS  /tmp/ccoEQtJm.s 			page 18


 529 007a 0FE0     		b	.L34
 530              	.L29:
 445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = pCallback;
 531              		.loc 1 447 42
 532 007c FB68     		ldr	r3, [r7, #12]
 533 007e 7A68     		ldr	r2, [r7, #4]
 534 0080 1A65     		str	r2, [r3, #80]
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 535              		.loc 1 448 7
 536 0082 0BE0     		b	.L34
 537              	.L28:
 449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = pCallback;
 538              		.loc 1 451 32
 539 0084 FB68     		ldr	r3, [r7, #12]
 540 0086 7A68     		ldr	r2, [r7, #4]
 541 0088 5A65     		str	r2, [r3, #84]
 452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 542              		.loc 1 452 7
 543 008a 07E0     		b	.L34
 544              	.L26:
 453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = pCallback;
 545              		.loc 1 455 32
 546 008c FB68     		ldr	r3, [r7, #12]
 547 008e 7A68     		ldr	r2, [r7, #4]
 548 0090 9A65     		str	r2, [r3, #88]
 456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 549              		.loc 1 456 7
 550 0092 03E0     		b	.L34
 551              	.L24:
 457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status =  HAL_ERROR;
 552              		.loc 1 465 12
 553 0094 0123     		movs	r3, #1
 554 0096 FB75     		strb	r3, [r7, #23]
 555 0098 00E0     		b	.L34
 556              	.L35:
 459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 557              		.loc 1 459 7
 558 009a 00BF     		nop
 559              	.L34:
 466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
ARM GAS  /tmp/ccoEQtJm.s 			page 19


 560              		.loc 1 469 3
 561 009c FB68     		ldr	r3, [r7, #12]
 562 009e 0022     		movs	r2, #0
 563 00a0 83F83C20 		strb	r2, [r3, #60]
 470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 564              		.loc 1 471 10
 565 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 566              	.L22:
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 567              		.loc 1 472 1
 568 00a6 1846     		mov	r0, r3
 569 00a8 1C37     		adds	r7, r7, #28
 570              		.cfi_def_cfa_offset 4
 571 00aa BD46     		mov	sp, r7
 572              		.cfi_def_cfa_register 13
 573              		@ sp needed
 574 00ac 5DF8047B 		ldr	r7, [sp], #4
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 00b0 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE137:
 581 00b2 00BF     		.section	.text.HAL_MDMA_UnRegisterCallback,"ax",%progbits
 582              		.align	1
 583              		.global	HAL_MDMA_UnRegisterCallback
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv5-d16
 589              	HAL_MDMA_UnRegisterCallback:
 590              	.LFB138:
 473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  UnRegister callbacks
 476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:                 pointer to a MDMA_HandleTypeDef structure that contains
 477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               the configuration information for the specified MDMA Channel.
 478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CallbackID:           User Callback identifier
 479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                               a HAL_MDMA_CallbackIDTypeDef ENUM as parameter.
 480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_UnRegisterCallback(MDMA_HandleTypeDef *hmdma, HAL_MDMA_CallbackIDTypeDef
 483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 591              		.loc 1 483 1
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 85B0     		sub	sp, sp, #20
 600              		.cfi_def_cfa_offset 24
 601 0004 00AF     		add	r7, sp, #0
 602              		.cfi_def_cfa_register 7
 603 0006 7860     		str	r0, [r7, #4]
 604 0008 0B46     		mov	r3, r1
ARM GAS  /tmp/ccoEQtJm.s 			page 20


 605 000a FB70     		strb	r3, [r7, #3]
 484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef status = HAL_OK;
 606              		.loc 1 484 21
 607 000c 0023     		movs	r3, #0
 608 000e FB73     		strb	r3, [r7, #15]
 485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 609              		.loc 1 487 5
 610 0010 7B68     		ldr	r3, [r7, #4]
 611 0012 002B     		cmp	r3, #0
 612 0014 01D1     		bne	.L37
 488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 613              		.loc 1 489 12
 614 0016 0123     		movs	r3, #1
 615 0018 5AE0     		b	.L38
 616              	.L37:
 490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 617              		.loc 1 493 3
 618 001a 7B68     		ldr	r3, [r7, #4]
 619 001c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 620 0020 012B     		cmp	r3, #1
 621 0022 01D1     		bne	.L39
 622              		.loc 1 493 3 is_stmt 0 discriminator 1
 623 0024 0223     		movs	r3, #2
 624 0026 53E0     		b	.L38
 625              	.L39:
 626              		.loc 1 493 3 discriminator 2
 627 0028 7B68     		ldr	r3, [r7, #4]
 628 002a 0122     		movs	r2, #1
 629 002c 83F83C20 		strb	r2, [r3, #60]
 494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 630              		.loc 1 495 35 is_stmt 1 discriminator 2
 631 0030 7B68     		ldr	r3, [r7, #4]
 632 0032 93F83D30 		ldrb	r3, [r3, #61]
 633 0036 DBB2     		uxtb	r3, r3
 634              		.loc 1 495 5 discriminator 2
 635 0038 012B     		cmp	r3, #1
 636 003a 42D1     		bne	.L40
 496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     switch (CallbackID)
 637              		.loc 1 497 5
 638 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 639 003e 062B     		cmp	r3, #6
 640 0040 3BD8     		bhi	.L41
 641 0042 01A2     		adr	r2, .L43
 642 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 643              		.p2align 2
 644              	.L43:
 645 0048 65000000 		.word	.L49+1
 646 004c 6D000000 		.word	.L48+1
 647 0050 75000000 		.word	.L47+1
ARM GAS  /tmp/ccoEQtJm.s 			page 21


 648 0054 7D000000 		.word	.L46+1
 649 0058 85000000 		.word	.L45+1
 650 005c 8D000000 		.word	.L44+1
 651 0060 95000000 		.word	.L42+1
 652              		.p2align 1
 653              	.L49:
 498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_CPLT_CB_ID:
 500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 654              		.loc 1 500 31
 655 0064 7B68     		ldr	r3, [r7, #4]
 656 0066 0022     		movs	r2, #0
 657 0068 5A64     		str	r2, [r3, #68]
 501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 658              		.loc 1 501 7
 659 006a 2CE0     		b	.L51
 660              	.L48:
 502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BUFFERCPLT_CB_ID:
 504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 661              		.loc 1 504 37
 662 006c 7B68     		ldr	r3, [r7, #4]
 663 006e 0022     		movs	r2, #0
 664 0070 9A64     		str	r2, [r3, #72]
 505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 665              		.loc 1 505 7
 666 0072 28E0     		b	.L51
 667              	.L47:
 506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_BLOCKCPLT_CB_ID:
 508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 668              		.loc 1 508 36
 669 0074 7B68     		ldr	r3, [r7, #4]
 670 0076 0022     		movs	r2, #0
 671 0078 DA64     		str	r2, [r3, #76]
 509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 672              		.loc 1 509 7
 673 007a 24E0     		b	.L51
 674              	.L46:
 510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_REPBLOCKCPLT_CB_ID:
 512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 675              		.loc 1 512 42
 676 007c 7B68     		ldr	r3, [r7, #4]
 677 007e 0022     		movs	r2, #0
 678 0080 1A65     		str	r2, [r3, #80]
 513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 679              		.loc 1 513 7
 680 0082 20E0     		b	.L51
 681              	.L45:
 514:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ERROR_CB_ID:
 516:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 682              		.loc 1 516 32
 683 0084 7B68     		ldr	r3, [r7, #4]
 684 0086 0022     		movs	r2, #0
 685 0088 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccoEQtJm.s 			page 22


 517:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 686              		.loc 1 517 7
 687 008a 1CE0     		b	.L51
 688              	.L44:
 518:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 519:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case  HAL_MDMA_XFER_ABORT_CB_ID:
 520:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 689              		.loc 1 520 32
 690 008c 7B68     		ldr	r3, [r7, #4]
 691 008e 0022     		movs	r2, #0
 692 0090 9A65     		str	r2, [r3, #88]
 521:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 693              		.loc 1 521 7
 694 0092 18E0     		b	.L51
 695              	.L42:
 522:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 523:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     case   HAL_MDMA_XFER_ALL_CB_ID:
 524:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferCpltCallback = NULL;
 696              		.loc 1 524 31
 697 0094 7B68     		ldr	r3, [r7, #4]
 698 0096 0022     		movs	r2, #0
 699 0098 5A64     		str	r2, [r3, #68]
 525:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBufferCpltCallback = NULL;
 700              		.loc 1 525 37
 701 009a 7B68     		ldr	r3, [r7, #4]
 702 009c 0022     		movs	r2, #0
 703 009e 9A64     		str	r2, [r3, #72]
 526:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferBlockCpltCallback = NULL;
 704              		.loc 1 526 36
 705 00a0 7B68     		ldr	r3, [r7, #4]
 706 00a2 0022     		movs	r2, #0
 707 00a4 DA64     		str	r2, [r3, #76]
 527:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferRepeatBlockCpltCallback = NULL;
 708              		.loc 1 527 42
 709 00a6 7B68     		ldr	r3, [r7, #4]
 710 00a8 0022     		movs	r2, #0
 711 00aa 1A65     		str	r2, [r3, #80]
 528:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback = NULL;
 712              		.loc 1 528 32
 713 00ac 7B68     		ldr	r3, [r7, #4]
 714 00ae 0022     		movs	r2, #0
 715 00b0 5A65     		str	r2, [r3, #84]
 529:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferAbortCallback = NULL;
 716              		.loc 1 529 32
 717 00b2 7B68     		ldr	r3, [r7, #4]
 718 00b4 0022     		movs	r2, #0
 719 00b6 9A65     		str	r2, [r3, #88]
 530:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break; 
 720              		.loc 1 530 7
 721 00b8 05E0     		b	.L51
 722              	.L41:
 531:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 532:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     default:
 533:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       status = HAL_ERROR;
 723              		.loc 1 533 14
 724 00ba 0123     		movs	r3, #1
 725 00bc FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccoEQtJm.s 			page 23


 534:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       break;
 726              		.loc 1 534 7
 727 00be 00BF     		nop
 728 00c0 01E0     		b	.L51
 729              	.L40:
 535:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 536:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 537:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 539:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     status = HAL_ERROR;
 730              		.loc 1 539 12
 731 00c2 0123     		movs	r3, #1
 732 00c4 FB73     		strb	r3, [r7, #15]
 733              	.L51:
 540:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 541:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 542:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Release Lock */
 543:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma);
 734              		.loc 1 543 3
 735 00c6 7B68     		ldr	r3, [r7, #4]
 736 00c8 0022     		movs	r2, #0
 737 00ca 83F83C20 		strb	r2, [r3, #60]
 544:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 545:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return status;
 738              		.loc 1 545 10
 739 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 740              	.L38:
 546:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 741              		.loc 1 546 1
 742 00d0 1846     		mov	r0, r3
 743 00d2 1437     		adds	r7, r7, #20
 744              		.cfi_def_cfa_offset 4
 745 00d4 BD46     		mov	sp, r7
 746              		.cfi_def_cfa_register 13
 747              		@ sp needed
 748 00d6 5DF8047B 		ldr	r7, [sp], #4
 749              		.cfi_restore 7
 750              		.cfi_def_cfa_offset 0
 751 00da 7047     		bx	lr
 752              		.cfi_endproc
 753              	.LFE138:
 755              		.section	.text.HAL_MDMA_LinkedList_CreateNode,"ax",%progbits
 756              		.align	1
 757              		.global	HAL_MDMA_LinkedList_CreateNode
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv5-d16
 763              	HAL_MDMA_LinkedList_CreateNode:
 764              	.LFB139:
 547:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 548:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 549:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
 550:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 551:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 552:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group2
 553:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
ARM GAS  /tmp/ccoEQtJm.s 			page 24


 554:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
 555:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
 556:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  Linked list operation functions  #####
 557:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
 558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
 559:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Create a linked list node
 560:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Add a node to the MDMA linked list
 561:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Remove a node from the MDMA linked list
 562:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Enable/Disable linked list circular mode 
 563:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
 564:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
 565:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 566:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 567:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 568:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes an MDMA Link Node according to the specified
 569:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the pMDMA_LinkedListNodeConfig .
 570:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode: Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 571:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         registers configurations.  
 572:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNodeConfig: Pointer to a MDMA_LinkNodeConfTypeDef structure that contains
 573:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Linked List Node. 
 574:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 575:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 576:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_CreateNode(MDMA_LinkNodeTypeDef *pNode, MDMA_LinkNodeConfType
 577:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 765              		.loc 1 577 1
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 16
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769              		@ link register save eliminated.
 770 0000 80B4     		push	{r7}
 771              		.cfi_def_cfa_offset 4
 772              		.cfi_offset 7, -4
 773 0002 85B0     		sub	sp, sp, #20
 774              		.cfi_def_cfa_offset 24
 775 0004 00AF     		add	r7, sp, #0
 776              		.cfi_def_cfa_register 7
 777 0006 7860     		str	r0, [r7, #4]
 778 0008 3960     		str	r1, [r7]
 578:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
 579:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
 580:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 581:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral state */
 582:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNode == NULL) || (pNodeConfig == NULL))
 779              		.loc 1 582 5
 780 000a 7B68     		ldr	r3, [r7, #4]
 781 000c 002B     		cmp	r3, #0
 782 000e 02D0     		beq	.L53
 783              		.loc 1 582 22 discriminator 1
 784 0010 3B68     		ldr	r3, [r7]
 785 0012 002B     		cmp	r3, #0
 786 0014 01D1     		bne	.L54
 787              	.L53:
 583:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 788              		.loc 1 584 12
 789 0016 0123     		movs	r3, #1
 790 0018 C8E0     		b	.L55
ARM GAS  /tmp/ccoEQtJm.s 			page 25


 791              	.L54:
 585:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 586:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 587:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
 588:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_PRIORITY(pNodeConfig->Init.Priority));
 589:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_ENDIANNESS_MODE(pNodeConfig->Init.Endianness));
 590:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_REQUEST(pNodeConfig->Init.Request));
 591:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_INC(pNodeConfig->Init.SourceInc));
 592:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_INC(pNodeConfig->Init.DestinationInc));
 593:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_DATASIZE(pNodeConfig->Init.SourceDataSize));
 594:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_DATASIZE(pNodeConfig->Init.DestDataSize));
 595:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DATA_ALIGNMENT(pNodeConfig->Init.DataAlignment));
 596:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_SOURCE_BURST(pNodeConfig->Init.SourceBurst));
 597:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_DESTINATION_BURST(pNodeConfig->Init.DestBurst));
 598:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BUFFER_TRANSFER_LENGTH(pNodeConfig->Init.BufferTransferLength));
 599:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_TRIGGER_MODE(pNodeConfig->Init.TransferTriggerMode));
 600:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.SourceBlockAddressOffset));
 601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(pNodeConfig->Init.DestBlockAddressOffset));
 602:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 603:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(pNodeConfig->BlockDataLength));
 604:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(pNodeConfig->BlockCount));  
 605:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 606:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 607:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure next Link node Address Register to zero */
 608:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CLAR =  0;
 792              		.loc 1 608 15
 793 001a 7B68     		ldr	r3, [r7, #4]
 794 001c 0022     		movs	r2, #0
 795 001e 5A61     		str	r2, [r3, #20]
 609:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 610:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the Link Node registers*/
 611:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTBR   = 0;
 796              		.loc 1 611 17
 797 0020 7B68     		ldr	r3, [r7, #4]
 798 0022 0022     		movs	r2, #0
 799 0024 9A61     		str	r2, [r3, #24]
 612:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMAR   = 0;  
 800              		.loc 1 612 17
 801 0026 7B68     		ldr	r3, [r7, #4]
 802 0028 0022     		movs	r2, #0
 803 002a 1A62     		str	r2, [r3, #32]
 613:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CMDR   = 0;
 804              		.loc 1 613 17
 805 002c 7B68     		ldr	r3, [r7, #4]
 806 002e 0022     		movs	r2, #0
 807 0030 5A62     		str	r2, [r3, #36]
 614:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->Reserved = 0;
 808              		.loc 1 614 19
 809 0032 7B68     		ldr	r3, [r7, #4]
 810 0034 0022     		movs	r2, #0
 811 0036 DA61     		str	r2, [r3, #28]
 615:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 616:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
 617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CTCR =  pNodeConfig->Init.SourceInc | pNodeConfig->Init.DestinationInc | \
 812              		.loc 1 617 35
 813 0038 3B68     		ldr	r3, [r7]
 814 003a 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccoEQtJm.s 			page 26


 815              		.loc 1 617 65
 816 003c 3B68     		ldr	r3, [r7]
 817 003e 5B69     		ldr	r3, [r3, #20]
 818              		.loc 1 617 46
 819 0040 1A43     		orrs	r2, r2, r3
 618:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 820              		.loc 1 618 22
 821 0042 3B68     		ldr	r3, [r7]
 822 0044 9B69     		ldr	r3, [r3, #24]
 617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 823              		.loc 1 617 81
 824 0046 1A43     		orrs	r2, r2, r3
 825              		.loc 1 618 57
 826 0048 3B68     		ldr	r3, [r7]
 827 004a DB69     		ldr	r3, [r3, #28]
 828              		.loc 1 618 38
 829 004c 1A43     		orrs	r2, r2, r3
 619:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 830              		.loc 1 619 24
 831 004e 3B68     		ldr	r3, [r7]
 832 0050 1B6A     		ldr	r3, [r3, #32]
 618:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 833              		.loc 1 618 81
 834 0052 1A43     		orrs	r2, r2, r3
 835              		.loc 1 619 57
 836 0054 3B68     		ldr	r3, [r7]
 837 0056 9B6A     		ldr	r3, [r3, #40]
 838              		.loc 1 619 38
 839 0058 1A43     		orrs	r2, r2, r3
 620:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 840              		.loc 1 620 26
 841 005a 3B68     		ldr	r3, [r7]
 842 005c DB6A     		ldr	r3, [r3, #44]
 619:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNodeConfig->Init.DataAlignment| pNodeConfig->Init.SourceBurst            | \
 843              		.loc 1 619 81
 844 005e 1A43     		orrs	r2, r2, r3
 621:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 845              		.loc 1 621 30
 846 0060 3B68     		ldr	r3, [r7]
 847 0062 5B6A     		ldr	r3, [r3, #36]
 848              		.loc 1 621 52
 849 0064 013B     		subs	r3, r3, #1
 850              		.loc 1 621 58
 851 0066 9B04     		lsls	r3, r3, #18
 620:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNodeConfig->Init.DestBurst                                             | \
 852              		.loc 1 620 81
 853 0068 1A43     		orrs	r2, r2, r3
 622:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             pNodeConfig->Init.TransferTriggerMode;
 854              		.loc 1 622 30
 855 006a 3B68     		ldr	r3, [r7]
 856 006c 5B68     		ldr	r3, [r3, #4]
 621:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ((pNodeConfig->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 857              		.loc 1 621 81
 858 006e 1A43     		orrs	r2, r2, r3
 617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNodeConfig->Init.SourceDataSize | pNodeConfig->Init.DestDataSize           | \
 859              		.loc 1 617 15
 860 0070 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccoEQtJm.s 			page 27


 861 0072 1A60     		str	r2, [r3]
 623:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 624:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode*/
 625:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request == MDMA_REQUEST_SW)
 862              		.loc 1 625 23
 863 0074 3B68     		ldr	r3, [r7]
 864 0076 1B68     		ldr	r3, [r3]
 865              		.loc 1 625 5
 866 0078 B3F1804F 		cmp	r3, #1073741824
 867 007c 05D1     		bne	.L56
 626:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |= MDMA_CTCR_SWRM;
 868              		.loc 1 627 17
 869 007e 7B68     		ldr	r3, [r7, #4]
 870 0080 1B68     		ldr	r3, [r3]
 871 0082 43F08042 		orr	r2, r3, #1073741824
 872 0086 7B68     		ldr	r3, [r7, #4]
 873 0088 1A60     		str	r2, [r3]
 874              	.L56:
 628:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 629:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 630:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* 
 631:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by SW : BWM could be set to 1 or 0.
 632:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   -If the request is done by a peripheral :
 633:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address not set (0) => BWM must be set to 0
 634:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****      If mask address set (different than 0) => BWM could be set to 1 or 0
 635:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 636:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((pNodeConfig->Init.Request == MDMA_REQUEST_SW) || (pNodeConfig->PostRequestMaskAddress != 0U))
 875              		.loc 1 636 24
 876 008a 3B68     		ldr	r3, [r7]
 877 008c 1B68     		ldr	r3, [r3]
 878              		.loc 1 636 5
 879 008e B3F1804F 		cmp	r3, #1073741824
 880 0092 03D0     		beq	.L57
 881              		.loc 1 636 68 discriminator 1
 882 0094 3B68     		ldr	r3, [r7]
 883 0096 9B6C     		ldr	r3, [r3, #72]
 884              		.loc 1 636 53 discriminator 1
 885 0098 002B     		cmp	r3, #0
 886 009a 05D0     		beq	.L58
 887              	.L57:
 637:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 638:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTCR |=  MDMA_CTCR_BWM;
 888              		.loc 1 638 17
 889 009c 7B68     		ldr	r3, [r7, #4]
 890 009e 1B68     		ldr	r3, [r3]
 891 00a0 43F00042 		orr	r2, r3, #-2147483648
 892 00a4 7B68     		ldr	r3, [r7, #4]
 893 00a6 1A60     		str	r2, [r3]
 894              	.L58:
 639:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 640:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 641:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the new CBNDTR Register value */ 
 642:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR = ((pNodeConfig->BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC;
 895              		.loc 1 642 32
 896 00a8 3B68     		ldr	r3, [r7]
 897 00aa 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/ccoEQtJm.s 			page 28


 898              		.loc 1 642 45
 899 00ac 013B     		subs	r3, r3, #1
 900              		.loc 1 642 75
 901 00ae 1A05     		lsls	r2, r3, #20
 902              		.loc 1 642 17
 903 00b0 7B68     		ldr	r3, [r7, #4]
 904 00b2 5A60     		str	r2, [r3, #4]
 643:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
 645:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.SourceBlockAddressOffset < 0)
 905              		.loc 1 645 23
 906 00b4 3B68     		ldr	r3, [r7]
 907 00b6 1B6B     		ldr	r3, [r3, #48]
 908              		.loc 1 645 5
 909 00b8 002B     		cmp	r3, #0
 910 00ba 0EDA     		bge	.L59
 646:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 647:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRSUM;
 911              		.loc 1 647 19
 912 00bc 7B68     		ldr	r3, [r7, #4]
 913 00be 5B68     		ldr	r3, [r3, #4]
 914 00c0 43F48022 		orr	r2, r3, #262144
 915 00c4 7B68     		ldr	r3, [r7, #4]
 916 00c6 5A60     		str	r2, [r3, #4]
 648:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */
 649:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.SourceBlockAddressOffset);
 917              		.loc 1 649 49
 918 00c8 3B68     		ldr	r3, [r7]
 919 00ca 1B6B     		ldr	r3, [r3, #48]
 920              		.loc 1 649 30
 921 00cc 5B42     		rsbs	r3, r3, #0
 922              		.loc 1 649 17
 923 00ce FB60     		str	r3, [r7, #12]
 650:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = blockoffset & 0x0000FFFFU;
 924              		.loc 1 650 32
 925 00d0 FB68     		ldr	r3, [r7, #12]
 926 00d2 9AB2     		uxth	r2, r3
 927              		.loc 1 650 18
 928 00d4 7B68     		ldr	r3, [r7, #4]
 929 00d6 1A61     		str	r2, [r3, #16]
 930 00d8 04E0     		b	.L60
 931              	.L59:
 651:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 652:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 653:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 654:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : source repeat block offset */     
 655:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR = (((uint32_t) pNodeConfig->Init.SourceBlockAddressOffset) & 0x0000FFFFU);    
 932              		.loc 1 655 50
 933 00da 3B68     		ldr	r3, [r7]
 934 00dc 1B6B     		ldr	r3, [r3, #48]
 935              		.loc 1 655 77
 936 00de 9AB2     		uxth	r2, r3
 937              		.loc 1 655 18
 938 00e0 7B68     		ldr	r3, [r7, #4]
 939 00e2 1A61     		str	r2, [r3, #16]
 940              	.L60:
 656:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
ARM GAS  /tmp/ccoEQtJm.s 			page 29


 657:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 658:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block destination address offset is negative set the Block Repeat destination address Updat
 659:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.DestBlockAddressOffset < 0)
 941              		.loc 1 659 23
 942 00e4 3B68     		ldr	r3, [r7]
 943 00e6 5B6B     		ldr	r3, [r3, #52]
 944              		.loc 1 659 5
 945 00e8 002B     		cmp	r3, #0
 946 00ea 11DA     		bge	.L61
 660:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 661:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBNDTR |= MDMA_CBNDTR_BRDUM;
 947              		.loc 1 661 19
 948 00ec 7B68     		ldr	r3, [r7, #4]
 949 00ee 5B68     		ldr	r3, [r3, #4]
 950 00f0 43F40022 		orr	r2, r3, #524288
 951 00f4 7B68     		ldr	r3, [r7, #4]
 952 00f6 5A60     		str	r2, [r3, #4]
 662:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */
 663:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- pNodeConfig->Init.DestBlockAddressOffset);
 953              		.loc 1 663 49
 954 00f8 3B68     		ldr	r3, [r7]
 955 00fa 5B6B     		ldr	r3, [r3, #52]
 956              		.loc 1 663 30
 957 00fc 5B42     		rsbs	r3, r3, #0
 958              		.loc 1 663 17
 959 00fe FB60     		str	r3, [r7, #12]
 664:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 960              		.loc 1 664 18
 961 0100 7B68     		ldr	r3, [r7, #4]
 962 0102 1A69     		ldr	r2, [r3, #16]
 963              		.loc 1 664 50
 964 0104 FB68     		ldr	r3, [r7, #12]
 965 0106 1B04     		lsls	r3, r3, #16
 966              		.loc 1 664 18
 967 0108 1A43     		orrs	r2, r2, r3
 968 010a 7B68     		ldr	r3, [r7, #4]
 969 010c 1A61     		str	r2, [r3, #16]
 970 010e 07E0     		b	.L62
 971              	.L61:
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 666:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 667:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 668:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */     
 669:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CBRUR |= ((((uint32_t)pNodeConfig->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_C
 972              		.loc 1 669 18
 973 0110 7B68     		ldr	r3, [r7, #4]
 974 0112 1A69     		ldr	r2, [r3, #16]
 975              		.loc 1 669 51
 976 0114 3B68     		ldr	r3, [r7]
 977 0116 5B6B     		ldr	r3, [r3, #52]
 978              		.loc 1 669 91
 979 0118 1B04     		lsls	r3, r3, #16
 980              		.loc 1 669 18
 981 011a 1A43     		orrs	r2, r2, r3
 982 011c 7B68     		ldr	r3, [r7, #4]
 983 011e 1A61     		str	r2, [r3, #16]
 984              	.L62:
ARM GAS  /tmp/ccoEQtJm.s 			page 30


 670:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 671:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 672:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node data length */
 673:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CBNDTR |=  pNodeConfig->BlockDataLength;
 985              		.loc 1 673 17
 986 0120 7B68     		ldr	r3, [r7, #4]
 987 0122 5A68     		ldr	r2, [r3, #4]
 988              		.loc 1 673 32
 989 0124 3B68     		ldr	r3, [r7]
 990 0126 1B6C     		ldr	r3, [r3, #64]
 991              		.loc 1 673 17
 992 0128 1A43     		orrs	r2, r2, r3
 993 012a 7B68     		ldr	r3, [r7, #4]
 994 012c 5A60     		str	r2, [r3, #4]
 674:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 675:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node destination address */
 676:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CDAR = pNodeConfig->DstAddress; 
 995              		.loc 1 676 28
 996 012e 3B68     		ldr	r3, [r7]
 997 0130 DA6B     		ldr	r2, [r3, #60]
 998              		.loc 1 676 15
 999 0132 7B68     		ldr	r3, [r7, #4]
 1000 0134 DA60     		str	r2, [r3, #12]
 677:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 678:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Link Node Source address */
 679:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   pNode->CSAR = pNodeConfig->SrcAddress;
 1001              		.loc 1 679 28
 1002 0136 3B68     		ldr	r3, [r7]
 1003 0138 9A6B     		ldr	r2, [r3, #56]
 1004              		.loc 1 679 15
 1005 013a 7B68     		ldr	r3, [r7, #4]
 1006 013c 9A60     		str	r2, [r3, #8]
 680:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 681:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData,  */
 682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(pNodeConfig->Init.Request != MDMA_REQUEST_SW)
 1007              		.loc 1 682 23
 1008 013e 3B68     		ldr	r3, [r7]
 1009 0140 1B68     		ldr	r3, [r3]
 1010              		.loc 1 682 5
 1011 0142 B3F1804F 		cmp	r3, #1073741824
 1012 0146 0CD0     		beq	.L63
 683:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 684:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTBR register  */
 685:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR = pNodeConfig->Init.Request & MDMA_CTBR_TSEL;
 1013              		.loc 1 685 36
 1014 0148 3B68     		ldr	r3, [r7]
 1015 014a 1B68     		ldr	r3, [r3]
 1016              		.loc 1 685 45
 1017 014c DAB2     		uxtb	r2, r3
 1018              		.loc 1 685 17
 1019 014e 7B68     		ldr	r3, [r7, #4]
 1020 0150 9A61     		str	r2, [r3, #24]
 686:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request clear Mask and Data */
 687:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMAR = pNodeConfig->PostRequestMaskAddress;
 1021              		.loc 1 687 30
 1022 0152 3B68     		ldr	r3, [r7]
 1023 0154 9A6C     		ldr	r2, [r3, #72]
ARM GAS  /tmp/ccoEQtJm.s 			page 31


 1024              		.loc 1 687 17
 1025 0156 7B68     		ldr	r3, [r7, #4]
 1026 0158 1A62     		str	r2, [r3, #32]
 688:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CMDR = pNodeConfig->PostRequestMaskData;      
 1027              		.loc 1 688 30
 1028 015a 3B68     		ldr	r3, [r7]
 1029 015c DA6C     		ldr	r2, [r3, #76]
 1030              		.loc 1 688 17
 1031 015e 7B68     		ldr	r3, [r7, #4]
 1032 0160 5A62     		str	r2, [r3, #36]
 1033              	.L63:
 689:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 690:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 691:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->SrcAddress & 0xFF000000U;
 1034              		.loc 1 691 28
 1035 0162 3B68     		ldr	r3, [r7]
 1036 0164 9B6B     		ldr	r3, [r3, #56]
 1037              		.loc 1 691 15
 1038 0166 03F07F43 		and	r3, r3, #-16777216
 1039 016a BB60     		str	r3, [r7, #8]
 692:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 1040              		.loc 1 692 5
 1041 016c BB68     		ldr	r3, [r7, #8]
 1042 016e B3F1005F 		cmp	r3, #536870912
 1043 0172 02D0     		beq	.L64
 1044              		.loc 1 692 35 discriminator 1
 1045 0174 BB68     		ldr	r3, [r7, #8]
 1046 0176 002B     		cmp	r3, #0
 1047 0178 05D1     		bne	.L65
 1048              	.L64:
 693:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 694:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
 695:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_SBUS;  
 1049              		.loc 1 695 17
 1050 017a 7B68     		ldr	r3, [r7, #4]
 1051 017c 9B69     		ldr	r3, [r3, #24]
 1052 017e 43F48032 		orr	r2, r3, #65536
 1053 0182 7B68     		ldr	r3, [r7, #4]
 1054 0184 9A61     		str	r2, [r3, #24]
 1055              	.L65:
 696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 697:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 698:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = pNodeConfig->DstAddress & 0xFF000000U;
 1056              		.loc 1 698 28
 1057 0186 3B68     		ldr	r3, [r7]
 1058 0188 DB6B     		ldr	r3, [r3, #60]
 1059              		.loc 1 698 15
 1060 018a 03F07F43 		and	r3, r3, #-16777216
 1061 018e BB60     		str	r3, [r7, #8]
 699:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 1062              		.loc 1 699 5
 1063 0190 BB68     		ldr	r3, [r7, #8]
 1064 0192 B3F1005F 		cmp	r3, #536870912
 1065 0196 02D0     		beq	.L66
 1066              		.loc 1 699 35 discriminator 1
 1067 0198 BB68     		ldr	r3, [r7, #8]
 1068 019a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccoEQtJm.s 			page 32


 1069 019c 05D1     		bne	.L67
 1070              	.L66:
 700:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 701:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
 702:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     pNode->CTBR |= MDMA_CTBR_DBUS;
 1071              		.loc 1 702 17
 1072 019e 7B68     		ldr	r3, [r7, #4]
 1073 01a0 9B69     		ldr	r3, [r3, #24]
 1074 01a2 43F40032 		orr	r2, r3, #131072
 1075 01a6 7B68     		ldr	r3, [r7, #4]
 1076 01a8 9A61     		str	r2, [r3, #24]
 1077              	.L67:
 703:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 704:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 705:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 1078              		.loc 1 705 10
 1079 01aa 0023     		movs	r3, #0
 1080              	.L55:
 706:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1081              		.loc 1 706 1
 1082 01ac 1846     		mov	r0, r3
 1083 01ae 1437     		adds	r7, r7, #20
 1084              		.cfi_def_cfa_offset 4
 1085 01b0 BD46     		mov	sp, r7
 1086              		.cfi_def_cfa_register 13
 1087              		@ sp needed
 1088 01b2 5DF8047B 		ldr	r7, [sp], #4
 1089              		.cfi_restore 7
 1090              		.cfi_def_cfa_offset 0
 1091 01b6 7047     		bx	lr
 1092              		.cfi_endproc
 1093              	.LFE139:
 1095              		.section	.text.HAL_MDMA_LinkedList_AddNode,"ax",%progbits
 1096              		.align	1
 1097              		.global	HAL_MDMA_LinkedList_AddNode
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv5-d16
 1103              	HAL_MDMA_LinkedList_AddNode:
 1104              	.LFB140:
 707:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 708:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 709:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Connect a node to the linked list.
 710:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma    : Pointer to a MDMA_HandleTypeDef structure that contains
 711:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    the configuration information for the specified MDMA Channel.
 712:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNewNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 713:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    to be add to the list.
 714:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param pPrevNode : Pointer to the new node position in the linked list or zero to insert the ne
 715:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                    at the end of the list 
 716:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 717:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 718:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 719:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_AddNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *pNew
 720:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 1105              		.loc 1 720 1
 1106              		.cfi_startproc
ARM GAS  /tmp/ccoEQtJm.s 			page 33


 1107              		@ args = 0, pretend = 0, frame = 32
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110 0000 80B4     		push	{r7}
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 89B0     		sub	sp, sp, #36
 1114              		.cfi_def_cfa_offset 40
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 1117 0006 F860     		str	r0, [r7, #12]
 1118 0008 B960     		str	r1, [r7, #8]
 1119 000a 7A60     		str	r2, [r7, #4]
 721:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *pNode;
 722:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeInserted = 0;
 1120              		.loc 1 722 12
 1121 000c 0023     		movs	r3, #0
 1122 000e BB61     		str	r3, [r7, #24]
 1123              		.loc 1 722 25
 1124 0010 0023     		movs	r3, #0
 1125 0012 7B61     		str	r3, [r7, #20]
 723:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1126              		.loc 1 723 21
 1127 0014 0023     		movs	r3, #0
 1128 0016 FB74     		strb	r3, [r7, #19]
 724:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 725:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 726:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNewNode == NULL))
 1129              		.loc 1 726 5
 1130 0018 FB68     		ldr	r3, [r7, #12]
 1131 001a 002B     		cmp	r3, #0
 1132 001c 02D0     		beq	.L69
 1133              		.loc 1 726 22 discriminator 1
 1134 001e BB68     		ldr	r3, [r7, #8]
 1135 0020 002B     		cmp	r3, #0
 1136 0022 01D1     		bne	.L70
 1137              	.L69:
 727:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 728:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 1138              		.loc 1 728 12
 1139 0024 0123     		movs	r3, #1
 1140 0026 A9E0     		b	.L71
 1141              	.L70:
 729:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 730:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 732:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 1142              		.loc 1 732 3
 1143 0028 FB68     		ldr	r3, [r7, #12]
 1144 002a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1145 002e 012B     		cmp	r3, #1
 1146 0030 01D1     		bne	.L72
 1147              		.loc 1 732 3 is_stmt 0 discriminator 1
 1148 0032 0223     		movs	r3, #2
 1149 0034 A2E0     		b	.L71
 1150              	.L72:
 1151              		.loc 1 732 3 discriminator 2
ARM GAS  /tmp/ccoEQtJm.s 			page 34


 1152 0036 FB68     		ldr	r3, [r7, #12]
 1153 0038 0122     		movs	r2, #1
 1154 003a 83F83C20 		strb	r2, [r3, #60]
 733:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 734:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 1155              		.loc 1 734 35 is_stmt 1 discriminator 2
 1156 003e FB68     		ldr	r3, [r7, #12]
 1157 0040 93F83D30 		ldrb	r3, [r3, #61]
 1158 0044 DBB2     		uxtb	r3, r3
 1159              		.loc 1 734 5 discriminator 2
 1160 0046 012B     		cmp	r3, #1
 1161 0048 40F09380 		bne	.L73
 735:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 736:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 737:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 1162              		.loc 1 737 18
 1163 004c FB68     		ldr	r3, [r7, #12]
 1164 004e 0222     		movs	r2, #2
 1165 0050 83F83D20 		strb	r2, [r3, #61]
 738:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 739:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if this is the first node (after the Inititlization node) */
 740:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U)
 1166              		.loc 1 740 23
 1167 0054 FB68     		ldr	r3, [r7, #12]
 1168 0056 DB6D     		ldr	r3, [r3, #92]
 1169              		.loc 1 740 7
 1170 0058 002B     		cmp	r3, #0
 1171 005a 16D1     		bne	.L74
 741:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 742:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(pPrevNode == NULL)
 1172              		.loc 1 742 9
 1173 005c 7B68     		ldr	r3, [r7, #4]
 1174 005e 002B     		cmp	r3, #0
 1175 0060 10D1     		bne	.L75
 743:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 744:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if this is the first node after the initialization  
 745:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect this node to the node 0 by updating
 746:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */
 747:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = (uint32_t)pNewNode;
 1176              		.loc 1 747 14
 1177 0062 FB68     		ldr	r3, [r7, #12]
 1178 0064 1B68     		ldr	r3, [r3]
 1179              		.loc 1 747 33
 1180 0066 BA68     		ldr	r2, [r7, #8]
 1181              		.loc 1 747 31
 1182 0068 5A62     		str	r2, [r3, #36]
 748:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Set the MDMA handle First linked List node*/
 749:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = pNewNode;
 1183              		.loc 1 749 43
 1184 006a FB68     		ldr	r3, [r7, #12]
 1185 006c BA68     		ldr	r2, [r7, #8]
 1186 006e DA65     		str	r2, [r3, #92]
 750:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 751:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*reset New node link */
 752:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNewNode->CLAR = 0;
 1187              		.loc 1 752 24
 1188 0070 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccoEQtJm.s 			page 35


 1189 0072 0022     		movs	r2, #0
 1190 0074 5A61     		str	r2, [r3, #20]
 753:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 754:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle last node address */      
 755:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress = pNewNode;
 1191              		.loc 1 755 42
 1192 0076 FB68     		ldr	r3, [r7, #12]
 1193 0078 BA68     		ldr	r2, [r7, #8]
 1194 007a 1A66     		str	r2, [r3, #96]
 756:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 757:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 1;
 1195              		.loc 1 757 38
 1196 007c FB68     		ldr	r3, [r7, #12]
 1197 007e 0122     		movs	r2, #1
 1198 0080 5A66     		str	r2, [r3, #100]
 1199 0082 6CE0     		b	.L77
 1200              	.L75:
 758:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 759:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 760:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 761:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 1201              		.loc 1 761 20
 1202 0084 0123     		movs	r3, #1
 1203 0086 FB74     		strb	r3, [r7, #19]
 1204 0088 69E0     		b	.L77
 1205              	.L74:
 762:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 763:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 764:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress != pNewNode)  
 1206              		.loc 1 764 18
 1207 008a FB68     		ldr	r3, [r7, #12]
 1208 008c DB6D     		ldr	r3, [r3, #92]
 1209              		.loc 1 764 12
 1210 008e BA68     		ldr	r2, [r7, #8]
 1211 0090 9A42     		cmp	r2, r3
 1212 0092 62D0     		beq	.L78
 765:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 766:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check if the node to insert already exists*/        
 767:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       pNode = hmdma->FirstLinkedListNodeAddress;
 1213              		.loc 1 767 13
 1214 0094 FB68     		ldr	r3, [r7, #12]
 1215 0096 DB6D     		ldr	r3, [r3, #92]
 1216 0098 FB61     		str	r3, [r7, #28]
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (hal_status == HAL_OK))
 1217              		.loc 1 768 12
 1218 009a 0CE0     		b	.L79
 1219              	.L82:
 769:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 770:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(pNode->CLAR == (uint32_t)pNewNode)
 1220              		.loc 1 770 17
 1221 009c FB69     		ldr	r3, [r7, #28]
 1222 009e 5A69     		ldr	r2, [r3, #20]
 1223              		.loc 1 770 24
 1224 00a0 BB68     		ldr	r3, [r7, #8]
 1225              		.loc 1 770 11
 1226 00a2 9A42     		cmp	r2, r3
 1227 00a4 01D1     		bne	.L80
ARM GAS  /tmp/ccoEQtJm.s 			page 36


 771:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 772:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hal_status = HAL_ERROR; /* error this node already exist in the linked list and it is not
 1228              		.loc 1 772 22
 1229 00a6 0123     		movs	r3, #1
 1230 00a8 FB74     		strb	r3, [r7, #19]
 1231              	.L80:
 773:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 774:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
 1232              		.loc 1 774 46
 1233 00aa FB69     		ldr	r3, [r7, #28]
 1234 00ac 5B69     		ldr	r3, [r3, #20]
 1235              		.loc 1 774 15
 1236 00ae FB61     		str	r3, [r7, #28]
 775:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 1237              		.loc 1 775 16
 1238 00b0 BB69     		ldr	r3, [r7, #24]
 1239 00b2 0133     		adds	r3, r3, #1
 1240 00b4 BB61     		str	r3, [r7, #24]
 1241              	.L79:
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1242              		.loc 1 768 29
 1243 00b6 FB68     		ldr	r3, [r7, #12]
 1244 00b8 5B6E     		ldr	r3, [r3, #100]
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1245              		.loc 1 768 12
 1246 00ba BA69     		ldr	r2, [r7, #24]
 1247 00bc 9A42     		cmp	r2, r3
 1248 00be 02D2     		bcs	.L81
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1249              		.loc 1 768 54 discriminator 1
 1250 00c0 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1251 00c2 002B     		cmp	r3, #0
 1252 00c4 EAD0     		beq	.L82
 1253              	.L81:
 776:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 777:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hal_status == HAL_OK)
 1254              		.loc 1 778 9
 1255 00c6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1256 00c8 002B     		cmp	r3, #0
 1257 00ca 48D1     		bne	.L77
 779:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 780:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Check if the previous node is the last one in the current list or zero */     
 781:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((pPrevNode == hmdma->LastLinkedListNodeAddress) || (pPrevNode == NULL))
 1258              		.loc 1 781 31
 1259 00cc FB68     		ldr	r3, [r7, #12]
 1260 00ce 1B6E     		ldr	r3, [r3, #96]
 1261              		.loc 1 781 11
 1262 00d0 7A68     		ldr	r2, [r7, #4]
 1263 00d2 9A42     		cmp	r2, r3
 1264 00d4 02D0     		beq	.L84
 1265              		.loc 1 781 60 discriminator 1
 1266 00d6 7B68     		ldr	r3, [r7, #4]
 1267 00d8 002B     		cmp	r3, #0
 1268 00da 11D1     		bne	.L85
 1269              	.L84:
 782:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
ARM GAS  /tmp/ccoEQtJm.s 			page 37


 783:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* insert the new node at the end of the list */
 784:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNewNode->CLAR = hmdma->LastLinkedListNodeAddress->CLAR;            
 1270              		.loc 1 784 33
 1271 00dc FB68     		ldr	r3, [r7, #12]
 1272 00de 1B6E     		ldr	r3, [r3, #96]
 1273              		.loc 1 784 60
 1274 00e0 5A69     		ldr	r2, [r3, #20]
 1275              		.loc 1 784 26
 1276 00e2 BB68     		ldr	r3, [r7, #8]
 1277 00e4 5A61     		str	r2, [r3, #20]
 785:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)pNewNode;
 1278              		.loc 1 785 16
 1279 00e6 FB68     		ldr	r3, [r7, #12]
 1280 00e8 1B6E     		ldr	r3, [r3, #96]
 1281              		.loc 1 785 52
 1282 00ea BA68     		ldr	r2, [r7, #8]
 1283              		.loc 1 785 50
 1284 00ec 5A61     		str	r2, [r3, #20]
 786:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle last node address */
 787:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress = pNewNode;
 1285              		.loc 1 787 44
 1286 00ee FB68     		ldr	r3, [r7, #12]
 1287 00f0 BA68     		ldr	r2, [r7, #8]
 1288 00f2 1A66     		str	r2, [r3, #96]
 788:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Increment the linked list node counter */
 789:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter++;
 1289              		.loc 1 789 16
 1290 00f4 FB68     		ldr	r3, [r7, #12]
 1291 00f6 5B6E     		ldr	r3, [r3, #100]
 1292              		.loc 1 789 39
 1293 00f8 5A1C     		adds	r2, r3, #1
 1294 00fa FB68     		ldr	r3, [r7, #12]
 1295 00fc 5A66     		str	r2, [r3, #100]
 1296 00fe 2EE0     		b	.L77
 1297              	.L85:
 790:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 791:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 792:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 793:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /*insert the new node after the pPreviousNode node */ 
 794:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           pNode = hmdma->FirstLinkedListNodeAddress;
 1298              		.loc 1 794 17
 1299 0100 FB68     		ldr	r3, [r7, #12]
 1300 0102 DB6D     		ldr	r3, [r3, #92]
 1301 0104 FB61     		str	r3, [r7, #28]
 795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           counter = 0;
 1302              		.loc 1 795 19
 1303 0106 0023     		movs	r3, #0
 1304 0108 BB61     		str	r3, [r7, #24]
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           while((counter < hmdma->LinkedListNodeCounter) && (nodeInserted == 0U))
 1305              		.loc 1 796 16
 1306 010a 18E0     		b	.L86
 1307              	.L89:
 797:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 798:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             counter++;
 1308              		.loc 1 798 20
 1309 010c BB69     		ldr	r3, [r7, #24]
 1310 010e 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccoEQtJm.s 			page 38


 1311 0110 BB61     		str	r3, [r7, #24]
 799:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             if(pNode == pPrevNode)
 1312              		.loc 1 799 15
 1313 0112 FA69     		ldr	r2, [r7, #28]
 1314 0114 7B68     		ldr	r3, [r7, #4]
 1315 0116 9A42     		cmp	r2, r3
 1316 0118 0ED1     		bne	.L87
 800:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 801:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /*Insert the new node after the previous one */
 802:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNewNode->CLAR = pNode->CLAR;
 1317              		.loc 1 802 37
 1318 011a FB69     		ldr	r3, [r7, #28]
 1319 011c 5A69     		ldr	r2, [r3, #20]
 1320              		.loc 1 802 30
 1321 011e BB68     		ldr	r3, [r7, #8]
 1322 0120 5A61     		str	r2, [r3, #20]
 803:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode->CLAR = (uint32_t)pNewNode; 
 1323              		.loc 1 803 29
 1324 0122 BA68     		ldr	r2, [r7, #8]
 1325              		.loc 1 803 27
 1326 0124 FB69     		ldr	r3, [r7, #28]
 1327 0126 5A61     		str	r2, [r3, #20]
 804:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               /* Increment the linked list node counter */
 805:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               hmdma->LinkedListNodeCounter++;
 1328              		.loc 1 805 20
 1329 0128 FB68     		ldr	r3, [r7, #12]
 1330 012a 5B6E     		ldr	r3, [r3, #100]
 1331              		.loc 1 805 43
 1332 012c 5A1C     		adds	r2, r3, #1
 1333 012e FB68     		ldr	r3, [r7, #12]
 1334 0130 5A66     		str	r2, [r3, #100]
 806:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               nodeInserted = 1;
 1335              		.loc 1 806 28
 1336 0132 0123     		movs	r3, #1
 1337 0134 7B61     		str	r3, [r7, #20]
 1338 0136 02E0     		b	.L86
 1339              	.L87:
 807:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 808:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             else
 809:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             {
 810:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****               pNode = (MDMA_LinkNodeTypeDef *)pNode->CLAR;
 1340              		.loc 1 810 52
 1341 0138 FB69     		ldr	r3, [r7, #28]
 1342 013a 5B69     		ldr	r3, [r3, #20]
 1343              		.loc 1 810 21
 1344 013c FB61     		str	r3, [r7, #28]
 1345              	.L86:
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1346              		.loc 1 796 33
 1347 013e FB68     		ldr	r3, [r7, #12]
 1348 0140 5B6E     		ldr	r3, [r3, #100]
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 1349              		.loc 1 796 16
 1350 0142 BA69     		ldr	r2, [r7, #24]
 1351 0144 9A42     		cmp	r2, r3
 1352 0146 02D2     		bcs	.L88
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
ARM GAS  /tmp/ccoEQtJm.s 			page 39


 1353              		.loc 1 796 58 discriminator 1
 1354 0148 7B69     		ldr	r3, [r7, #20]
 1355 014a 002B     		cmp	r3, #0
 1356 014c DED0     		beq	.L89
 1357              	.L88:
 811:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             }
 812:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 813:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           
 814:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(nodeInserted == 0U)
 1358              		.loc 1 814 13
 1359 014e 7B69     		ldr	r3, [r7, #20]
 1360 0150 002B     		cmp	r3, #0
 1361 0152 04D1     		bne	.L77
 815:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 816:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hal_status = HAL_ERROR;
 1362              		.loc 1 816 24
 1363 0154 0123     		movs	r3, #1
 1364 0156 FB74     		strb	r3, [r7, #19]
 1365 0158 01E0     		b	.L77
 1366              	.L78:
 817:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 818:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 819:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }      
 820:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 821:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 822:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 823:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;     
 1367              		.loc 1 823 18
 1368 015a 0123     		movs	r3, #1
 1369 015c FB74     		strb	r3, [r7, #19]
 1370              	.L77:
 824:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 825:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 826:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 827:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
 1371              		.loc 1 827 5
 1372 015e FB68     		ldr	r3, [r7, #12]
 1373 0160 0022     		movs	r2, #0
 1374 0162 83F83C20 		strb	r2, [r3, #60]
 828:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 829:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 1375              		.loc 1 829 18
 1376 0166 FB68     		ldr	r3, [r7, #12]
 1377 0168 0122     		movs	r2, #1
 1378 016a 83F83D20 		strb	r2, [r3, #61]
 830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 831:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status; 
 1379              		.loc 1 831 12
 1380 016e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1381 0170 04E0     		b	.L71
 1382              	.L73:
 832:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 833:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 834:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 835:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 836:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 1383              		.loc 1 836 5
ARM GAS  /tmp/ccoEQtJm.s 			page 40


 1384 0172 FB68     		ldr	r3, [r7, #12]
 1385 0174 0022     		movs	r2, #0
 1386 0176 83F83C20 		strb	r2, [r3, #60]
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 838:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 839:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 1387              		.loc 1 839 12
 1388 017a 0223     		movs	r3, #2
 1389              	.L71:
 840:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 841:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1390              		.loc 1 841 1
 1391 017c 1846     		mov	r0, r3
 1392 017e 2437     		adds	r7, r7, #36
 1393              		.cfi_def_cfa_offset 4
 1394 0180 BD46     		mov	sp, r7
 1395              		.cfi_def_cfa_register 13
 1396              		@ sp needed
 1397 0182 5DF8047B 		ldr	r7, [sp], #4
 1398              		.cfi_restore 7
 1399              		.cfi_def_cfa_offset 0
 1400 0186 7047     		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE140:
 1404              		.section	.text.HAL_MDMA_LinkedList_RemoveNode,"ax",%progbits
 1405              		.align	1
 1406              		.global	HAL_MDMA_LinkedList_RemoveNode
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1410              		.fpu fpv5-d16
 1412              	HAL_MDMA_LinkedList_RemoveNode:
 1413              	.LFB141:
 842:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 843:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 844:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disconnect/Remove a node from the transfer linked list.
 845:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 846:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 847:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  pNode : Pointer to a MDMA_LinkNodeTypeDef structure that contains Linked list node 
 848:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 to be removed from the list.
 849:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *
 850:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 851:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 852:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_RemoveNode(MDMA_HandleTypeDef *hmdma, MDMA_LinkNodeTypeDef *p
 853:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 1414              		.loc 1 853 1
 1415              		.cfi_startproc
 1416              		@ args = 0, pretend = 0, frame = 24
 1417              		@ frame_needed = 1, uses_anonymous_args = 0
 1418              		@ link register save eliminated.
 1419 0000 80B4     		push	{r7}
 1420              		.cfi_def_cfa_offset 4
 1421              		.cfi_offset 7, -4
 1422 0002 87B0     		sub	sp, sp, #28
 1423              		.cfi_def_cfa_offset 32
 1424 0004 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccoEQtJm.s 			page 41


 1426 0006 7860     		str	r0, [r7, #4]
 1427 0008 3960     		str	r1, [r7]
 854:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MDMA_LinkNodeTypeDef *ptmpNode;
 855:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t counter = 0, nodeDeleted = 0;
 1428              		.loc 1 855 12
 1429 000a 0023     		movs	r3, #0
 1430 000c 3B61     		str	r3, [r7, #16]
 1431              		.loc 1 855 25
 1432 000e 0023     		movs	r3, #0
 1433 0010 FB60     		str	r3, [r7, #12]
 856:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1434              		.loc 1 856 21
 1435 0012 0023     		movs	r3, #0
 1436 0014 FB72     		strb	r3, [r7, #11]
 857:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 858:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 859:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma == NULL) || (pNode == NULL))
 1437              		.loc 1 859 5
 1438 0016 7B68     		ldr	r3, [r7, #4]
 1439 0018 002B     		cmp	r3, #0
 1440 001a 02D0     		beq	.L91
 1441              		.loc 1 859 22 discriminator 1
 1442 001c 3B68     		ldr	r3, [r7]
 1443 001e 002B     		cmp	r3, #0
 1444 0020 01D1     		bne	.L92
 1445              	.L91:
 860:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 861:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 1446              		.loc 1 861 12
 1447 0022 0123     		movs	r3, #1
 1448 0024 99E0     		b	.L93
 1449              	.L92:
 862:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 863:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 864:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 865:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 1450              		.loc 1 865 3
 1451 0026 7B68     		ldr	r3, [r7, #4]
 1452 0028 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1453 002c 012B     		cmp	r3, #1
 1454 002e 01D1     		bne	.L94
 1455              		.loc 1 865 3 is_stmt 0 discriminator 1
 1456 0030 0223     		movs	r3, #2
 1457 0032 92E0     		b	.L93
 1458              	.L94:
 1459              		.loc 1 865 3 discriminator 2
 1460 0034 7B68     		ldr	r3, [r7, #4]
 1461 0036 0122     		movs	r2, #1
 1462 0038 83F83C20 		strb	r2, [r3, #60]
 866:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 867:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 1463              		.loc 1 867 35 is_stmt 1 discriminator 2
 1464 003c 7B68     		ldr	r3, [r7, #4]
 1465 003e 93F83D30 		ldrb	r3, [r3, #61]
 1466 0042 DBB2     		uxtb	r3, r3
 1467              		.loc 1 867 5 discriminator 2
 1468 0044 012B     		cmp	r3, #1
ARM GAS  /tmp/ccoEQtJm.s 			page 42


 1469 0046 40F08380 		bne	.L95
 868:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 869:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 870:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 1470              		.loc 1 870 18
 1471 004a 7B68     		ldr	r3, [r7, #4]
 1472 004c 0222     		movs	r2, #2
 1473 004e 83F83D20 		strb	r2, [r3, #61]
 871:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 872:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 873:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 1474              		.loc 1 873 24
 1475 0052 7B68     		ldr	r3, [r7, #4]
 1476 0054 DB6D     		ldr	r3, [r3, #92]
 1477              		.loc 1 873 7
 1478 0056 002B     		cmp	r3, #0
 1479 0058 07D0     		beq	.L96
 1480              		.loc 1 873 79 discriminator 1
 1481 005a 7B68     		ldr	r3, [r7, #4]
 1482 005c 1B6E     		ldr	r3, [r3, #96]
 1483              		.loc 1 873 60 discriminator 1
 1484 005e 002B     		cmp	r3, #0
 1485 0060 03D0     		beq	.L96
 1486              		.loc 1 873 123 discriminator 2
 1487 0062 7B68     		ldr	r3, [r7, #4]
 1488 0064 5B6E     		ldr	r3, [r3, #100]
 1489              		.loc 1 873 114 discriminator 2
 1490 0066 002B     		cmp	r3, #0
 1491 0068 02D1     		bne	.L97
 1492              	.L96:
 874:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 875:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 1493              		.loc 1 875 18
 1494 006a 0123     		movs	r3, #1
 1495 006c FB72     		strb	r3, [r7, #11]
 1496 006e 65E0     		b	.L98
 1497              	.L97:
 876:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 877:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else if(hmdma->FirstLinkedListNodeAddress == pNode) /* Deleting first node */
 1498              		.loc 1 877 18
 1499 0070 7B68     		ldr	r3, [r7, #4]
 1500 0072 DB6D     		ldr	r3, [r3, #92]
 1501              		.loc 1 877 12
 1502 0074 3A68     		ldr	r2, [r7]
 1503 0076 9A42     		cmp	r2, r3
 1504 0078 30D1     		bne	.L99
 878:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 879:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Delete 1st node */
 880:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->LastLinkedListNodeAddress == pNode)
 1505              		.loc 1 880 15
 1506 007a 7B68     		ldr	r3, [r7, #4]
 1507 007c 1B6E     		ldr	r3, [r3, #96]
 1508              		.loc 1 880 9
 1509 007e 3A68     		ldr	r2, [r7]
 1510 0080 9A42     		cmp	r2, r3
 1511 0082 0DD1     		bne	.L100
 881:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
ARM GAS  /tmp/ccoEQtJm.s 			page 43


 882:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*if the last node is at the same time the first one (1 single node after the init node 0)
 883:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         then update the last node too */
 884:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 885:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = 0;
 1512              		.loc 1 885 43
 1513 0084 7B68     		ldr	r3, [r7, #4]
 1514 0086 0022     		movs	r2, #0
 1515 0088 DA65     		str	r2, [r3, #92]
 886:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LastLinkedListNodeAddress  = 0;
 1516              		.loc 1 886 43
 1517 008a 7B68     		ldr	r3, [r7, #4]
 1518 008c 0022     		movs	r2, #0
 1519 008e 1A66     		str	r2, [r3, #96]
 887:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter = 0;
 1520              		.loc 1 887 38
 1521 0090 7B68     		ldr	r3, [r7, #4]
 1522 0092 0022     		movs	r2, #0
 1523 0094 5A66     		str	r2, [r3, #100]
 888:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 889:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = 0;
 1524              		.loc 1 889 14
 1525 0096 7B68     		ldr	r3, [r7, #4]
 1526 0098 1B68     		ldr	r3, [r3]
 1527              		.loc 1 889 31
 1528 009a 0022     		movs	r2, #0
 1529 009c 5A62     		str	r2, [r3, #36]
 1530 009e 4DE0     		b	.L98
 1531              	.L100:
 890:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 891:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
 892:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 893:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if((uint32_t)hmdma->FirstLinkedListNodeAddress == hmdma->LastLinkedListNodeAddress->CLAR)
 1532              		.loc 1 893 27
 1533 00a0 7B68     		ldr	r3, [r7, #4]
 1534 00a2 DB6D     		ldr	r3, [r3, #92]
 1535              		.loc 1 893 12
 1536 00a4 1A46     		mov	r2, r3
 1537              		.loc 1 893 64
 1538 00a6 7B68     		ldr	r3, [r7, #4]
 1539 00a8 1B6E     		ldr	r3, [r3, #96]
 1540              		.loc 1 893 91
 1541 00aa 5B69     		ldr	r3, [r3, #20]
 1542              		.loc 1 893 11
 1543 00ac 9A42     		cmp	r2, r3
 1544 00ae 04D1     		bne	.L102
 894:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 895:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if last node is looping to first (circular list) one update the last node connection *
 896:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LastLinkedListNodeAddress->CLAR = pNode->CLAR;
 1545              		.loc 1 896 16
 1546 00b0 7B68     		ldr	r3, [r7, #4]
 1547 00b2 1B6E     		ldr	r3, [r3, #96]
 1548              		.loc 1 896 57
 1549 00b4 3A68     		ldr	r2, [r7]
 1550 00b6 5269     		ldr	r2, [r2, #20]
 1551              		.loc 1 896 50
 1552 00b8 5A61     		str	r2, [r3, #20]
 1553              	.L102:
ARM GAS  /tmp/ccoEQtJm.s 			page 44


 897:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 898:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
 899:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* if deleting the first node after the initialization  
 900:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         connect the next node to the node 0 by updating
 901:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         the MDMA channel CLAR register to this node address */        
 902:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->Instance->CLAR = pNode->CLAR;
 1554              		.loc 1 902 14
 1555 00ba 7B68     		ldr	r3, [r7, #4]
 1556 00bc 1B68     		ldr	r3, [r3]
 1557              		.loc 1 902 38
 1558 00be 3A68     		ldr	r2, [r7]
 1559 00c0 5269     		ldr	r2, [r2, #20]
 1560              		.loc 1 902 31
 1561 00c2 5A62     		str	r2, [r3, #36]
 903:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->FirstLinkedListNodeAddress = (MDMA_LinkNodeTypeDef *)hmdma->Instance->CLAR;
 1562              		.loc 1 903 74
 1563 00c4 7B68     		ldr	r3, [r7, #4]
 1564 00c6 1B68     		ldr	r3, [r3]
 1565              		.loc 1 903 84
 1566 00c8 5B6A     		ldr	r3, [r3, #36]
 1567              		.loc 1 903 45
 1568 00ca 1A46     		mov	r2, r3
 1569              		.loc 1 903 43
 1570 00cc 7B68     		ldr	r3, [r7, #4]
 1571 00ce DA65     		str	r2, [r3, #92]
 904:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update the Handle node counter */
 905:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->LinkedListNodeCounter--;        
 1572              		.loc 1 905 14
 1573 00d0 7B68     		ldr	r3, [r7, #4]
 1574 00d2 5B6E     		ldr	r3, [r3, #100]
 1575              		.loc 1 905 37
 1576 00d4 5A1E     		subs	r2, r3, #1
 1577 00d6 7B68     		ldr	r3, [r7, #4]
 1578 00d8 5A66     		str	r2, [r3, #100]
 1579 00da 2FE0     		b	.L98
 1580              	.L99:
 906:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }     
 907:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 908:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else /* Deleting any other node */
 909:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 910:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*Deleted node is not the first one : find it  */      
 911:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       ptmpNode = hmdma->FirstLinkedListNodeAddress;
 1581              		.loc 1 911 16
 1582 00dc 7B68     		ldr	r3, [r7, #4]
 1583 00de DB6D     		ldr	r3, [r3, #92]
 1584 00e0 7B61     		str	r3, [r7, #20]
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       while((counter < hmdma->LinkedListNodeCounter) && (nodeDeleted == 0U))
 1585              		.loc 1 912 12
 1586 00e2 1EE0     		b	.L103
 1587              	.L107:
 913:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 914:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         counter++;
 1588              		.loc 1 914 16
 1589 00e4 3B69     		ldr	r3, [r7, #16]
 1590 00e6 0133     		adds	r3, r3, #1
 1591 00e8 3B61     		str	r3, [r7, #16]
 915:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(ptmpNode->CLAR == ((uint32_t)pNode))
ARM GAS  /tmp/ccoEQtJm.s 			page 45


 1592              		.loc 1 915 20
 1593 00ea 7B69     		ldr	r3, [r7, #20]
 1594 00ec 5A69     		ldr	r2, [r3, #20]
 1595              		.loc 1 915 27
 1596 00ee 3B68     		ldr	r3, [r7]
 1597              		.loc 1 915 11
 1598 00f0 9A42     		cmp	r2, r3
 1599 00f2 13D1     		bne	.L104
 916:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 917:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* if deleting the last node */
 918:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           if(pNode == hmdma->LastLinkedListNodeAddress)
 1600              		.loc 1 918 28
 1601 00f4 7B68     		ldr	r3, [r7, #4]
 1602 00f6 1B6E     		ldr	r3, [r3, #96]
 1603              		.loc 1 918 13
 1604 00f8 3A68     		ldr	r2, [r7]
 1605 00fa 9A42     		cmp	r2, r3
 1606 00fc 02D1     		bne	.L105
 919:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           {
 920:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             /*Update the linked list last node address in the handle*/
 921:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             hmdma->LastLinkedListNodeAddress = ptmpNode;
 1607              		.loc 1 921 46
 1608 00fe 7B68     		ldr	r3, [r7, #4]
 1609 0100 7A69     		ldr	r2, [r7, #20]
 1610 0102 1A66     		str	r2, [r3, #96]
 1611              	.L105:
 922:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           }
 923:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* update the next node link after deleting pMDMA_LinkedListNode */
 924:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode->CLAR = pNode->CLAR;
 1612              		.loc 1 924 33
 1613 0104 3B68     		ldr	r3, [r7]
 1614 0106 5A69     		ldr	r2, [r3, #20]
 1615              		.loc 1 924 26
 1616 0108 7B69     		ldr	r3, [r7, #20]
 1617 010a 5A61     		str	r2, [r3, #20]
 925:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           nodeDeleted = 1;
 1618              		.loc 1 925 23
 1619 010c 0123     		movs	r3, #1
 1620 010e FB60     		str	r3, [r7, #12]
 926:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           /* Update the Handle node counter */
 927:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->LinkedListNodeCounter--;  
 1621              		.loc 1 927 16
 1622 0110 7B68     		ldr	r3, [r7, #4]
 1623 0112 5B6E     		ldr	r3, [r3, #100]
 1624              		.loc 1 927 39
 1625 0114 5A1E     		subs	r2, r3, #1
 1626 0116 7B68     		ldr	r3, [r7, #4]
 1627 0118 5A66     		str	r2, [r3, #100]
 1628 011a 02E0     		b	.L103
 1629              	.L104:
 928:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 929:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         else
 930:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
 931:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           ptmpNode = (MDMA_LinkNodeTypeDef *)ptmpNode->CLAR;
 1630              		.loc 1 931 54
 1631 011c 7B69     		ldr	r3, [r7, #20]
 1632 011e 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/ccoEQtJm.s 			page 46


 1633              		.loc 1 931 20
 1634 0120 7B61     		str	r3, [r7, #20]
 1635              	.L103:
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1636              		.loc 1 912 29
 1637 0122 7B68     		ldr	r3, [r7, #4]
 1638 0124 5B6E     		ldr	r3, [r3, #100]
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1639              		.loc 1 912 12
 1640 0126 3A69     		ldr	r2, [r7, #16]
 1641 0128 9A42     		cmp	r2, r3
 1642 012a 02D2     		bcs	.L106
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 1643              		.loc 1 912 54 discriminator 1
 1644 012c FB68     		ldr	r3, [r7, #12]
 1645 012e 002B     		cmp	r3, #0
 1646 0130 D8D0     		beq	.L107
 1647              	.L106:
 932:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
 933:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 934:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
 935:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(nodeDeleted == 0U)
 1648              		.loc 1 935 9
 1649 0132 FB68     		ldr	r3, [r7, #12]
 1650 0134 002B     		cmp	r3, #0
 1651 0136 01D1     		bne	.L98
 936:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
 937:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* last node reashed without finding the node to delete : return error */
 938:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hal_status = HAL_ERROR;
 1652              		.loc 1 938 20
 1653 0138 0123     		movs	r3, #1
 1654 013a FB72     		strb	r3, [r7, #11]
 1655              	.L98:
 939:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 940:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 941:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 942:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 943:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
 1656              		.loc 1 943 5
 1657 013c 7B68     		ldr	r3, [r7, #4]
 1658 013e 0022     		movs	r2, #0
 1659 0140 83F83C20 		strb	r2, [r3, #60]
 944:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 945:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 1660              		.loc 1 945 18
 1661 0144 7B68     		ldr	r3, [r7, #4]
 1662 0146 0122     		movs	r2, #1
 1663 0148 83F83D20 		strb	r2, [r3, #61]
 946:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 947:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return hal_status; 
 1664              		.loc 1 947 12
 1665 014c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1666 014e 04E0     		b	.L93
 1667              	.L95:
 948:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 949:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
 950:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccoEQtJm.s 			page 47


 951:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
 952:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 1668              		.loc 1 952 5
 1669 0150 7B68     		ldr	r3, [r7, #4]
 1670 0152 0022     		movs	r2, #0
 1671 0154 83F83C20 		strb	r2, [r3, #60]
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 954:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
 955:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 1672              		.loc 1 955 12
 1673 0158 0223     		movs	r3, #2
 1674              	.L93:
 956:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
 957:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1675              		.loc 1 957 1
 1676 015a 1846     		mov	r0, r3
 1677 015c 1C37     		adds	r7, r7, #28
 1678              		.cfi_def_cfa_offset 4
 1679 015e BD46     		mov	sp, r7
 1680              		.cfi_def_cfa_register 13
 1681              		@ sp needed
 1682 0160 5DF8047B 		ldr	r7, [sp], #4
 1683              		.cfi_restore 7
 1684              		.cfi_def_cfa_offset 0
 1685 0164 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE141:
 1689              		.section	.text.HAL_MDMA_LinkedList_EnableCircularMode,"ax",%progbits
 1690              		.align	1
 1691              		.global	HAL_MDMA_LinkedList_EnableCircularMode
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1695              		.fpu fpv5-d16
 1697              	HAL_MDMA_LinkedList_EnableCircularMode:
 1698              	.LFB142:
 958:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
 959:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
 960:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Make the linked list circular by connecting the last node to the first.
 961:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
 962:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
 963:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
 964:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
 965:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_EnableCircularMode(MDMA_HandleTypeDef *hmdma)
 966:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 1699              		.loc 1 966 1
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 16
 1702              		@ frame_needed = 1, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
 1704 0000 80B4     		push	{r7}
 1705              		.cfi_def_cfa_offset 4
 1706              		.cfi_offset 7, -4
 1707 0002 85B0     		sub	sp, sp, #20
 1708              		.cfi_def_cfa_offset 24
 1709 0004 00AF     		add	r7, sp, #0
 1710              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccoEQtJm.s 			page 48


 1711 0006 7860     		str	r0, [r7, #4]
 967:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1712              		.loc 1 967 21
 1713 0008 0023     		movs	r3, #0
 1714 000a FB73     		strb	r3, [r7, #15]
 968:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 969:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
 970:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 1715              		.loc 1 970 5
 1716 000c 7B68     		ldr	r3, [r7, #4]
 1717 000e 002B     		cmp	r3, #0
 1718 0010 01D1     		bne	.L109
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 972:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 1719              		.loc 1 972 12
 1720 0012 0123     		movs	r3, #1
 1721 0014 31E0     		b	.L110
 1722              	.L109:
 973:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
 974:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 975:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
 976:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 1723              		.loc 1 976 3
 1724 0016 7B68     		ldr	r3, [r7, #4]
 1725 0018 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1726 001c 012B     		cmp	r3, #1
 1727 001e 01D1     		bne	.L111
 1728              		.loc 1 976 3 is_stmt 0 discriminator 1
 1729 0020 0223     		movs	r3, #2
 1730 0022 2AE0     		b	.L110
 1731              	.L111:
 1732              		.loc 1 976 3 discriminator 2
 1733 0024 7B68     		ldr	r3, [r7, #4]
 1734 0026 0122     		movs	r2, #1
 1735 0028 83F83C20 		strb	r2, [r3, #60]
 977:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 978:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 1736              		.loc 1 978 35 is_stmt 1 discriminator 2
 1737 002c 7B68     		ldr	r3, [r7, #4]
 1738 002e 93F83D30 		ldrb	r3, [r3, #61]
 1739 0032 DBB2     		uxtb	r3, r3
 1740              		.loc 1 978 5 discriminator 2
 1741 0034 012B     		cmp	r3, #1
 1742 0036 17D1     		bne	.L112
 979:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 980:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
 981:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY; 
 1743              		.loc 1 981 18
 1744 0038 7B68     		ldr	r3, [r7, #4]
 1745 003a 0222     		movs	r2, #2
 1746 003c 83F83D20 		strb	r2, [r3, #61]
 982:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
 983:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
 984:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 1747              		.loc 1 984 24
 1748 0040 7B68     		ldr	r3, [r7, #4]
 1749 0042 DB6D     		ldr	r3, [r3, #92]
ARM GAS  /tmp/ccoEQtJm.s 			page 49


 1750              		.loc 1 984 7
 1751 0044 002B     		cmp	r3, #0
 1752 0046 07D0     		beq	.L113
 1753              		.loc 1 984 79 discriminator 1
 1754 0048 7B68     		ldr	r3, [r7, #4]
 1755 004a 1B6E     		ldr	r3, [r3, #96]
 1756              		.loc 1 984 60 discriminator 1
 1757 004c 002B     		cmp	r3, #0
 1758 004e 03D0     		beq	.L113
 1759              		.loc 1 984 123 discriminator 2
 1760 0050 7B68     		ldr	r3, [r7, #4]
 1761 0052 5B6E     		ldr	r3, [r3, #100]
 1762              		.loc 1 984 114 discriminator 2
 1763 0054 002B     		cmp	r3, #0
 1764 0056 02D1     		bne	.L114
 1765              	.L113:
 985:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 986:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 1766              		.loc 1 986 18
 1767 0058 0123     		movs	r3, #1
 1768 005a FB73     		strb	r3, [r7, #15]
 1769 005c 04E0     		b	.L112
 1770              	.L114:
 987:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 988:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
 989:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 990:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to enable circular mode Last Node should be connected to first node */
 991:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
 1771              		.loc 1 991 63
 1772 005e 7B68     		ldr	r3, [r7, #4]
 1773 0060 DA6D     		ldr	r2, [r3, #92]
 1774              		.loc 1 991 12
 1775 0062 7B68     		ldr	r3, [r7, #4]
 1776 0064 1B6E     		ldr	r3, [r3, #96]
 1777              		.loc 1 991 46
 1778 0066 5A61     		str	r2, [r3, #20]
 1779              	.L112:
 992:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
 993:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
 994:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
 995:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
 996:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma); 
 1780              		.loc 1 996 3
 1781 0068 7B68     		ldr	r3, [r7, #4]
 1782 006a 0022     		movs	r2, #0
 1783 006c 83F83C20 		strb	r2, [r3, #60]
 997:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
 998:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 1784              		.loc 1 998 16
 1785 0070 7B68     		ldr	r3, [r7, #4]
 1786 0072 0122     		movs	r2, #1
 1787 0074 83F83D20 		strb	r2, [r3, #61]
 999:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1000:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;  
 1788              		.loc 1 1000 10
 1789 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1790              	.L110:
ARM GAS  /tmp/ccoEQtJm.s 			page 50


1001:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1791              		.loc 1 1001 1
 1792 007a 1846     		mov	r0, r3
 1793 007c 1437     		adds	r7, r7, #20
 1794              		.cfi_def_cfa_offset 4
 1795 007e BD46     		mov	sp, r7
 1796              		.cfi_def_cfa_register 13
 1797              		@ sp needed
 1798 0080 5DF8047B 		ldr	r7, [sp], #4
 1799              		.cfi_restore 7
 1800              		.cfi_def_cfa_offset 0
 1801 0084 7047     		bx	lr
 1802              		.cfi_endproc
 1803              	.LFE142:
 1805              		.section	.text.HAL_MDMA_LinkedList_DisableCircularMode,"ax",%progbits
 1806              		.align	1
 1807              		.global	HAL_MDMA_LinkedList_DisableCircularMode
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1811              		.fpu fpv5-d16
 1813              	HAL_MDMA_LinkedList_DisableCircularMode:
 1814              	.LFB143:
1002:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1003:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1004:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Disable the linked list circular mode by setting the last node connection to null
1005:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : Pointer to a MDMA_HandleTypeDef structure that contains
1006:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1007:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1008:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1009:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_LinkedList_DisableCircularMode(MDMA_HandleTypeDef *hmdma)
1010:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 1815              		.loc 1 1010 1
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 16
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820 0000 80B4     		push	{r7}
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 7, -4
 1823 0002 85B0     		sub	sp, sp, #20
 1824              		.cfi_def_cfa_offset 24
 1825 0004 00AF     		add	r7, sp, #0
 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]
1011:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   HAL_StatusTypeDef hal_status = HAL_OK;  
 1828              		.loc 1 1011 21
 1829 0008 0023     		movs	r3, #0
 1830 000a FB73     		strb	r3, [r7, #15]
1012:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1013:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1014:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 1831              		.loc 1 1014 5
 1832 000c 7B68     		ldr	r3, [r7, #4]
 1833 000e 002B     		cmp	r3, #0
 1834 0010 01D1     		bne	.L116
1015:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccoEQtJm.s 			page 51


1016:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 1835              		.loc 1 1016 12
 1836 0012 0123     		movs	r3, #1
 1837 0014 30E0     		b	.L117
 1838              	.L116:
1017:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1018:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1019:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1020:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 1839              		.loc 1 1020 3
 1840 0016 7B68     		ldr	r3, [r7, #4]
 1841 0018 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1842 001c 012B     		cmp	r3, #1
 1843 001e 01D1     		bne	.L118
 1844              		.loc 1 1020 3 is_stmt 0 discriminator 1
 1845 0020 0223     		movs	r3, #2
 1846 0022 29E0     		b	.L117
 1847              	.L118:
 1848              		.loc 1 1020 3 discriminator 2
 1849 0024 7B68     		ldr	r3, [r7, #4]
 1850 0026 0122     		movs	r2, #1
 1851 0028 83F83C20 		strb	r2, [r3, #60]
1021:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1022:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 1852              		.loc 1 1022 35 is_stmt 1 discriminator 2
 1853 002c 7B68     		ldr	r3, [r7, #4]
 1854 002e 93F83D30 		ldrb	r3, [r3, #61]
 1855 0032 DBB2     		uxtb	r3, r3
 1856              		.loc 1 1022 5 discriminator 2
 1857 0034 012B     		cmp	r3, #1
 1858 0036 16D1     		bne	.L119
1023:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1024:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1025:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY; 
 1859              		.loc 1 1025 18
 1860 0038 7B68     		ldr	r3, [r7, #4]
 1861 003a 0222     		movs	r2, #2
 1862 003c 83F83D20 		strb	r2, [r3, #61]
1026:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  
1027:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* If first and last node are null (no nodes in the list) : return error*/
1028:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(((uint32_t)hmdma->FirstLinkedListNodeAddress == 0U) || ((uint32_t)hmdma->LastLinkedListNodeA
 1863              		.loc 1 1028 24
 1864 0040 7B68     		ldr	r3, [r7, #4]
 1865 0042 DB6D     		ldr	r3, [r3, #92]
 1866              		.loc 1 1028 7
 1867 0044 002B     		cmp	r3, #0
 1868 0046 07D0     		beq	.L120
 1869              		.loc 1 1028 79 discriminator 1
 1870 0048 7B68     		ldr	r3, [r7, #4]
 1871 004a 1B6E     		ldr	r3, [r3, #96]
 1872              		.loc 1 1028 60 discriminator 1
 1873 004c 002B     		cmp	r3, #0
 1874 004e 03D0     		beq	.L120
 1875              		.loc 1 1028 123 discriminator 2
 1876 0050 7B68     		ldr	r3, [r7, #4]
 1877 0052 5B6E     		ldr	r3, [r3, #100]
 1878              		.loc 1 1028 114 discriminator 2
ARM GAS  /tmp/ccoEQtJm.s 			page 52


 1879 0054 002B     		cmp	r3, #0
 1880 0056 02D1     		bne	.L121
 1881              	.L120:
1029:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1030:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hal_status = HAL_ERROR;
 1882              		.loc 1 1030 18
 1883 0058 0123     		movs	r3, #1
 1884 005a FB73     		strb	r3, [r7, #15]
 1885 005c 03E0     		b	.L119
 1886              	.L121:
1031:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1032:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1033:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1034:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* to disable circular mode Last Node should be connected to NULL */
1035:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->LastLinkedListNodeAddress->CLAR = 0;
 1887              		.loc 1 1035 12
 1888 005e 7B68     		ldr	r3, [r7, #4]
 1889 0060 1B6E     		ldr	r3, [r3, #96]
 1890              		.loc 1 1035 46
 1891 0062 0022     		movs	r2, #0
 1892 0064 5A61     		str	r2, [r3, #20]
 1893              	.L119:
1036:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1037:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1038:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1039:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process unlocked */
1040:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_UNLOCK(hmdma); 
 1894              		.loc 1 1040 3
 1895 0066 7B68     		ldr	r3, [r7, #4]
 1896 0068 0022     		movs	r2, #0
 1897 006a 83F83C20 		strb	r2, [r3, #60]
1041:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1042:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->State = HAL_MDMA_STATE_READY;
 1898              		.loc 1 1042 16
 1899 006e 7B68     		ldr	r3, [r7, #4]
 1900 0070 0122     		movs	r2, #1
 1901 0072 83F83D20 		strb	r2, [r3, #61]
1043:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1044:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hal_status;  
 1902              		.loc 1 1044 10
 1903 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1904              	.L117:
1045:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 1905              		.loc 1 1045 1
 1906 0078 1846     		mov	r0, r3
 1907 007a 1437     		adds	r7, r7, #20
 1908              		.cfi_def_cfa_offset 4
 1909 007c BD46     		mov	sp, r7
 1910              		.cfi_def_cfa_register 13
 1911              		@ sp needed
 1912 007e 5DF8047B 		ldr	r7, [sp], #4
 1913              		.cfi_restore 7
 1914              		.cfi_def_cfa_offset 0
 1915 0082 7047     		bx	lr
 1916              		.cfi_endproc
 1917              	.LFE143:
 1919              		.section	.text.HAL_MDMA_Start,"ax",%progbits
ARM GAS  /tmp/ccoEQtJm.s 			page 53


 1920              		.align	1
 1921              		.global	HAL_MDMA_Start
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1925              		.fpu fpv5-d16
 1927              	HAL_MDMA_Start:
 1928              	.LFB144:
1046:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1047:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1048:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1049:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1050:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1051:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group3
1052:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1053:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim   
1054:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1055:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                       #####  IO operation functions  #####
1056:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================  
1057:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]  This section provides functions allowing to:
1058:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and Start MDMA transfer
1059:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Configure the source, destination address and data length and 
1060:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Start MDMA transfer with interrupt
1061:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Abort MDMA transfer
1062:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Poll for transfer complete
1063:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Generate a SW request (when Request is set to MDMA_REQUEST_SW)
1064:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Handle MDMA interrupt request  
1065:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1066:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
1067:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1068:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1069:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1070:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1071:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer.
1072:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1073:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.  
1074:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1075:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1076:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1077:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1078:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1079:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1080:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddres
1081:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 1929              		.loc 1 1081 1
 1930              		.cfi_startproc
 1931              		@ args = 4, pretend = 0, frame = 16
 1932              		@ frame_needed = 1, uses_anonymous_args = 0
 1933 0000 80B5     		push	{r7, lr}
 1934              		.cfi_def_cfa_offset 8
 1935              		.cfi_offset 7, -8
 1936              		.cfi_offset 14, -4
 1937 0002 86B0     		sub	sp, sp, #24
 1938              		.cfi_def_cfa_offset 32
 1939 0004 02AF     		add	r7, sp, #8
 1940              		.cfi_def_cfa 7, 24
 1941 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccoEQtJm.s 			page 54


 1942 0008 B960     		str	r1, [r7, #8]
 1943 000a 7A60     		str	r2, [r7, #4]
 1944 000c 3B60     		str	r3, [r7]
1082:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1083:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1084:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount));  
1085:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1086:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1087:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 1945              		.loc 1 1087 5
 1946 000e FB68     		ldr	r3, [r7, #12]
 1947 0010 002B     		cmp	r3, #0
 1948 0012 01D1     		bne	.L123
1088:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1089:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 1949              		.loc 1 1089 12
 1950 0014 0123     		movs	r3, #1
 1951 0016 44E0     		b	.L124
 1952              	.L123:
1090:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1091:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1092:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1093:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 1953              		.loc 1 1093 3
 1954 0018 FB68     		ldr	r3, [r7, #12]
 1955 001a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1956 001e 012B     		cmp	r3, #1
 1957 0020 01D1     		bne	.L125
 1958              		.loc 1 1093 3 is_stmt 0 discriminator 1
 1959 0022 0223     		movs	r3, #2
 1960 0024 3DE0     		b	.L124
 1961              	.L125:
 1962              		.loc 1 1093 3 discriminator 2
 1963 0026 FB68     		ldr	r3, [r7, #12]
 1964 0028 0122     		movs	r2, #1
 1965 002a 83F83C20 		strb	r2, [r3, #60]
1094:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1095:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 1966              		.loc 1 1095 35 is_stmt 1 discriminator 2
 1967 002e FB68     		ldr	r3, [r7, #12]
 1968 0030 93F83D30 		ldrb	r3, [r3, #61]
 1969 0034 DBB2     		uxtb	r3, r3
 1970              		.loc 1 1095 5 discriminator 2
 1971 0036 012B     		cmp	r3, #1
 1972 0038 2CD1     		bne	.L126
1096:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1097:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1098:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 1973              		.loc 1 1098 18
 1974 003a FB68     		ldr	r3, [r7, #12]
 1975 003c 0222     		movs	r2, #2
 1976 003e 83F83D20 		strb	r2, [r3, #61]
1099:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE; 
 1977              		.loc 1 1101 22
 1978 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccoEQtJm.s 			page 55


 1979 0044 0022     		movs	r2, #0
 1980 0046 9A66     		str	r2, [r3, #104]
1102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
 1981              		.loc 1 1104 5
 1982 0048 FB68     		ldr	r3, [r7, #12]
 1983 004a 1B68     		ldr	r3, [r3]
 1984 004c DA68     		ldr	r2, [r3, #12]
 1985 004e FB68     		ldr	r3, [r7, #12]
 1986 0050 1B68     		ldr	r3, [r3]
 1987 0052 22F00102 		bic	r2, r2, #1
 1988 0056 DA60     		str	r2, [r3, #12]
1105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
 1989              		.loc 1 1107 5
 1990 0058 BB69     		ldr	r3, [r7, #24]
 1991 005a 0093     		str	r3, [sp]
 1992 005c 3B68     		ldr	r3, [r7]
 1993 005e 7A68     		ldr	r2, [r7, #4]
 1994 0060 B968     		ldr	r1, [r7, #8]
 1995 0062 F868     		ldr	r0, [r7, #12]
 1996 0064 FFF7FEFF 		bl	MDMA_SetConfig
1108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
1110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
 1997              		.loc 1 1110 5
 1998 0068 FB68     		ldr	r3, [r7, #12]
 1999 006a 1B68     		ldr	r3, [r3]
 2000 006c DA68     		ldr	r2, [r3, #12]
 2001 006e FB68     		ldr	r3, [r7, #12]
 2002 0070 1B68     		ldr	r3, [r3]
 2003 0072 42F00102 		orr	r2, r2, #1
 2004 0076 DA60     		str	r2, [r3, #12]
1111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
 2005              		.loc 1 1112 19
 2006 0078 FB68     		ldr	r3, [r7, #12]
 2007 007a 5B68     		ldr	r3, [r3, #4]
 2008              		.loc 1 1112 7
 2009 007c B3F1804F 		cmp	r3, #1073741824
 2010 0080 0ED1     		bne	.L128
1113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
 2011              		.loc 1 1115 12
 2012 0082 FB68     		ldr	r3, [r7, #12]
 2013 0084 1B68     		ldr	r3, [r3]
 2014              		.loc 1 1115 28
 2015 0086 DA68     		ldr	r2, [r3, #12]
 2016              		.loc 1 1115 12
 2017 0088 FB68     		ldr	r3, [r7, #12]
 2018 008a 1B68     		ldr	r3, [r3]
 2019              		.loc 1 1115 28
 2020 008c 42F48032 		orr	r2, r2, #65536
 2021 0090 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccoEQtJm.s 			page 56


 2022 0092 05E0     		b	.L128
 2023              	.L126:
1116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
1117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 2024              		.loc 1 1121 5
 2025 0094 FB68     		ldr	r3, [r7, #12]
 2026 0096 0022     		movs	r2, #0
 2027 0098 83F83C20 		strb	r2, [r3, #60]
1122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
1124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 2028              		.loc 1 1124 12
 2029 009c 0223     		movs	r3, #2
 2030 009e 00E0     		b	.L124
 2031              	.L128:
1125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK; 
 2032              		.loc 1 1127 10
 2033 00a0 0023     		movs	r3, #0
 2034              	.L124:
1128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2035              		.loc 1 1128 1
 2036 00a2 1846     		mov	r0, r3
 2037 00a4 1037     		adds	r7, r7, #16
 2038              		.cfi_def_cfa_offset 8
 2039 00a6 BD46     		mov	sp, r7
 2040              		.cfi_def_cfa_register 13
 2041              		@ sp needed
 2042 00a8 80BD     		pop	{r7, pc}
 2043              		.cfi_endproc
 2044              	.LFE144:
 2046              		.section	.text.HAL_MDMA_Start_IT,"ax",%progbits
 2047              		.align	1
 2048              		.global	HAL_MDMA_Start_IT
 2049              		.syntax unified
 2050              		.thumb
 2051              		.thumb_func
 2052              		.fpu fpv5-d16
 2054              	HAL_MDMA_Start_IT:
 2055              	.LFB145:
1129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Starts the MDMA Transfer with interrupts enabled.
1132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma           : pointer to a MDMA_HandleTypeDef structure that contains
1133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                           the configuration information for the specified MDMA Channel.  
1134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress      : The source memory Buffer address
1135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress      : The destination memory Buffer address
1136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount      : The number of a blocks to be transfer
1138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Start_IT(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAdd
ARM GAS  /tmp/ccoEQtJm.s 			page 57


1141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2056              		.loc 1 1141 1
 2057              		.cfi_startproc
 2058              		@ args = 4, pretend = 0, frame = 16
 2059              		@ frame_needed = 1, uses_anonymous_args = 0
 2060 0000 80B5     		push	{r7, lr}
 2061              		.cfi_def_cfa_offset 8
 2062              		.cfi_offset 7, -8
 2063              		.cfi_offset 14, -4
 2064 0002 86B0     		sub	sp, sp, #24
 2065              		.cfi_def_cfa_offset 32
 2066 0004 02AF     		add	r7, sp, #8
 2067              		.cfi_def_cfa 7, 24
 2068 0006 F860     		str	r0, [r7, #12]
 2069 0008 B960     		str	r1, [r7, #8]
 2070 000a 7A60     		str	r2, [r7, #4]
 2071 000c 3B60     		str	r3, [r7]
1142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_TRANSFER_LENGTH(BlockDataLength));
1144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_BLOCK_COUNT(BlockCount)); 
1145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 2072              		.loc 1 1147 5
 2073 000e FB68     		ldr	r3, [r7, #12]
 2074 0010 002B     		cmp	r3, #0
 2075 0012 01D1     		bne	.L130
1148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2076              		.loc 1 1149 12
 2077 0014 0123     		movs	r3, #1
 2078 0016 70E0     		b	.L131
 2079              	.L130:
1150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Process locked */
1153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_LOCK(hmdma);
 2080              		.loc 1 1153 3
 2081 0018 FB68     		ldr	r3, [r7, #12]
 2082 001a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2083 001e 012B     		cmp	r3, #1
 2084 0020 01D1     		bne	.L132
 2085              		.loc 1 1153 3 is_stmt 0 discriminator 1
 2086 0022 0223     		movs	r3, #2
 2087 0024 69E0     		b	.L131
 2088              	.L132:
 2089              		.loc 1 1153 3 discriminator 2
 2090 0026 FB68     		ldr	r3, [r7, #12]
 2091 0028 0122     		movs	r2, #1
 2092 002a 83F83C20 		strb	r2, [r3, #60]
1154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_READY == hmdma->State)
 2093              		.loc 1 1155 35 is_stmt 1 discriminator 2
 2094 002e FB68     		ldr	r3, [r7, #12]
 2095 0030 93F83D30 		ldrb	r3, [r3, #61]
 2096 0034 DBB2     		uxtb	r3, r3
 2097              		.loc 1 1155 5 discriminator 2
ARM GAS  /tmp/ccoEQtJm.s 			page 58


 2098 0036 012B     		cmp	r3, #1
 2099 0038 58D1     		bne	.L133
1156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change MDMA peripheral state */
1158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_BUSY;
 2100              		.loc 1 1158 18
 2101 003a FB68     		ldr	r3, [r7, #12]
 2102 003c 0222     		movs	r2, #2
 2103 003e 83F83D20 		strb	r2, [r3, #61]
1159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Initialize the error code */
1161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;     
 2104              		.loc 1 1161 22
 2105 0042 FB68     		ldr	r3, [r7, #12]
 2106 0044 0022     		movs	r2, #0
 2107 0046 9A66     		str	r2, [r3, #104]
1162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the peripheral */
1164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
 2108              		.loc 1 1164 5
 2109 0048 FB68     		ldr	r3, [r7, #12]
 2110 004a 1B68     		ldr	r3, [r3]
 2111 004c DA68     		ldr	r2, [r3, #12]
 2112 004e FB68     		ldr	r3, [r7, #12]
 2113 0050 1B68     		ldr	r3, [r3]
 2114 0052 22F00102 		bic	r2, r2, #1
 2115 0056 DA60     		str	r2, [r3, #12]
1165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Configure the source, destination address and the data length */
1167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     MDMA_SetConfig(hmdma, SrcAddress, DstAddress, BlockDataLength, BlockCount);
 2116              		.loc 1 1167 5
 2117 0058 BB69     		ldr	r3, [r7, #24]
 2118 005a 0093     		str	r3, [sp]
 2119 005c 3B68     		ldr	r3, [r7]
 2120 005e 7A68     		ldr	r2, [r7, #4]
 2121 0060 B968     		ldr	r1, [r7, #8]
 2122 0062 F868     		ldr	r0, [r7, #12]
 2123 0064 FFF7FEFF 		bl	MDMA_SetConfig
1168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable Common interrupts i.e Transfer Error IT and Channel Transfer Complete IT*/
1170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
 2124              		.loc 1 1170 5
 2125 0068 FB68     		ldr	r3, [r7, #12]
 2126 006a 1B68     		ldr	r3, [r3]
 2127 006c DA68     		ldr	r2, [r3, #12]
 2128 006e FB68     		ldr	r3, [r7, #12]
 2129 0070 1B68     		ldr	r3, [r3]
 2130 0072 42F00602 		orr	r2, r2, #6
 2131 0076 DA60     		str	r2, [r3, #12]
1171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBlockCpltCallback != NULL)
 2132              		.loc 1 1172 13
 2133 0078 FB68     		ldr	r3, [r7, #12]
 2134 007a DB6C     		ldr	r3, [r3, #76]
 2135              		.loc 1 1172 7
 2136 007c 002B     		cmp	r3, #0
 2137 007e 07D0     		beq	.L134
ARM GAS  /tmp/ccoEQtJm.s 			page 59


1173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Block transfer complete Callback is set enable the corresponding IT*/
1175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);    
 2138              		.loc 1 1175 7
 2139 0080 FB68     		ldr	r3, [r7, #12]
 2140 0082 1B68     		ldr	r3, [r3]
 2141 0084 DA68     		ldr	r2, [r3, #12]
 2142 0086 FB68     		ldr	r3, [r7, #12]
 2143 0088 1B68     		ldr	r3, [r3]
 2144 008a 42F01002 		orr	r2, r2, #16
 2145 008e DA60     		str	r2, [r3, #12]
 2146              	.L134:
1176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferRepeatBlockCpltCallback != NULL)
 2147              		.loc 1 1178 13
 2148 0090 FB68     		ldr	r3, [r7, #12]
 2149 0092 1B6D     		ldr	r3, [r3, #80]
 2150              		.loc 1 1178 7
 2151 0094 002B     		cmp	r3, #0
 2152 0096 07D0     		beq	.L135
1179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if Repeated Block transfer complete Callback is set enable the corresponding IT*/      
1181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);    
 2153              		.loc 1 1181 7
 2154 0098 FB68     		ldr	r3, [r7, #12]
 2155 009a 1B68     		ldr	r3, [r3]
 2156 009c DA68     		ldr	r2, [r3, #12]
 2157 009e FB68     		ldr	r3, [r7, #12]
 2158 00a0 1B68     		ldr	r3, [r3]
 2159 00a2 42F00802 		orr	r2, r2, #8
 2160 00a6 DA60     		str	r2, [r3, #12]
 2161              	.L135:
1182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
1183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->XferBufferCpltCallback != NULL)
 2162              		.loc 1 1184 13
 2163 00a8 FB68     		ldr	r3, [r7, #12]
 2164 00aa 9B6C     		ldr	r3, [r3, #72]
 2165              		.loc 1 1184 7
 2166 00ac 002B     		cmp	r3, #0
 2167 00ae 07D0     		beq	.L136
1185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* if buffer transfer complete Callback is set enable the corresponding IT*/
1187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
 2168              		.loc 1 1187 7
 2169 00b0 FB68     		ldr	r3, [r7, #12]
 2170 00b2 1B68     		ldr	r3, [r3]
 2171 00b4 DA68     		ldr	r2, [r3, #12]
 2172 00b6 FB68     		ldr	r3, [r7, #12]
 2173 00b8 1B68     		ldr	r3, [r3]
 2174 00ba 42F02002 		orr	r2, r2, #32
 2175 00be DA60     		str	r2, [r3, #12]
 2176              	.L136:
1188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Enable the Peripheral */
ARM GAS  /tmp/ccoEQtJm.s 			page 60


1191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_ENABLE(hmdma);
 2177              		.loc 1 1191 5
 2178 00c0 FB68     		ldr	r3, [r7, #12]
 2179 00c2 1B68     		ldr	r3, [r3]
 2180 00c4 DA68     		ldr	r2, [r3, #12]
 2181 00c6 FB68     		ldr	r3, [r7, #12]
 2182 00c8 1B68     		ldr	r3, [r3]
 2183 00ca 42F00102 		orr	r2, r2, #1
 2184 00ce DA60     		str	r2, [r3, #12]
1192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(hmdma->Init.Request == MDMA_REQUEST_SW)
 2185              		.loc 1 1193 19
 2186 00d0 FB68     		ldr	r3, [r7, #12]
 2187 00d2 5B68     		ldr	r3, [r3, #4]
 2188              		.loc 1 1193 7
 2189 00d4 B3F1804F 		cmp	r3, #1073741824
 2190 00d8 0ED1     		bne	.L138
1194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* activate If SW request mode*/
1196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
 2191              		.loc 1 1196 12
 2192 00da FB68     		ldr	r3, [r7, #12]
 2193 00dc 1B68     		ldr	r3, [r3]
 2194              		.loc 1 1196 28
 2195 00de DA68     		ldr	r2, [r3, #12]
 2196              		.loc 1 1196 12
 2197 00e0 FB68     		ldr	r3, [r7, #12]
 2198 00e2 1B68     		ldr	r3, [r3]
 2199              		.loc 1 1196 28
 2200 00e4 42F48032 		orr	r2, r2, #65536
 2201 00e8 DA60     		str	r2, [r3, #12]
 2202 00ea 05E0     		b	.L138
 2203              	.L133:
1197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }  
1198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 2204              		.loc 1 1202 5
 2205 00ec FB68     		ldr	r3, [r7, #12]
 2206 00ee 0022     		movs	r2, #0
 2207 00f0 83F83C20 		strb	r2, [r3, #60]
1203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Return error status */
1205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_BUSY;
 2208              		.loc 1 1205 12
 2209 00f4 0223     		movs	r3, #2
 2210 00f6 00E0     		b	.L131
 2211              	.L138:
1206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 2212              		.loc 1 1208 10
 2213 00f8 0023     		movs	r3, #0
 2214              	.L131:
1209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
ARM GAS  /tmp/ccoEQtJm.s 			page 61


 2215              		.loc 1 1209 1
 2216 00fa 1846     		mov	r0, r3
 2217 00fc 1037     		adds	r7, r7, #16
 2218              		.cfi_def_cfa_offset 8
 2219 00fe BD46     		mov	sp, r7
 2220              		.cfi_def_cfa_register 13
 2221              		@ sp needed
 2222 0100 80BD     		pop	{r7, pc}
 2223              		.cfi_endproc
 2224              	.LFE145:
 2226              		.section	.text.HAL_MDMA_Abort,"ax",%progbits
 2227              		.align	1
 2228              		.global	HAL_MDMA_Abort
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2232              		.fpu fpv5-d16
 2234              	HAL_MDMA_Abort:
 2235              	.LFB146:
1210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer.
1213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                   
1216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @note  After disabling a MDMA Channel, a check for wait until the MDMA Channel is 
1217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        effectively disabled is added. If a Channel is disabled 
1218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        while a data transfer is ongoing, the current data will be transferred
1219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        and the Channel will be effectively disabled only after the transfer of
1220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *        this single data is finished.  
1221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
1224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2236              		.loc 1 1224 1
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 16
 2239              		@ frame_needed = 1, uses_anonymous_args = 0
 2240 0000 80B5     		push	{r7, lr}
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 7, -8
 2243              		.cfi_offset 14, -4
 2244 0002 84B0     		sub	sp, sp, #16
 2245              		.cfi_def_cfa_offset 24
 2246 0004 00AF     		add	r7, sp, #0
 2247              		.cfi_def_cfa_register 7
 2248 0006 7860     		str	r0, [r7, #4]
1225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart =  HAL_GetTick();
 2249              		.loc 1 1225 25
 2250 0008 FFF7FEFF 		bl	HAL_GetTick
 2251 000c F860     		str	r0, [r7, #12]
1226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 2252              		.loc 1 1228 5
 2253 000e 7B68     		ldr	r3, [r7, #4]
 2254 0010 002B     		cmp	r3, #0
ARM GAS  /tmp/ccoEQtJm.s 			page 62


 2255 0012 01D1     		bne	.L140
1229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2256              		.loc 1 1230 12
 2257 0014 0123     		movs	r3, #1
 2258 0016 4AE0     		b	.L141
 2259              	.L140:
1231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
 2260              		.loc 1 1233 34
 2261 0018 7B68     		ldr	r3, [r7, #4]
 2262 001a 93F83D30 		ldrb	r3, [r3, #61]
 2263 001e DBB2     		uxtb	r3, r3
 2264              		.loc 1 1233 5
 2265 0020 022B     		cmp	r3, #2
 2266 0022 08D0     		beq	.L142
1234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 2267              		.loc 1 1235 22
 2268 0024 7B68     		ldr	r3, [r7, #4]
 2269 0026 8022     		movs	r2, #128
 2270 0028 9A66     		str	r2, [r3, #104]
1236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 2271              		.loc 1 1238 5
 2272 002a 7B68     		ldr	r3, [r7, #4]
 2273 002c 0022     		movs	r2, #0
 2274 002e 83F83C20 		strb	r2, [r3, #60]
1239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2275              		.loc 1 1240 12
 2276 0032 0123     		movs	r3, #1
 2277 0034 3BE0     		b	.L141
 2278              	.L142:
1241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable all the transfer interrupts */
1245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFT
 2279              		.loc 1 1245 5
 2280 0036 7B68     		ldr	r3, [r7, #4]
 2281 0038 1B68     		ldr	r3, [r3]
 2282 003a DA68     		ldr	r2, [r3, #12]
 2283 003c 7B68     		ldr	r3, [r7, #4]
 2284 003e 1B68     		ldr	r3, [r3]
 2285 0040 22F03E02 		bic	r2, r2, #62
 2286 0044 DA60     		str	r2, [r3, #12]
1246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
 2287              		.loc 1 1248 5
 2288 0046 7B68     		ldr	r3, [r7, #4]
 2289 0048 1B68     		ldr	r3, [r3]
 2290 004a DA68     		ldr	r2, [r3, #12]
 2291 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccoEQtJm.s 			page 63


 2292 004e 1B68     		ldr	r3, [r3]
 2293 0050 22F00102 		bic	r2, r2, #1
 2294 0054 DA60     		str	r2, [r3, #12]
1249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check if the MDMA Channel is effectively disabled */
1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 2295              		.loc 1 1251 10
 2296 0056 16E0     		b	.L143
 2297              	.L144:
1252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Check for the Timeout */
1254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 2298              		.loc 1 1254 12
 2299 0058 FFF7FEFF 		bl	HAL_GetTick
 2300 005c 0246     		mov	r2, r0
 2301              		.loc 1 1254 27
 2302 005e FB68     		ldr	r3, [r7, #12]
 2303 0060 D31A     		subs	r3, r2, r3
 2304              		.loc 1 1254 9
 2305 0062 052B     		cmp	r3, #5
 2306 0064 0FD9     		bls	.L143
1255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 2307              		.loc 1 1257 26
 2308 0066 7B68     		ldr	r3, [r7, #4]
 2309 0068 9B6E     		ldr	r3, [r3, #104]
 2310 006a 43F04002 		orr	r2, r3, #64
 2311 006e 7B68     		ldr	r3, [r7, #4]
 2312 0070 9A66     		str	r2, [r3, #104]
1258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
 2313              		.loc 1 1260 9
 2314 0072 7B68     		ldr	r3, [r7, #4]
 2315 0074 0022     		movs	r2, #0
 2316 0076 83F83C20 		strb	r2, [r3, #60]
1261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the MDMA state */
1263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_ERROR;
 2317              		.loc 1 1263 22
 2318 007a 7B68     		ldr	r3, [r7, #4]
 2319 007c 0322     		movs	r2, #3
 2320 007e 83F83D20 		strb	r2, [r3, #61]
1264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
 2321              		.loc 1 1265 16
 2322 0082 0123     		movs	r3, #1
 2323 0084 13E0     		b	.L141
 2324              	.L143:
1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2325              		.loc 1 1251 17
 2326 0086 7B68     		ldr	r3, [r7, #4]
 2327 0088 1B68     		ldr	r3, [r3]
1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2328              		.loc 1 1251 27
 2329 008a DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccoEQtJm.s 			page 64


1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2330              		.loc 1 1251 33
 2331 008c 03F00103 		and	r3, r3, #1
1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
 2332              		.loc 1 1251 10
 2333 0090 002B     		cmp	r3, #0
 2334 0092 E1D1     		bne	.L144
1266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Clear all interrupt flags */
1270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDM
 2335              		.loc 1 1270 5
 2336 0094 7B68     		ldr	r3, [r7, #4]
 2337 0096 1B68     		ldr	r3, [r3]
 2338 0098 1F22     		movs	r2, #31
 2339 009a 5A60     		str	r2, [r3, #4]
1271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 2340              		.loc 1 1273 5
 2341 009c 7B68     		ldr	r3, [r7, #4]
 2342 009e 0022     		movs	r2, #0
 2343 00a0 83F83C20 		strb	r2, [r3, #60]
1274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Change the MDMA state*/
1276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY; 
 2344              		.loc 1 1276 18
 2345 00a4 7B68     		ldr	r3, [r7, #4]
 2346 00a6 0122     		movs	r2, #1
 2347 00a8 83F83D20 		strb	r2, [r3, #61]
1277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK; 
 2348              		.loc 1 1279 10
 2349 00ac 0023     		movs	r3, #0
 2350              	.L141:
1280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2351              		.loc 1 1280 1
 2352 00ae 1846     		mov	r0, r3
 2353 00b0 1037     		adds	r7, r7, #16
 2354              		.cfi_def_cfa_offset 8
 2355 00b2 BD46     		mov	sp, r7
 2356              		.cfi_def_cfa_register 13
 2357              		@ sp needed
 2358 00b4 80BD     		pop	{r7, pc}
 2359              		.cfi_endproc
 2360              	.LFE146:
 2362              		.section	.text.HAL_MDMA_Abort_IT,"ax",%progbits
 2363              		.align	1
 2364              		.global	HAL_MDMA_Abort_IT
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu fpv5-d16
 2370              	HAL_MDMA_Abort_IT:
 2371              	.LFB147:
ARM GAS  /tmp/ccoEQtJm.s 			page 65


1281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Aborts the MDMA Transfer in Interrupt mode.
1284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma  : pointer to a MDMA_HandleTypeDef structure that contains
1285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                 the configuration information for the specified MDMA Channel.
1286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_Abort_IT(MDMA_HandleTypeDef *hmdma)
1289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2372              		.loc 1 1289 1
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 8
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376              		@ link register save eliminated.
 2377 0000 80B4     		push	{r7}
 2378              		.cfi_def_cfa_offset 4
 2379              		.cfi_offset 7, -4
 2380 0002 83B0     		sub	sp, sp, #12
 2381              		.cfi_def_cfa_offset 16
 2382 0004 00AF     		add	r7, sp, #0
 2383              		.cfi_def_cfa_register 7
 2384 0006 7860     		str	r0, [r7, #4]
1290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 2385              		.loc 1 1291 5
 2386 0008 7B68     		ldr	r3, [r7, #4]
 2387 000a 002B     		cmp	r3, #0
 2388 000c 01D1     		bne	.L146
1292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2389              		.loc 1 1293 12
 2390 000e 0123     		movs	r3, #1
 2391 0010 17E0     		b	.L147
 2392              	.L146:
1294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
 2393              		.loc 1 1296 34
 2394 0012 7B68     		ldr	r3, [r7, #4]
 2395 0014 93F83D30 		ldrb	r3, [r3, #61]
 2396 0018 DBB2     		uxtb	r3, r3
 2397              		.loc 1 1296 5
 2398 001a 022B     		cmp	r3, #2
 2399 001c 04D0     		beq	.L148
1297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 2400              		.loc 1 1299 22
 2401 001e 7B68     		ldr	r3, [r7, #4]
 2402 0020 8022     		movs	r2, #128
 2403 0022 9A66     		str	r2, [r3, #104]
1300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 	
1301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2404              		.loc 1 1301 12
 2405 0024 0123     		movs	r3, #1
 2406 0026 0CE0     		b	.L147
 2407              	.L148:
ARM GAS  /tmp/ccoEQtJm.s 			page 66


1302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set Abort State  */
1306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
 2408              		.loc 1 1306 18
 2409 0028 7B68     		ldr	r3, [r7, #4]
 2410 002a 0422     		movs	r2, #4
 2411 002c 83F83D20 		strb	r2, [r3, #61]
1307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the stream */
1309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
 2412              		.loc 1 1309 5
 2413 0030 7B68     		ldr	r3, [r7, #4]
 2414 0032 1B68     		ldr	r3, [r3]
 2415 0034 DA68     		ldr	r2, [r3, #12]
 2416 0036 7B68     		ldr	r3, [r7, #4]
 2417 0038 1B68     		ldr	r3, [r3]
 2418 003a 22F00102 		bic	r2, r2, #1
 2419 003e DA60     		str	r2, [r3, #12]
1310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 2420              		.loc 1 1312 10
 2421 0040 0023     		movs	r3, #0
 2422              	.L147:
1313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2423              		.loc 1 1313 1
 2424 0042 1846     		mov	r0, r3
 2425 0044 0C37     		adds	r7, r7, #12
 2426              		.cfi_def_cfa_offset 4
 2427 0046 BD46     		mov	sp, r7
 2428              		.cfi_def_cfa_register 13
 2429              		@ sp needed
 2430 0048 5DF8047B 		ldr	r7, [sp], #4
 2431              		.cfi_restore 7
 2432              		.cfi_def_cfa_offset 0
 2433 004c 7047     		bx	lr
 2434              		.cfi_endproc
 2435              	.LFE147:
 2437              		.section	.text.HAL_MDMA_PollForTransfer,"ax",%progbits
 2438              		.align	1
 2439              		.global	HAL_MDMA_PollForTransfer
 2440              		.syntax unified
 2441              		.thumb
 2442              		.thumb_func
 2443              		.fpu fpv5-d16
 2445              	HAL_MDMA_PollForTransfer:
 2446              	.LFB148:
1314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Polling for transfer complete.
1317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:          pointer to a MDMA_HandleTypeDef structure that contains
1318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                        the configuration information for the specified MDMA Channel.
1319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  CompleteLevel: Specifies the MDMA level complete.  
1320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  Timeout:       Timeout duration.
1321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
ARM GAS  /tmp/ccoEQtJm.s 			page 67


1322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_PollForTransfer(MDMA_HandleTypeDef *hmdma, HAL_MDMA_LevelCompleteTypeDef
1324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2447              		.loc 1 1324 1
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 32
 2450              		@ frame_needed = 1, uses_anonymous_args = 0
 2451 0000 80B5     		push	{r7, lr}
 2452              		.cfi_def_cfa_offset 8
 2453              		.cfi_offset 7, -8
 2454              		.cfi_offset 14, -4
 2455 0002 88B0     		sub	sp, sp, #32
 2456              		.cfi_def_cfa_offset 40
 2457 0004 00AF     		add	r7, sp, #0
 2458              		.cfi_def_cfa_register 7
 2459 0006 F860     		str	r0, [r7, #12]
 2460 0008 0B46     		mov	r3, r1
 2461 000a 7A60     		str	r2, [r7, #4]
 2462 000c FB72     		strb	r3, [r7, #11]
1325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t levelFlag, errorFlag;
1326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t tickstart;
1327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the parameters */
1329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   assert_param(IS_MDMA_LEVEL_COMPLETE(CompleteLevel));
1330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 2463              		.loc 1 1332 5
 2464 000e FB68     		ldr	r3, [r7, #12]
 2465 0010 002B     		cmp	r3, #0
 2466 0012 01D1     		bne	.L150
1333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2467              		.loc 1 1334 12
 2468 0014 0123     		movs	r3, #1
 2469 0016 B9E0     		b	.L151
 2470              	.L150:
1335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(HAL_MDMA_STATE_BUSY != hmdma->State)
 2471              		.loc 1 1337 34
 2472 0018 FB68     		ldr	r3, [r7, #12]
 2473 001a 93F83D30 		ldrb	r3, [r3, #61]
 2474 001e DBB2     		uxtb	r3, r3
 2475              		.loc 1 1337 5
 2476 0020 022B     		cmp	r3, #2
 2477 0022 04D0     		beq	.L152
1338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* No transfer ongoing */
1340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 2478              		.loc 1 1340 22
 2479 0024 FB68     		ldr	r3, [r7, #12]
 2480 0026 8022     		movs	r2, #128
 2481 0028 9A66     		str	r2, [r3, #104]
1341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2482              		.loc 1 1342 12
ARM GAS  /tmp/ccoEQtJm.s 			page 68


 2483 002a 0123     		movs	r3, #1
 2484 002c AEE0     		b	.L151
 2485              	.L152:
1343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }  
1344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the level transfer complete flag */
1346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   levelFlag = ((CompleteLevel == HAL_MDMA_FULL_TRANSFER)  ? MDMA_FLAG_CTC  : \
 2486              		.loc 1 1346 76
 2487 002e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2488 0030 002B     		cmp	r3, #0
 2489 0032 0BD0     		beq	.L153
1347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2490              		.loc 1 1347 76
 2491 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2492 0036 012B     		cmp	r3, #1
 2493 0038 06D0     		beq	.L154
1348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BLOCK_TRANSFER) ? MDMA_FLAG_BT   : \
 2494              		.loc 1 1348 76
 2495 003a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2496 003c 022B     		cmp	r3, #2
 2497 003e 01D1     		bne	.L155
 2498              		.loc 1 1348 76 is_stmt 0 discriminator 1
 2499 0040 0823     		movs	r3, #8
 2500 0042 04E0     		b	.L158
 2501              	.L155:
 2502              		.loc 1 1348 76 discriminator 2
 2503 0044 0423     		movs	r3, #4
 2504 0046 02E0     		b	.L158
 2505              	.L154:
1347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2506              		.loc 1 1347 76 is_stmt 1 discriminator 1
 2507 0048 1023     		movs	r3, #16
 2508 004a 00E0     		b	.L158
 2509              	.L153:
1346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2510              		.loc 1 1346 76 discriminator 1
 2511 004c 0223     		movs	r3, #2
 2512              	.L158:
1346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                (CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)? MDMA_FLAG_BFTC : \
 2513              		.loc 1 1346 13 discriminator 3
 2514 004e FB61     		str	r3, [r7, #28]
1349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                MDMA_FLAG_BRT);
1350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get timeout */
1353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   tickstart = HAL_GetTick();
 2515              		.loc 1 1353 15 discriminator 3
 2516 0050 FFF7FEFF 		bl	HAL_GetTick
 2517 0054 B861     		str	r0, [r7, #24]
1354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   while(__HAL_MDMA_GET_FLAG(hmdma, levelFlag) == 0U)
 2518              		.loc 1 1355 8 discriminator 3
 2519 0056 67E0     		b	.L159
 2520              	.L168:
1356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
 2521              		.loc 1 1357 9
ARM GAS  /tmp/ccoEQtJm.s 			page 69


 2522 0058 FB68     		ldr	r3, [r7, #12]
 2523 005a 1B68     		ldr	r3, [r3]
 2524 005c 1B68     		ldr	r3, [r3]
 2525 005e 03F00103 		and	r3, r3, #1
 2526              		.loc 1 1357 7
 2527 0062 002B     		cmp	r3, #0
 2528 0064 46D0     		beq	.L160
1358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
1359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
1360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
 2529              		.loc 1 1360 24
 2530 0066 FB68     		ldr	r3, [r7, #12]
 2531 0068 1B68     		ldr	r3, [r3]
 2532              		.loc 1 1360 17
 2533 006a 9B68     		ldr	r3, [r3, #8]
 2534 006c 7B61     		str	r3, [r7, #20]
1361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
 2535              		.loc 1 1362 21
 2536 006e 7B69     		ldr	r3, [r7, #20]
 2537 0070 03F08003 		and	r3, r3, #128
 2538              		.loc 1 1362 9
 2539 0074 002B     		cmp	r3, #0
 2540 0076 06D1     		bne	.L161
1363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
 2541              		.loc 1 1365 26
 2542 0078 FB68     		ldr	r3, [r7, #12]
 2543 007a 9B6E     		ldr	r3, [r3, #104]
 2544 007c 43F00102 		orr	r2, r3, #1
 2545 0080 FB68     		ldr	r3, [r7, #12]
 2546 0082 9A66     		str	r2, [r3, #104]
 2547 0084 05E0     		b	.L162
 2548              	.L161:
1366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;        
 2549              		.loc 1 1370 26
 2550 0086 FB68     		ldr	r3, [r7, #12]
 2551 0088 9B6E     		ldr	r3, [r3, #104]
 2552 008a 43F00202 		orr	r2, r3, #2
 2553 008e FB68     		ldr	r3, [r7, #12]
 2554 0090 9A66     		str	r2, [r3, #104]
 2555              	.L162:
1371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
 2556              		.loc 1 1373 21
 2557 0092 7B69     		ldr	r3, [r7, #20]
 2558 0094 03F40073 		and	r3, r3, #512
 2559              		.loc 1 1373 9
 2560 0098 002B     		cmp	r3, #0
 2561 009a 05D0     		beq	.L163
1374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
ARM GAS  /tmp/ccoEQtJm.s 			page 70


1375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
 2562              		.loc 1 1376 26
 2563 009c FB68     		ldr	r3, [r7, #12]
 2564 009e 9B6E     		ldr	r3, [r3, #104]
 2565 00a0 43F00402 		orr	r2, r3, #4
 2566 00a4 FB68     		ldr	r3, [r7, #12]
 2567 00a6 9A66     		str	r2, [r3, #104]
 2568              	.L163:
1377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
 2569              		.loc 1 1379 21
 2570 00a8 7B69     		ldr	r3, [r7, #20]
 2571 00aa 03F48073 		and	r3, r3, #256
 2572              		.loc 1 1379 9
 2573 00ae 002B     		cmp	r3, #0
 2574 00b0 05D0     		beq	.L164
1380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
 2575              		.loc 1 1382 26
 2576 00b2 FB68     		ldr	r3, [r7, #12]
 2577 00b4 9B6E     		ldr	r3, [r3, #104]
 2578 00b6 43F00802 		orr	r2, r3, #8
 2579 00ba FB68     		ldr	r3, [r7, #12]
 2580 00bc 9A66     		str	r2, [r3, #104]
 2581              	.L164:
1383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
 2582              		.loc 1 1385 21
 2583 00be 7B69     		ldr	r3, [r7, #20]
 2584 00c0 03F48063 		and	r3, r3, #1024
 2585              		.loc 1 1385 9
 2586 00c4 002B     		cmp	r3, #0
 2587 00c6 05D0     		beq	.L165
1386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
 2588              		.loc 1 1388 26
 2589 00c8 FB68     		ldr	r3, [r7, #12]
 2590 00ca 9B6E     		ldr	r3, [r3, #104]
 2591 00cc 43F01002 		orr	r2, r3, #16
 2592 00d0 FB68     		ldr	r3, [r7, #12]
 2593 00d2 9A66     		str	r2, [r3, #104]
 2594              	.L165:
1389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
 2595              		.loc 1 1391 21
 2596 00d4 7B69     		ldr	r3, [r7, #20]
 2597 00d6 03F40063 		and	r3, r3, #2048
 2598              		.loc 1 1391 9
 2599 00da 002B     		cmp	r3, #0
 2600 00dc 05D0     		beq	.L166
1392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
ARM GAS  /tmp/ccoEQtJm.s 			page 71


1393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error */
1394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
 2601              		.loc 1 1394 26
 2602 00de FB68     		ldr	r3, [r7, #12]
 2603 00e0 9B6E     		ldr	r3, [r3, #104]
 2604 00e2 43F02002 		orr	r2, r3, #32
 2605 00e6 FB68     		ldr	r3, [r7, #12]
 2606 00e8 9A66     		str	r2, [r3, #104]
 2607              	.L166:
1395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }      
1396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (void) HAL_MDMA_Abort(hmdma); /* if error then abort the current transfer */
 2608              		.loc 1 1397 14
 2609 00ea F868     		ldr	r0, [r7, #12]
 2610 00ec FFF7FEFF 		bl	HAL_MDMA_Abort
1398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /*
1400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         Note that the Abort function will 
1401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Clear all transfer flags
1402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Unlock
1403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           - Set the State          
1404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       */       
1405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       return HAL_ERROR;
 2611              		.loc 1 1406 14
 2612 00f0 0123     		movs	r3, #1
 2613 00f2 4BE0     		b	.L151
 2614              	.L160:
1407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Check for the Timeout */
1411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(Timeout != HAL_MAX_DELAY)
 2615              		.loc 1 1411 7
 2616 00f4 7B68     		ldr	r3, [r7, #4]
 2617 00f6 B3F1FF3F 		cmp	r3, #-1
 2618 00fa 15D0     		beq	.L159
1412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(((HAL_GetTick() - tickstart ) > Timeout) || (Timeout == 0U))
 2619              		.loc 1 1413 12
 2620 00fc FFF7FEFF 		bl	HAL_GetTick
 2621 0100 0246     		mov	r2, r0
 2622              		.loc 1 1413 26
 2623 0102 BB69     		ldr	r3, [r7, #24]
 2624 0104 D31A     		subs	r3, r2, r3
 2625              		.loc 1 1413 9
 2626 0106 7A68     		ldr	r2, [r7, #4]
 2627 0108 9A42     		cmp	r2, r3
 2628 010a 02D3     		bcc	.L167
 2629              		.loc 1 1413 51 discriminator 1
 2630 010c 7B68     		ldr	r3, [r7, #4]
 2631 010e 002B     		cmp	r3, #0
 2632 0110 0AD1     		bne	.L159
 2633              	.L167:
1414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code */
1416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
ARM GAS  /tmp/ccoEQtJm.s 			page 72


 2634              		.loc 1 1416 26
 2635 0112 FB68     		ldr	r3, [r7, #12]
 2636 0114 9B6E     		ldr	r3, [r3, #104]
 2637 0116 43F04002 		orr	r2, r3, #64
 2638 011a FB68     		ldr	r3, [r7, #12]
 2639 011c 9A66     		str	r2, [r3, #104]
1417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         (void) HAL_MDMA_Abort(hmdma); /* if timeout then abort the current transfer */
 2640              		.loc 1 1418 16
 2641 011e F868     		ldr	r0, [r7, #12]
 2642 0120 FFF7FEFF 		bl	HAL_MDMA_Abort
1419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /*
1421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           Note that the Abort function will 
1422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Clear all transfer flags
1423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Unlock
1424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****             - Set the State          
1425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         */
1426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return HAL_ERROR;
 2643              		.loc 1 1427 16
 2644 0124 0123     		movs	r3, #1
 2645 0126 31E0     		b	.L151
 2646              	.L159:
1355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2647              		.loc 1 1355 9
 2648 0128 FB68     		ldr	r3, [r7, #12]
 2649 012a 1B68     		ldr	r3, [r3]
 2650 012c 1A68     		ldr	r2, [r3]
 2651 012e FB69     		ldr	r3, [r7, #28]
 2652 0130 1340     		ands	r3, r3, r2
1355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
 2653              		.loc 1 1355 8
 2654 0132 002B     		cmp	r3, #0
 2655 0134 90D0     		beq	.L168
1428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear the transfer level flag */
1433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(CompleteLevel == HAL_MDMA_BUFFER_TRANSFER)
 2656              		.loc 1 1433 5
 2657 0136 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2658 0138 012B     		cmp	r3, #1
 2659 013a 04D1     		bne	.L169
1434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
 2660              		.loc 1 1435 5
 2661 013c FB68     		ldr	r3, [r7, #12]
 2662 013e 1B68     		ldr	r3, [r3]
 2663 0140 1022     		movs	r2, #16
 2664 0142 5A60     		str	r2, [r3, #4]
 2665 0144 21E0     		b	.L170
 2666              	.L169:
1436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_BLOCK_TRANSFER)
ARM GAS  /tmp/ccoEQtJm.s 			page 73


 2667              		.loc 1 1438 10
 2668 0146 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2669 0148 022B     		cmp	r3, #2
 2670 014a 04D1     		bne	.L171
1439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT));
 2671              		.loc 1 1440 5
 2672 014c FB68     		ldr	r3, [r7, #12]
 2673 014e 1B68     		ldr	r3, [r3]
 2674 0150 1822     		movs	r2, #24
 2675 0152 5A60     		str	r2, [r3, #4]
 2676 0154 19E0     		b	.L170
 2677              	.L171:
1441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_REPEAT_BLOCK_TRANSFER)
 2678              		.loc 1 1443 10
 2679 0156 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2680 0158 032B     		cmp	r3, #3
 2681 015a 04D1     		bne	.L172
1444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BFTC | MDMA_FLAG_BT | MDMA_FLAG_BRT));    
 2682              		.loc 1 1445 5
 2683 015c FB68     		ldr	r3, [r7, #12]
 2684 015e 1B68     		ldr	r3, [r3]
 2685 0160 1C22     		movs	r2, #28
 2686 0162 5A60     		str	r2, [r3, #4]
 2687 0164 11E0     		b	.L170
 2688              	.L172:
1446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
1447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(CompleteLevel == HAL_MDMA_FULL_TRANSFER)
 2689              		.loc 1 1447 10
 2690 0166 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2691 0168 002B     		cmp	r3, #0
 2692 016a 0CD1     		bne	.L173
1448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC | MDMA_FLAG_CTC));
 2693              		.loc 1 1449 5
 2694 016c FB68     		ldr	r3, [r7, #12]
 2695 016e 1B68     		ldr	r3, [r3]
 2696 0170 1E22     		movs	r2, #30
 2697 0172 5A60     		str	r2, [r3, #4]
1450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process unlocked */
1452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma); 
 2698              		.loc 1 1452 5
 2699 0174 FB68     		ldr	r3, [r7, #12]
 2700 0176 0022     		movs	r2, #0
 2701 0178 83F83C20 		strb	r2, [r3, #60]
1453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_READY;
 2702              		.loc 1 1454 18
 2703 017c FB68     		ldr	r3, [r7, #12]
 2704 017e 0122     		movs	r2, #1
 2705 0180 83F83D20 		strb	r2, [r3, #61]
 2706 0184 01E0     		b	.L170
 2707              	.L173:
ARM GAS  /tmp/ccoEQtJm.s 			page 74


1455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2708              		.loc 1 1458 12
 2709 0186 0123     		movs	r3, #1
 2710 0188 00E0     		b	.L151
 2711              	.L170:
1459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return HAL_OK;
 2712              		.loc 1 1461 10
 2713 018a 0023     		movs	r3, #0
 2714              	.L151:
1462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 2715              		.loc 1 1462 1
 2716 018c 1846     		mov	r0, r3
 2717 018e 2037     		adds	r7, r7, #32
 2718              		.cfi_def_cfa_offset 8
 2719 0190 BD46     		mov	sp, r7
 2720              		.cfi_def_cfa_register 13
 2721              		@ sp needed
 2722 0192 80BD     		pop	{r7, pc}
 2723              		.cfi_endproc
 2724              	.LFE148:
 2726              		.section	.text.HAL_MDMA_GenerateSWRequest,"ax",%progbits
 2727              		.align	1
 2728              		.global	HAL_MDMA_GenerateSWRequest
 2729              		.syntax unified
 2730              		.thumb
 2731              		.thumb_func
 2732              		.fpu fpv5-d16
 2734              	HAL_MDMA_GenerateSWRequest:
 2735              	.LFB149:
1463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Generate an MDMA SW request trigger to activate the request on the given Channel.
1466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Stream.  
1468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_StatusTypeDef HAL_MDMA_GenerateSWRequest(MDMA_HandleTypeDef *hmdma)
1471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2736              		.loc 1 1471 1
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 16
 2739              		@ frame_needed = 1, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
 2741 0000 80B4     		push	{r7}
 2742              		.cfi_def_cfa_offset 4
 2743              		.cfi_offset 7, -4
 2744 0002 85B0     		sub	sp, sp, #20
 2745              		.cfi_def_cfa_offset 24
 2746 0004 00AF     		add	r7, sp, #0
 2747              		.cfi_def_cfa_register 7
 2748 0006 7860     		str	r0, [r7, #4]
1472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t request_mode;
ARM GAS  /tmp/ccoEQtJm.s 			page 75


1473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Check the MDMA peripheral handle */
1475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma == NULL)
 2749              		.loc 1 1475 5
 2750 0008 7B68     		ldr	r3, [r7, #4]
 2751 000a 002B     		cmp	r3, #0
 2752 000c 01D1     		bne	.L175
1476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;
 2753              		.loc 1 1477 12
 2754 000e 0123     		movs	r3, #1
 2755 0010 2AE0     		b	.L176
 2756              	.L175:
1478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Get the softawre request mode */
1481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   request_mode = hmdma->Instance->CTCR & MDMA_CTCR_SWRM;
 2757              		.loc 1 1481 23
 2758 0012 7B68     		ldr	r3, [r7, #4]
 2759 0014 1B68     		ldr	r3, [r3]
 2760              		.loc 1 1481 33
 2761 0016 1B69     		ldr	r3, [r3, #16]
 2762              		.loc 1 1481 16
 2763 0018 03F08043 		and	r3, r3, #1073741824
 2764 001c FB60     		str	r3, [r7, #12]
1482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((hmdma->Instance->CCR &  MDMA_CCR_EN) == 0U)
 2765              		.loc 1 1483 12
 2766 001e 7B68     		ldr	r3, [r7, #4]
 2767 0020 1B68     		ldr	r3, [r3]
 2768              		.loc 1 1483 22
 2769 0022 DB68     		ldr	r3, [r3, #12]
 2770              		.loc 1 1483 28
 2771 0024 03F00103 		and	r3, r3, #1
 2772              		.loc 1 1483 5
 2773 0028 002B     		cmp	r3, #0
 2774 002a 04D1     		bne	.L177
1484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if no Transfer on going (MDMA enable bit not set) retrun error */
1486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 2775              		.loc 1 1486 22
 2776 002c 7B68     		ldr	r3, [r7, #4]
 2777 002e 8022     		movs	r2, #128
 2778 0030 9A66     		str	r2, [r3, #104]
1487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;      
 2779              		.loc 1 1488 12
 2780 0032 0123     		movs	r3, #1
 2781 0034 18E0     		b	.L176
 2782              	.L177:
1489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else if(((hmdma->Instance->CISR &  MDMA_CISR_CRQA) != 0U) || (request_mode == 0U))
 2783              		.loc 1 1490 18
 2784 0036 7B68     		ldr	r3, [r7, #4]
 2785 0038 1B68     		ldr	r3, [r3]
 2786              		.loc 1 1490 28
 2787 003a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccoEQtJm.s 			page 76


 2788              		.loc 1 1490 35
 2789 003c 03F48033 		and	r3, r3, #65536
 2790              		.loc 1 1490 10
 2791 0040 002B     		cmp	r3, #0
 2792 0042 02D1     		bne	.L178
 2793              		.loc 1 1490 61 discriminator 1
 2794 0044 FB68     		ldr	r3, [r7, #12]
 2795 0046 002B     		cmp	r3, #0
 2796 0048 05D1     		bne	.L179
 2797              	.L178:
1491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* if an MDMA ongoing request has not yet end or if request mode is not SW request retrun error
1493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->ErrorCode = HAL_MDMA_ERROR_BUSY;
 2798              		.loc 1 1493 22
 2799 004a 7B68     		ldr	r3, [r7, #4]
 2800 004c 4FF48072 		mov	r2, #256
 2801 0050 9A66     		str	r2, [r3, #104]
1494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_ERROR;      
 2802              		.loc 1 1495 12
 2803 0052 0123     		movs	r3, #1
 2804 0054 08E0     		b	.L176
 2805              	.L179:
1496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the SW request bit to activate the request on the Channel */
1500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CCR |= MDMA_CCR_SWRQ;
 2806              		.loc 1 1500 10
 2807 0056 7B68     		ldr	r3, [r7, #4]
 2808 0058 1B68     		ldr	r3, [r3]
 2809              		.loc 1 1500 26
 2810 005a DA68     		ldr	r2, [r3, #12]
 2811              		.loc 1 1500 10
 2812 005c 7B68     		ldr	r3, [r7, #4]
 2813 005e 1B68     		ldr	r3, [r3]
 2814              		.loc 1 1500 26
 2815 0060 42F48032 		orr	r2, r2, #65536
 2816 0064 DA60     		str	r2, [r3, #12]
1501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return HAL_OK;
 2817              		.loc 1 1502 12
 2818 0066 0023     		movs	r3, #0
 2819              	.L176:
1503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** } 
 2820              		.loc 1 1504 1
 2821 0068 1846     		mov	r0, r3
 2822 006a 1437     		adds	r7, r7, #20
 2823              		.cfi_def_cfa_offset 4
 2824 006c BD46     		mov	sp, r7
 2825              		.cfi_def_cfa_register 13
 2826              		@ sp needed
 2827 006e 5DF8047B 		ldr	r7, [sp], #4
 2828              		.cfi_restore 7
 2829              		.cfi_def_cfa_offset 0
 2830 0072 7047     		bx	lr
ARM GAS  /tmp/ccoEQtJm.s 			page 77


 2831              		.cfi_endproc
 2832              	.LFE149:
 2834              		.section	.text.HAL_MDMA_IRQHandler,"ax",%progbits
 2835              		.align	1
 2836              		.global	HAL_MDMA_IRQHandler
 2837              		.syntax unified
 2838              		.thumb
 2839              		.thumb_func
 2840              		.fpu fpv5-d16
 2842              	HAL_MDMA_IRQHandler:
 2843              	.LFB150:
1505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Handles MDMA interrupt request.
1508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.  
1510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** void HAL_MDMA_IRQHandler(MDMA_HandleTypeDef *hmdma)
1513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 2844              		.loc 1 1513 1
 2845              		.cfi_startproc
 2846              		@ args = 0, pretend = 0, frame = 24
 2847              		@ frame_needed = 1, uses_anonymous_args = 0
 2848 0000 80B5     		push	{r7, lr}
 2849              		.cfi_def_cfa_offset 8
 2850              		.cfi_offset 7, -8
 2851              		.cfi_offset 14, -4
 2852 0002 86B0     		sub	sp, sp, #24
 2853              		.cfi_def_cfa_offset 32
 2854 0004 00AF     		add	r7, sp, #0
 2855              		.cfi_def_cfa_register 7
 2856 0006 7860     		str	r0, [r7, #4]
1514:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __IO uint32_t count = 0;
 2857              		.loc 1 1514 17
 2858 0008 0023     		movs	r3, #0
 2859 000a BB60     		str	r3, [r7, #8]
1515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 2860              		.loc 1 1515 38
 2861 000c 9A4B     		ldr	r3, .L204
 2862 000e 1B68     		ldr	r3, [r3]
 2863              		.loc 1 1515 12
 2864 0010 9A4A     		ldr	r2, .L204+4
 2865 0012 A2FB0323 		umull	r2, r3, r2, r3
 2866 0016 9B0A     		lsrs	r3, r3, #10
 2867 0018 7B61     		str	r3, [r7, #20]
1516:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1517:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t generalIntFlag, errorFlag;
1518:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1519:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* General Interrupt Flag management ****************************************/  
1520:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANN
 2868              		.loc 1 1520 46
 2869 001a 7B68     		ldr	r3, [r7, #4]
 2870 001c 1B68     		ldr	r3, [r3]
 2871              		.loc 1 1520 31
 2872 001e 1A46     		mov	r2, r3
 2873              		.loc 1 1520 57
ARM GAS  /tmp/ccoEQtJm.s 			page 78


 2874 0020 974B     		ldr	r3, .L204+8
 2875 0022 1344     		add	r3, r3, r2
 2876              		.loc 1 1520 85
 2877 0024 9B09     		lsrs	r3, r3, #6
 2878              		.loc 1 1520 109
 2879 0026 03F01F03 		and	r3, r3, #31
 2880              		.loc 1 1520 18
 2881 002a 0122     		movs	r2, #1
 2882 002c 02FA03F3 		lsl	r3, r2, r3
 2883 0030 3B61     		str	r3, [r7, #16]
1521:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((MDMA->GISR0 & generalIntFlag) == 0U)
 2884              		.loc 1 1521 11
 2885 0032 4FF0A443 		mov	r3, #1375731712
 2886 0036 1A68     		ldr	r2, [r3]
 2887              		.loc 1 1521 19
 2888 0038 3B69     		ldr	r3, [r7, #16]
 2889 003a 1340     		ands	r3, r3, r2
 2890              		.loc 1 1521 5
 2891 003c 002B     		cmp	r3, #0
 2892 003e 00F02E81 		beq	.L201
1522:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1523:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     return; /* the  General interrupt flag for the current channel is down , nothing to do */
1524:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
1525:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1526:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Transfer Error Interrupt management ***************************************/
1527:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
 2893              		.loc 1 1527 7
 2894 0042 7B68     		ldr	r3, [r7, #4]
 2895 0044 1B68     		ldr	r3, [r3]
 2896 0046 1B68     		ldr	r3, [r3]
 2897 0048 03F00103 		and	r3, r3, #1
 2898              		.loc 1 1527 5
 2899 004c 002B     		cmp	r3, #0
 2900 004e 54D0     		beq	.L183
1528:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1529:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
 2901              		.loc 1 1529 8
 2902 0050 7B68     		ldr	r3, [r7, #4]
 2903 0052 1B68     		ldr	r3, [r3]
 2904 0054 DB68     		ldr	r3, [r3, #12]
 2905 0056 03F00203 		and	r3, r3, #2
 2906              		.loc 1 1529 7
 2907 005a 002B     		cmp	r3, #0
 2908 005c 4DD0     		beq	.L183
1530:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {      
1531:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable the transfer error interrupt */
1532:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
 2909              		.loc 1 1532 7
 2910 005e 7B68     		ldr	r3, [r7, #4]
 2911 0060 1B68     		ldr	r3, [r3]
 2912 0062 DA68     		ldr	r2, [r3, #12]
 2913 0064 7B68     		ldr	r3, [r7, #4]
 2914 0066 1B68     		ldr	r3, [r3]
 2915 0068 22F00202 		bic	r2, r2, #2
 2916 006c DA60     		str	r2, [r3, #12]
1533:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1534:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Get the transfer error source flag */
ARM GAS  /tmp/ccoEQtJm.s 			page 79


1535:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       errorFlag = hmdma->Instance->CESR;
 2917              		.loc 1 1535 24
 2918 006e 7B68     		ldr	r3, [r7, #4]
 2919 0070 1B68     		ldr	r3, [r3]
 2920              		.loc 1 1535 17
 2921 0072 9B68     		ldr	r3, [r3, #8]
 2922 0074 FB60     		str	r3, [r7, #12]
1536:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1537:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TED) == 0U)
 2923              		.loc 1 1537 21
 2924 0076 FB68     		ldr	r3, [r7, #12]
 2925 0078 03F08003 		and	r3, r3, #128
 2926              		.loc 1 1537 9
 2927 007c 002B     		cmp	r3, #0
 2928 007e 06D1     		bne	.L184
1538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1539:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Read Transfer error  */
1540:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
 2929              		.loc 1 1540 26
 2930 0080 7B68     		ldr	r3, [r7, #4]
 2931 0082 9B6E     		ldr	r3, [r3, #104]
 2932 0084 43F00102 		orr	r2, r3, #1
 2933 0088 7B68     		ldr	r3, [r7, #4]
 2934 008a 9A66     		str	r2, [r3, #104]
 2935 008c 05E0     		b	.L185
 2936              	.L184:
1541:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1542:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       else
1543:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1544:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Write Transfer error */
1545:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;        
 2937              		.loc 1 1545 26
 2938 008e 7B68     		ldr	r3, [r7, #4]
 2939 0090 9B6E     		ldr	r3, [r3, #104]
 2940 0092 43F00202 		orr	r2, r3, #2
 2941 0096 7B68     		ldr	r3, [r7, #4]
 2942 0098 9A66     		str	r2, [r3, #104]
 2943              	.L185:
1546:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1547:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1548:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TEMD) != 0U)
 2944              		.loc 1 1548 21
 2945 009a FB68     		ldr	r3, [r7, #12]
 2946 009c 03F40073 		and	r3, r3, #512
 2947              		.loc 1 1548 9
 2948 00a0 002B     		cmp	r3, #0
 2949 00a2 05D0     		beq	.L186
1549:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1550:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Mask Data */
1551:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
 2950              		.loc 1 1551 26
 2951 00a4 7B68     		ldr	r3, [r7, #4]
 2952 00a6 9B6E     		ldr	r3, [r3, #104]
 2953 00a8 43F00402 		orr	r2, r3, #4
 2954 00ac 7B68     		ldr	r3, [r7, #4]
 2955 00ae 9A66     		str	r2, [r3, #104]
 2956              	.L186:
ARM GAS  /tmp/ccoEQtJm.s 			page 80


1552:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1553:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1554:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_TELD) != 0U)
 2957              		.loc 1 1554 21
 2958 00b0 FB68     		ldr	r3, [r7, #12]
 2959 00b2 03F48073 		and	r3, r3, #256
 2960              		.loc 1 1554 9
 2961 00b6 002B     		cmp	r3, #0
 2962 00b8 05D0     		beq	.L187
1555:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1556:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Error Linked list */
1557:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
 2963              		.loc 1 1557 26
 2964 00ba 7B68     		ldr	r3, [r7, #4]
 2965 00bc 9B6E     		ldr	r3, [r3, #104]
 2966 00be 43F00802 		orr	r2, r3, #8
 2967 00c2 7B68     		ldr	r3, [r7, #4]
 2968 00c4 9A66     		str	r2, [r3, #104]
 2969              	.L187:
1558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1559:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1560:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_ASE) != 0U)
 2970              		.loc 1 1560 21
 2971 00c6 FB68     		ldr	r3, [r7, #12]
 2972 00c8 03F48063 		and	r3, r3, #1024
 2973              		.loc 1 1560 9
 2974 00cc 002B     		cmp	r3, #0
 2975 00ce 05D0     		beq	.L188
1561:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1562:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Address/Size alignment error */
1563:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
 2976              		.loc 1 1563 26
 2977 00d0 7B68     		ldr	r3, [r7, #4]
 2978 00d2 9B6E     		ldr	r3, [r3, #104]
 2979 00d4 43F01002 		orr	r2, r3, #16
 2980 00d8 7B68     		ldr	r3, [r7, #4]
 2981 00da 9A66     		str	r2, [r3, #104]
 2982              	.L188:
1564:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1565:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1566:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if((errorFlag & MDMA_CESR_BSE) != 0U)
 2983              		.loc 1 1566 21
 2984 00dc FB68     		ldr	r3, [r7, #12]
 2985 00de 03F40063 		and	r3, r3, #2048
 2986              		.loc 1 1566 9
 2987 00e2 002B     		cmp	r3, #0
 2988 00e4 05D0     		beq	.L189
1567:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1568:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Update error code : Block Size error error */
1569:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
 2989              		.loc 1 1569 26
 2990 00e6 7B68     		ldr	r3, [r7, #4]
 2991 00e8 9B6E     		ldr	r3, [r3, #104]
 2992 00ea 43F02002 		orr	r2, r3, #32
 2993 00ee 7B68     		ldr	r3, [r7, #4]
 2994 00f0 9A66     		str	r2, [r3, #104]
 2995              	.L189:
ARM GAS  /tmp/ccoEQtJm.s 			page 81


1570:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }       
1571:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1572:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the transfer error flags */
1573:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);     
 2996              		.loc 1 1573 7
 2997 00f2 7B68     		ldr	r3, [r7, #4]
 2998 00f4 1B68     		ldr	r3, [r3]
 2999 00f6 0122     		movs	r2, #1
 3000 00f8 5A60     		str	r2, [r3, #4]
 3001              	.L183:
1574:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1575:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1576:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1577:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Buffer Transfer Complete Interrupt management ******************************/
1578:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
 3002              		.loc 1 1578 7
 3003 00fa 7B68     		ldr	r3, [r7, #4]
 3004 00fc 1B68     		ldr	r3, [r3]
 3005 00fe 1B68     		ldr	r3, [r3]
 3006 0100 03F01003 		and	r3, r3, #16
 3007              		.loc 1 1578 5
 3008 0104 002B     		cmp	r3, #0
 3009 0106 12D0     		beq	.L190
1579:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1580:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
 3010              		.loc 1 1580 8
 3011 0108 7B68     		ldr	r3, [r7, #4]
 3012 010a 1B68     		ldr	r3, [r3]
 3013 010c DB68     		ldr	r3, [r3, #12]
 3014 010e 03F02003 		and	r3, r3, #32
 3015              		.loc 1 1580 7
 3016 0112 002B     		cmp	r3, #0
 3017 0114 0BD0     		beq	.L190
1581:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1582:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the buffer transfer complete flag */
1583:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
 3018              		.loc 1 1583 7
 3019 0116 7B68     		ldr	r3, [r7, #4]
 3020 0118 1B68     		ldr	r3, [r3]
 3021 011a 1022     		movs	r2, #16
 3022 011c 5A60     		str	r2, [r3, #4]
1584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1585:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBufferCpltCallback != NULL)
 3023              		.loc 1 1585 15
 3024 011e 7B68     		ldr	r3, [r7, #4]
 3025 0120 9B6C     		ldr	r3, [r3, #72]
 3026              		.loc 1 1585 9
 3027 0122 002B     		cmp	r3, #0
 3028 0124 03D0     		beq	.L190
1586:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1587:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Buffer transfer callback */
1588:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBufferCpltCallback(hmdma);
 3029              		.loc 1 1588 14
 3030 0126 7B68     		ldr	r3, [r7, #4]
 3031 0128 9B6C     		ldr	r3, [r3, #72]
 3032              		.loc 1 1588 9
 3033 012a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccoEQtJm.s 			page 82


 3034 012c 9847     		blx	r3
 3035              	.LVL0:
 3036              	.L190:
1589:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1590:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1591:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1592:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1593:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Block Transfer Complete Interrupt management ******************************/
1594:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
 3037              		.loc 1 1594 7
 3038 012e 7B68     		ldr	r3, [r7, #4]
 3039 0130 1B68     		ldr	r3, [r3]
 3040 0132 1B68     		ldr	r3, [r3]
 3041 0134 03F00803 		and	r3, r3, #8
 3042              		.loc 1 1594 5
 3043 0138 002B     		cmp	r3, #0
 3044 013a 12D0     		beq	.L191
1595:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1596:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
 3045              		.loc 1 1596 8
 3046 013c 7B68     		ldr	r3, [r7, #4]
 3047 013e 1B68     		ldr	r3, [r3]
 3048 0140 DB68     		ldr	r3, [r3, #12]
 3049 0142 03F01003 		and	r3, r3, #16
 3050              		.loc 1 1596 7
 3051 0146 002B     		cmp	r3, #0
 3052 0148 0BD0     		beq	.L191
1597:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1598:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the block transfer complete flag */
1599:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
 3053              		.loc 1 1599 7
 3054 014a 7B68     		ldr	r3, [r7, #4]
 3055 014c 1B68     		ldr	r3, [r3]
 3056 014e 0822     		movs	r2, #8
 3057 0150 5A60     		str	r2, [r3, #4]
1600:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferBlockCpltCallback != NULL)
 3058              		.loc 1 1601 15
 3059 0152 7B68     		ldr	r3, [r7, #4]
 3060 0154 DB6C     		ldr	r3, [r3, #76]
 3061              		.loc 1 1601 9
 3062 0156 002B     		cmp	r3, #0
 3063 0158 03D0     		beq	.L191
1602:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1603:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Block transfer callback */
1604:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferBlockCpltCallback(hmdma);
 3064              		.loc 1 1604 14
 3065 015a 7B68     		ldr	r3, [r7, #4]
 3066 015c DB6C     		ldr	r3, [r3, #76]
 3067              		.loc 1 1604 9
 3068 015e 7868     		ldr	r0, [r7, #4]
 3069 0160 9847     		blx	r3
 3070              	.LVL1:
 3071              	.L191:
1605:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1606:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1607:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
ARM GAS  /tmp/ccoEQtJm.s 			page 83


1608:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1609:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Repeated Block Transfer Complete Interrupt management ******************************/
1610:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
 3072              		.loc 1 1610 7
 3073 0162 7B68     		ldr	r3, [r7, #4]
 3074 0164 1B68     		ldr	r3, [r3]
 3075 0166 1B68     		ldr	r3, [r3]
 3076 0168 03F00403 		and	r3, r3, #4
 3077              		.loc 1 1610 5
 3078 016c 002B     		cmp	r3, #0
 3079 016e 12D0     		beq	.L192
1611:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1612:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
 3080              		.loc 1 1612 8
 3081 0170 7B68     		ldr	r3, [r7, #4]
 3082 0172 1B68     		ldr	r3, [r3]
 3083 0174 DB68     		ldr	r3, [r3, #12]
 3084 0176 03F00803 		and	r3, r3, #8
 3085              		.loc 1 1612 7
 3086 017a 002B     		cmp	r3, #0
 3087 017c 0BD0     		beq	.L192
1613:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1614:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the repeat block transfer complete flag */
1615:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
 3088              		.loc 1 1615 7
 3089 017e 7B68     		ldr	r3, [r7, #4]
 3090 0180 1B68     		ldr	r3, [r3]
 3091 0182 0422     		movs	r2, #4
 3092 0184 5A60     		str	r2, [r3, #4]
1616:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferRepeatBlockCpltCallback != NULL)
 3093              		.loc 1 1617 15
 3094 0186 7B68     		ldr	r3, [r7, #4]
 3095 0188 1B6D     		ldr	r3, [r3, #80]
 3096              		.loc 1 1617 9
 3097 018a 002B     		cmp	r3, #0
 3098 018c 03D0     		beq	.L192
1618:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1619:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Repeated Block transfer callback */
1620:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferRepeatBlockCpltCallback(hmdma);
 3099              		.loc 1 1620 14
 3100 018e 7B68     		ldr	r3, [r7, #4]
 3101 0190 1B6D     		ldr	r3, [r3, #80]
 3102              		.loc 1 1620 9
 3103 0192 7868     		ldr	r0, [r7, #4]
 3104 0194 9847     		blx	r3
 3105              	.LVL2:
 3106              	.L192:
1621:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
1622:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1623:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }   
1624:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1625:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Channel Transfer Complete Interrupt management ***********************************/
1626:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
 3107              		.loc 1 1626 7
 3108 0196 7B68     		ldr	r3, [r7, #4]
 3109 0198 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccoEQtJm.s 			page 84


 3110 019a 1B68     		ldr	r3, [r3]
 3111 019c 03F00203 		and	r3, r3, #2
 3112              		.loc 1 1626 5
 3113 01a0 002B     		cmp	r3, #0
 3114 01a2 39D0     		beq	.L193
1627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1628:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
 3115              		.loc 1 1628 8
 3116 01a4 7B68     		ldr	r3, [r7, #4]
 3117 01a6 1B68     		ldr	r3, [r3]
 3118 01a8 DB68     		ldr	r3, [r3, #12]
 3119 01aa 03F00403 		and	r3, r3, #4
 3120              		.loc 1 1628 7
 3121 01ae 002B     		cmp	r3, #0
 3122 01b0 32D0     		beq	.L193
1629:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1630:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Disable all the transfer interrupts */
1631:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_B
 3123              		.loc 1 1631 7
 3124 01b2 7B68     		ldr	r3, [r7, #4]
 3125 01b4 1B68     		ldr	r3, [r3]
 3126 01b6 DA68     		ldr	r2, [r3, #12]
 3127 01b8 7B68     		ldr	r3, [r7, #4]
 3128 01ba 1B68     		ldr	r3, [r3]
 3129 01bc 22F03E02 		bic	r2, r2, #62
 3130 01c0 DA60     		str	r2, [r3, #12]
1632:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1633:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(HAL_MDMA_STATE_ABORT == hmdma->State)
 3131              		.loc 1 1633 39
 3132 01c2 7B68     		ldr	r3, [r7, #4]
 3133 01c4 93F83D30 		ldrb	r3, [r3, #61]
 3134 01c8 DBB2     		uxtb	r3, r3
 3135              		.loc 1 1633 9
 3136 01ca 042B     		cmp	r3, #4
 3137 01cc 10D1     		bne	.L194
1634:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1635:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Process Unlocked */
1636:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         __HAL_UNLOCK(hmdma);
 3138              		.loc 1 1636 9
 3139 01ce 7B68     		ldr	r3, [r7, #4]
 3140 01d0 0022     		movs	r2, #0
 3141 01d2 83F83C20 		strb	r2, [r3, #60]
1637:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1638:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Change the DMA state */
1639:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->State = HAL_MDMA_STATE_READY;
 3142              		.loc 1 1639 22
 3143 01d6 7B68     		ldr	r3, [r7, #4]
 3144 01d8 0122     		movs	r2, #1
 3145 01da 83F83D20 		strb	r2, [r3, #61]
1640:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         
1641:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         if(hmdma->XferAbortCallback != NULL)
 3146              		.loc 1 1641 17
 3147 01de 7B68     		ldr	r3, [r7, #4]
 3148 01e0 9B6D     		ldr	r3, [r3, #88]
 3149              		.loc 1 1641 11
 3150 01e2 002B     		cmp	r3, #0
 3151 01e4 5DD0     		beq	.L202
ARM GAS  /tmp/ccoEQtJm.s 			page 85


1642:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         {
1643:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****           hmdma->XferAbortCallback(hmdma);
 3152              		.loc 1 1643 16
 3153 01e6 7B68     		ldr	r3, [r7, #4]
 3154 01e8 9B6D     		ldr	r3, [r3, #88]
 3155              		.loc 1 1643 11
 3156 01ea 7868     		ldr	r0, [r7, #4]
 3157 01ec 9847     		blx	r3
 3158              	.LVL3:
1644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         }
1645:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         return;
 3159              		.loc 1 1645 9
 3160 01ee 58E0     		b	.L202
 3161              	.L194:
1646:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1647:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 	  
1648:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Clear the Channel Transfer Complete flag */
1649:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
 3162              		.loc 1 1649 7
 3163 01f0 7B68     		ldr	r3, [r7, #4]
 3164 01f2 1B68     		ldr	r3, [r3]
 3165 01f4 0222     		movs	r2, #2
 3166 01f6 5A60     		str	r2, [r3, #4]
1650:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1651:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Process Unlocked */
1652:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       __HAL_UNLOCK(hmdma); 
 3167              		.loc 1 1652 7
 3168 01f8 7B68     		ldr	r3, [r7, #4]
 3169 01fa 0022     		movs	r2, #0
 3170 01fc 83F83C20 		strb	r2, [r3, #60]
1653:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1654:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change MDMA peripheral state */
1655:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;
 3171              		.loc 1 1655 20
 3172 0200 7B68     		ldr	r3, [r7, #4]
 3173 0202 0122     		movs	r2, #1
 3174 0204 83F83D20 		strb	r2, [r3, #61]
1656:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       
1657:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if(hmdma->XferCpltCallback != NULL)
 3175              		.loc 1 1657 15
 3176 0208 7B68     		ldr	r3, [r7, #4]
 3177 020a 5B6C     		ldr	r3, [r3, #68]
 3178              		.loc 1 1657 9
 3179 020c 002B     		cmp	r3, #0
 3180 020e 03D0     		beq	.L193
1658:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1659:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         /* Channel Transfer Complete callback */
1660:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         hmdma->XferCpltCallback(hmdma);
 3181              		.loc 1 1660 14
 3182 0210 7B68     		ldr	r3, [r7, #4]
 3183 0212 5B6C     		ldr	r3, [r3, #68]
 3184              		.loc 1 1660 9
 3185 0214 7868     		ldr	r0, [r7, #4]
 3186 0216 9847     		blx	r3
 3187              	.LVL4:
 3188              	.L193:
1661:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }          
ARM GAS  /tmp/ccoEQtJm.s 			page 86


1662:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1663:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1664:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* manage error case */
1666:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
 3189              		.loc 1 1666 11
 3190 0218 7B68     		ldr	r3, [r7, #4]
 3191 021a 9B6E     		ldr	r3, [r3, #104]
 3192              		.loc 1 1666 5
 3193 021c 002B     		cmp	r3, #0
 3194 021e 41D0     		beq	.L180
1667:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1668:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->State = HAL_MDMA_STATE_ABORT;
 3195              		.loc 1 1668 18
 3196 0220 7B68     		ldr	r3, [r7, #4]
 3197 0222 0422     		movs	r2, #4
 3198 0224 83F83D20 		strb	r2, [r3, #61]
1669:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1670:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Disable the channel */
1671:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_MDMA_DISABLE(hmdma);
 3199              		.loc 1 1671 5
 3200 0228 7B68     		ldr	r3, [r7, #4]
 3201 022a 1B68     		ldr	r3, [r3]
 3202 022c DA68     		ldr	r2, [r3, #12]
 3203 022e 7B68     		ldr	r3, [r7, #4]
 3204 0230 1B68     		ldr	r3, [r3]
 3205 0232 22F00102 		bic	r2, r2, #1
 3206 0236 DA60     		str	r2, [r3, #12]
 3207              	.L198:
1672:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1673:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     do
1674:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1675:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       if (++count > timeout)
 3208              		.loc 1 1675 11
 3209 0238 BB68     		ldr	r3, [r7, #8]
 3210 023a 0133     		adds	r3, r3, #1
 3211              		.loc 1 1675 10
 3212 023c BB60     		str	r3, [r7, #8]
 3213 023e 7A69     		ldr	r2, [r7, #20]
 3214 0240 9A42     		cmp	r2, r3
 3215 0242 07D3     		bcc	.L203
1676:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       {
1677:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****         break;
1678:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
1679:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1680:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
 3216              		.loc 1 1680 17
 3217 0244 7B68     		ldr	r3, [r7, #4]
 3218 0246 1B68     		ldr	r3, [r3]
 3219              		.loc 1 1680 27
 3220 0248 DB68     		ldr	r3, [r3, #12]
 3221              		.loc 1 1680 33
 3222 024a 03F00103 		and	r3, r3, #1
 3223              		.loc 1 1680 5
 3224 024e 002B     		cmp	r3, #0
 3225 0250 F2D1     		bne	.L198
 3226 0252 00E0     		b	.L197
ARM GAS  /tmp/ccoEQtJm.s 			page 87


 3227              	.L203:
1677:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 3228              		.loc 1 1677 9
 3229 0254 00BF     		nop
 3230              	.L197:
1681:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Process Unlocked */
1683:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     __HAL_UNLOCK(hmdma);
 3231              		.loc 1 1683 5
 3232 0256 7B68     		ldr	r3, [r7, #4]
 3233 0258 0022     		movs	r2, #0
 3234 025a 83F83C20 		strb	r2, [r3, #60]
1684:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1685:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 3235              		.loc 1 1685 14
 3236 025e 7B68     		ldr	r3, [r7, #4]
 3237 0260 1B68     		ldr	r3, [r3]
 3238              		.loc 1 1685 24
 3239 0262 DB68     		ldr	r3, [r3, #12]
 3240              		.loc 1 1685 30
 3241 0264 03F00103 		and	r3, r3, #1
 3242              		.loc 1 1685 7
 3243 0268 002B     		cmp	r3, #0
 3244 026a 0BD0     		beq	.L199
1686:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1687:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to error if MDMA disable fails */
1688:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_ERROR;
 3245              		.loc 1 1688 20
 3246 026c 7B68     		ldr	r3, [r7, #4]
 3247 026e 0322     		movs	r2, #3
 3248 0270 83F83D20 		strb	r2, [r3, #61]
 3249 0274 0AE0     		b	.L200
 3250              	.L205:
 3251 0276 00BF     		.align	2
 3252              	.L204:
 3253 0278 00000000 		.word	SystemCoreClock
 3254 027c B5814E1B 		.word	458129845
 3255 0280 C0FFFFAD 		.word	-1375731776
 3256              	.L199:
1689:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1690:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     else
1691:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1692:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Change the MDMA state to Ready if MDMA disable success */
1693:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->State = HAL_MDMA_STATE_READY;      
 3257              		.loc 1 1693 20
 3258 0284 7B68     		ldr	r3, [r7, #4]
 3259 0286 0122     		movs	r2, #1
 3260 0288 83F83D20 		strb	r2, [r3, #61]
 3261              	.L200:
1694:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1695:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     
1697:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     if (hmdma->XferErrorCallback != NULL)
 3262              		.loc 1 1697 14
 3263 028c 7B68     		ldr	r3, [r7, #4]
 3264 028e 5B6D     		ldr	r3, [r3, #84]
 3265              		.loc 1 1697 8
ARM GAS  /tmp/ccoEQtJm.s 			page 88


 3266 0290 002B     		cmp	r3, #0
 3267 0292 07D0     		beq	.L180
1698:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     {
1699:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       /* Transfer error callback */
1700:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       hmdma->XferErrorCallback(hmdma);
 3268              		.loc 1 1700 12
 3269 0294 7B68     		ldr	r3, [r7, #4]
 3270 0296 5B6D     		ldr	r3, [r3, #84]
 3271              		.loc 1 1700 7
 3272 0298 7868     		ldr	r0, [r7, #4]
 3273 029a 9847     		blx	r3
 3274              	.LVL5:
 3275 029c 02E0     		b	.L180
 3276              	.L201:
1523:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }    
 3277              		.loc 1 1523 5
 3278 029e 00BF     		nop
 3279 02a0 00E0     		b	.L180
 3280              	.L202:
1645:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       }
 3281              		.loc 1 1645 9
 3282 02a2 00BF     		nop
 3283              	.L180:
1701:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     }
1702:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1703:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 3284              		.loc 1 1703 1
 3285 02a4 1837     		adds	r7, r7, #24
 3286              		.cfi_def_cfa_offset 8
 3287 02a6 BD46     		mov	sp, r7
 3288              		.cfi_def_cfa_register 13
 3289              		@ sp needed
 3290 02a8 80BD     		pop	{r7, pc}
 3291              		.cfi_endproc
 3292              	.LFE150:
 3294 02aa 00BF     		.section	.text.HAL_MDMA_GetState,"ax",%progbits
 3295              		.align	1
 3296              		.global	HAL_MDMA_GetState
 3297              		.syntax unified
 3298              		.thumb
 3299              		.thumb_func
 3300              		.fpu fpv5-d16
 3302              	HAL_MDMA_GetState:
 3303              	.LFB151:
1704:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1705:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1706:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1707:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1708:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1709:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Exported_Functions_Group4
1710:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  *
1711:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @verbatim
1712:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1713:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                     ##### State and Errors functions #####
1714:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****  ===============================================================================
1715:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     [..]
1716:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     This subsection provides functions allowing to
ARM GAS  /tmp/ccoEQtJm.s 			page 89


1717:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Check the MDMA state
1718:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****       (+) Get error code
1719:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1720:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** @endverbatim
1721:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1722:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1723:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1724:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1725:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Returns the MDMA state.
1726:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma: pointer to a MDMA_HandleTypeDef structure that contains
1727:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *               the configuration information for the specified MDMA Channel.
1728:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL state
1729:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1730:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** HAL_MDMA_StateTypeDef HAL_MDMA_GetState(MDMA_HandleTypeDef *hmdma)
1731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 3304              		.loc 1 1731 1
 3305              		.cfi_startproc
 3306              		@ args = 0, pretend = 0, frame = 8
 3307              		@ frame_needed = 1, uses_anonymous_args = 0
 3308              		@ link register save eliminated.
 3309 0000 80B4     		push	{r7}
 3310              		.cfi_def_cfa_offset 4
 3311              		.cfi_offset 7, -4
 3312 0002 83B0     		sub	sp, sp, #12
 3313              		.cfi_def_cfa_offset 16
 3314 0004 00AF     		add	r7, sp, #0
 3315              		.cfi_def_cfa_register 7
 3316 0006 7860     		str	r0, [r7, #4]
1732:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->State;
 3317              		.loc 1 1732 15
 3318 0008 7B68     		ldr	r3, [r7, #4]
 3319 000a 93F83D30 		ldrb	r3, [r3, #61]
 3320 000e DBB2     		uxtb	r3, r3
1733:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 3321              		.loc 1 1733 1
 3322 0010 1846     		mov	r0, r3
 3323 0012 0C37     		adds	r7, r7, #12
 3324              		.cfi_def_cfa_offset 4
 3325 0014 BD46     		mov	sp, r7
 3326              		.cfi_def_cfa_register 13
 3327              		@ sp needed
 3328 0016 5DF8047B 		ldr	r7, [sp], #4
 3329              		.cfi_restore 7
 3330              		.cfi_def_cfa_offset 0
 3331 001a 7047     		bx	lr
 3332              		.cfi_endproc
 3333              	.LFE151:
 3335              		.section	.text.HAL_MDMA_GetError,"ax",%progbits
 3336              		.align	1
 3337              		.global	HAL_MDMA_GetError
 3338              		.syntax unified
 3339              		.thumb
 3340              		.thumb_func
 3341              		.fpu fpv5-d16
 3343              	HAL_MDMA_GetError:
 3344              	.LFB152:
1734:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
ARM GAS  /tmp/ccoEQtJm.s 			page 90


1735:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1736:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Return the MDMA error code
1737:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma : pointer to a MDMA_HandleTypeDef structure that contains
1738:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *              the configuration information for the specified MDMA Channel.
1739:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval MDMA Error Code
1740:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1741:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** uint32_t HAL_MDMA_GetError(MDMA_HandleTypeDef *hmdma)
1742:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 3345              		.loc 1 1742 1
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 8
 3348              		@ frame_needed = 1, uses_anonymous_args = 0
 3349              		@ link register save eliminated.
 3350 0000 80B4     		push	{r7}
 3351              		.cfi_def_cfa_offset 4
 3352              		.cfi_offset 7, -4
 3353 0002 83B0     		sub	sp, sp, #12
 3354              		.cfi_def_cfa_offset 16
 3355 0004 00AF     		add	r7, sp, #0
 3356              		.cfi_def_cfa_register 7
 3357 0006 7860     		str	r0, [r7, #4]
1743:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   return hmdma->ErrorCode;
 3358              		.loc 1 1743 15
 3359 0008 7B68     		ldr	r3, [r7, #4]
 3360 000a 9B6E     		ldr	r3, [r3, #104]
1744:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 3361              		.loc 1 1744 1
 3362 000c 1846     		mov	r0, r3
 3363 000e 0C37     		adds	r7, r7, #12
 3364              		.cfi_def_cfa_offset 4
 3365 0010 BD46     		mov	sp, r7
 3366              		.cfi_def_cfa_register 13
 3367              		@ sp needed
 3368 0012 5DF8047B 		ldr	r7, [sp], #4
 3369              		.cfi_restore 7
 3370              		.cfi_def_cfa_offset 0
 3371 0016 7047     		bx	lr
 3372              		.cfi_endproc
 3373              	.LFE152:
 3375              		.section	.text.MDMA_SetConfig,"ax",%progbits
 3376              		.align	1
 3377              		.syntax unified
 3378              		.thumb
 3379              		.thumb_func
 3380              		.fpu fpv5-d16
 3382              	MDMA_SetConfig:
 3383              	.LFB153:
1745:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1746:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1747:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1748:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1749:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1750:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1751:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @}
1752:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1753:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1754:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /** @addtogroup MDMA_Private_Functions
ARM GAS  /tmp/ccoEQtJm.s 			page 91


1755:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @{
1756:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1757:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1758:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1759:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Sets the MDMA Transfer parameter.
1760:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1761:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1762:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  SrcAddress: The source memory Buffer address
1763:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  DstAddress: The destination memory Buffer address
1764:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockDataLength : The length of a block transfer in bytes
1765:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  BlockCount: The number of blocks to be transfered
1766:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval HAL status
1767:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_SetConfig(MDMA_HandleTypeDef *hmdma, uint32_t SrcAddress, uint32_t DstAddress, uin
1769:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 3384              		.loc 1 1769 1
 3385              		.cfi_startproc
 3386              		@ args = 4, pretend = 0, frame = 24
 3387              		@ frame_needed = 1, uses_anonymous_args = 0
 3388              		@ link register save eliminated.
 3389 0000 80B4     		push	{r7}
 3390              		.cfi_def_cfa_offset 4
 3391              		.cfi_offset 7, -4
 3392 0002 87B0     		sub	sp, sp, #28
 3393              		.cfi_def_cfa_offset 32
 3394 0004 00AF     		add	r7, sp, #0
 3395              		.cfi_def_cfa_register 7
 3396 0006 F860     		str	r0, [r7, #12]
 3397 0008 B960     		str	r1, [r7, #8]
 3398 000a 7A60     		str	r2, [r7, #4]
 3399 000c 3B60     		str	r3, [r7]
1770:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t addressMask;
1771:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1772:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA Channel data length */
1773:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
 3400              		.loc 1 1773 3
 3401 000e FB68     		ldr	r3, [r7, #12]
 3402 0010 1B68     		ldr	r3, [r3]
 3403 0012 5A69     		ldr	r2, [r3, #20]
 3404 0014 314B     		ldr	r3, .L217
 3405 0016 1340     		ands	r3, r3, r2
 3406 0018 3A68     		ldr	r2, [r7]
 3407 001a C2F31001 		ubfx	r1, r2, #0, #17
 3408 001e FA68     		ldr	r2, [r7, #12]
 3409 0020 1268     		ldr	r2, [r2]
 3410 0022 0B43     		orrs	r3, r3, r1
 3411 0024 5361     		str	r3, [r2, #20]
1774:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1775:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure the MDMA block repeat count */
1776:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos)
 3412              		.loc 1 1776 3
 3413 0026 FB68     		ldr	r3, [r7, #12]
 3414 0028 1B68     		ldr	r3, [r3]
 3415 002a 5B69     		ldr	r3, [r3, #20]
 3416 002c C3F31301 		ubfx	r1, r3, #0, #20
 3417 0030 3B6A     		ldr	r3, [r7, #32]
 3418 0032 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccoEQtJm.s 			page 92


 3419 0034 1A05     		lsls	r2, r3, #20
 3420 0036 FB68     		ldr	r3, [r7, #12]
 3421 0038 1B68     		ldr	r3, [r3]
 3422 003a 0A43     		orrs	r2, r2, r1
 3423 003c 5A61     		str	r2, [r3, #20]
1777:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Clear all interrupt flags */
1779:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MD
 3424              		.loc 1 1779 3
 3425 003e FB68     		ldr	r3, [r7, #12]
 3426 0040 1B68     		ldr	r3, [r3]
 3427 0042 1F22     		movs	r2, #31
 3428 0044 5A60     		str	r2, [r3, #4]
1780:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1781:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel destination address */
1782:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CDAR = DstAddress; 
 3429              		.loc 1 1782 8
 3430 0046 FB68     		ldr	r3, [r7, #12]
 3431 0048 1B68     		ldr	r3, [r3]
 3432              		.loc 1 1782 25
 3433 004a 7A68     		ldr	r2, [r7, #4]
 3434 004c DA61     		str	r2, [r3, #28]
1783:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1784:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Configure MDMA Channel Source address */
1785:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CSAR = SrcAddress;
 3435              		.loc 1 1785 8
 3436 004e FB68     		ldr	r3, [r7, #12]
 3437 0050 1B68     		ldr	r3, [r3]
 3438              		.loc 1 1785 25
 3439 0052 BA68     		ldr	r2, [r7, #8]
 3440 0054 9A61     		str	r2, [r3, #24]
1786:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1787:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = SrcAddress & 0xFF000000U;
 3441              		.loc 1 1787 15
 3442 0056 BB68     		ldr	r3, [r7, #8]
 3443 0058 03F07F43 		and	r3, r3, #-16777216
 3444 005c 7B61     		str	r3, [r7, #20]
1788:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 3445              		.loc 1 1788 5
 3446 005e 7B69     		ldr	r3, [r7, #20]
 3447 0060 B3F1005F 		cmp	r3, #536870912
 3448 0064 02D0     		beq	.L211
 3449              		.loc 1 1788 35 discriminator 1
 3450 0066 7B69     		ldr	r3, [r7, #20]
 3451 0068 002B     		cmp	r3, #0
 3452 006a 08D1     		bne	.L212
 3453              	.L211:
1789:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1790:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHBSbus is used as source (read operation) on channel x */
1791:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;  
 3454              		.loc 1 1791 10
 3455 006c FB68     		ldr	r3, [r7, #12]
 3456 006e 1B68     		ldr	r3, [r3]
 3457              		.loc 1 1791 27
 3458 0070 9A6A     		ldr	r2, [r3, #40]
 3459              		.loc 1 1791 10
 3460 0072 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccoEQtJm.s 			page 93


 3461 0074 1B68     		ldr	r3, [r3]
 3462              		.loc 1 1791 27
 3463 0076 42F48032 		orr	r2, r2, #65536
 3464 007a 9A62     		str	r2, [r3, #40]
 3465 007c 07E0     		b	.L213
 3466              	.L212:
1792:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1793:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1794:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as source (read operation) on channel x */
1796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);  
 3467              		.loc 1 1796 10
 3468 007e FB68     		ldr	r3, [r7, #12]
 3469 0080 1B68     		ldr	r3, [r3]
 3470              		.loc 1 1796 27
 3471 0082 9A6A     		ldr	r2, [r3, #40]
 3472              		.loc 1 1796 10
 3473 0084 FB68     		ldr	r3, [r7, #12]
 3474 0086 1B68     		ldr	r3, [r3]
 3475              		.loc 1 1796 27
 3476 0088 22F48032 		bic	r2, r2, #65536
 3477 008c 9A62     		str	r2, [r3, #40]
 3478              	.L213:
1797:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1798:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1799:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   addressMask = DstAddress & 0xFF000000U;
 3479              		.loc 1 1799 15
 3480 008e 7B68     		ldr	r3, [r7, #4]
 3481 0090 03F07F43 		and	r3, r3, #-16777216
 3482 0094 7B61     		str	r3, [r7, #20]
1800:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
 3483              		.loc 1 1800 5
 3484 0096 7B69     		ldr	r3, [r7, #20]
 3485 0098 B3F1005F 		cmp	r3, #536870912
 3486 009c 02D0     		beq	.L214
 3487              		.loc 1 1800 35 discriminator 1
 3488 009e 7B69     		ldr	r3, [r7, #20]
 3489 00a0 002B     		cmp	r3, #0
 3490 00a2 08D1     		bne	.L215
 3491              	.L214:
1801:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1802:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AHB bus is used as destination (write operation) on channel x */
1803:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
 3492              		.loc 1 1803 10
 3493 00a4 FB68     		ldr	r3, [r7, #12]
 3494 00a6 1B68     		ldr	r3, [r3]
 3495              		.loc 1 1803 27
 3496 00a8 9A6A     		ldr	r2, [r3, #40]
 3497              		.loc 1 1803 10
 3498 00aa FB68     		ldr	r3, [r7, #12]
 3499 00ac 1B68     		ldr	r3, [r3]
 3500              		.loc 1 1803 27
 3501 00ae 42F40032 		orr	r2, r2, #131072
 3502 00b2 9A62     		str	r2, [r3, #40]
 3503 00b4 07E0     		b	.L216
 3504              	.L215:
1804:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
ARM GAS  /tmp/ccoEQtJm.s 			page 94


1805:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1806:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1807:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*The AXI bus is used as destination (write operation) on channel x */
1808:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);  
 3505              		.loc 1 1808 10
 3506 00b6 FB68     		ldr	r3, [r7, #12]
 3507 00b8 1B68     		ldr	r3, [r3]
 3508              		.loc 1 1808 27
 3509 00ba 9A6A     		ldr	r2, [r3, #40]
 3510              		.loc 1 1808 10
 3511 00bc FB68     		ldr	r3, [r7, #12]
 3512 00be 1B68     		ldr	r3, [r3]
 3513              		.loc 1 1808 27
 3514 00c0 22F40032 		bic	r2, r2, #131072
 3515 00c4 9A62     		str	r2, [r3, #40]
 3516              	.L216:
1809:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1810:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1811:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Set the linked list register to the first node of the list */
1812:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;  
 3517              		.loc 1 1812 42
 3518 00c6 FB68     		ldr	r3, [r7, #12]
 3519 00c8 DA6D     		ldr	r2, [r3, #92]
 3520              		.loc 1 1812 8
 3521 00ca FB68     		ldr	r3, [r7, #12]
 3522 00cc 1B68     		ldr	r3, [r3]
 3523              		.loc 1 1812 25
 3524 00ce 5A62     		str	r2, [r3, #36]
1813:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 3525              		.loc 1 1813 1
 3526 00d0 00BF     		nop
 3527 00d2 1C37     		adds	r7, r7, #28
 3528              		.cfi_def_cfa_offset 4
 3529 00d4 BD46     		mov	sp, r7
 3530              		.cfi_def_cfa_register 13
 3531              		@ sp needed
 3532 00d6 5DF8047B 		ldr	r7, [sp], #4
 3533              		.cfi_restore 7
 3534              		.cfi_def_cfa_offset 0
 3535 00da 7047     		bx	lr
 3536              	.L218:
 3537              		.align	2
 3538              	.L217:
 3539 00dc 0000FEFF 		.word	-131072
 3540              		.cfi_endproc
 3541              	.LFE153:
 3543              		.section	.text.MDMA_Init,"ax",%progbits
 3544              		.align	1
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3548              		.fpu fpv5-d16
 3550              	MDMA_Init:
 3551              	.LFB154:
1814:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1815:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** /**
1816:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @brief  Initializes the MDMA handle according to the specified
ARM GAS  /tmp/ccoEQtJm.s 			page 95


1817:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *         parameters in the MDMA_InitTypeDef
1818:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @param  hmdma:       pointer to a MDMA_HandleTypeDef structure that contains
1819:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   *                     the configuration information for the specified MDMA Channel.
1820:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   * @retval None
1821:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   */
1822:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
1823:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** {
 3552              		.loc 1 1823 1
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 16
 3555              		@ frame_needed = 1, uses_anonymous_args = 0
 3556              		@ link register save eliminated.
 3557 0000 80B4     		push	{r7}
 3558              		.cfi_def_cfa_offset 4
 3559              		.cfi_offset 7, -4
 3560 0002 85B0     		sub	sp, sp, #20
 3561              		.cfi_def_cfa_offset 24
 3562 0004 00AF     		add	r7, sp, #0
 3563              		.cfi_def_cfa_register 7
 3564 0006 7860     		str	r0, [r7, #4]
1824:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   uint32_t blockoffset;
1825:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** 
1826:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Prepare the MDMA Channel configuration */
1827:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 3565              		.loc 1 1827 37
 3566 0008 7B68     		ldr	r3, [r7, #4]
 3567 000a D968     		ldr	r1, [r3, #12]
 3568              		.loc 1 1827 61
 3569 000c 7B68     		ldr	r3, [r7, #4]
 3570 000e 1A69     		ldr	r2, [r3, #16]
 3571              		.loc 1 1827 8
 3572 0010 7B68     		ldr	r3, [r7, #4]
 3573 0012 1B68     		ldr	r3, [r3]
 3574              		.loc 1 1827 48
 3575 0014 0A43     		orrs	r2, r2, r1
 3576              		.loc 1 1827 24
 3577 0016 DA60     		str	r2, [r3, #12]
1828:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1829:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write new CTCR Register value */
1830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 3578              		.loc 1 1830 39
 3579 0018 7B68     		ldr	r3, [r7, #4]
 3580 001a 5A69     		ldr	r2, [r3, #20]
 3581              		.loc 1 1830 68
 3582 001c 7B68     		ldr	r3, [r7, #4]
 3583 001e 9B69     		ldr	r3, [r3, #24]
 3584              		.loc 1 1830 55
 3585 0020 1A43     		orrs	r2, r2, r3
1831:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 3586              		.loc 1 1831 39
 3587 0022 7B68     		ldr	r3, [r7, #4]
 3588 0024 DB69     		ldr	r3, [r3, #28]
1830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 3589              		.loc 1 1830 84
 3590 0026 1A43     		orrs	r2, r2, r3
 3591              		.loc 1 1831 68
 3592 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccoEQtJm.s 			page 96


 3593 002a 1B6A     		ldr	r3, [r3, #32]
 3594              		.loc 1 1831 55
 3595 002c 1A43     		orrs	r2, r2, r3
1832:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 3596              		.loc 1 1832 39
 3597 002e 7B68     		ldr	r3, [r7, #4]
 3598 0030 5B6A     		ldr	r3, [r3, #36]
1831:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 3599              		.loc 1 1831 84
 3600 0032 1A43     		orrs	r2, r2, r3
 3601              		.loc 1 1832 68
 3602 0034 7B68     		ldr	r3, [r7, #4]
 3603 0036 DB6A     		ldr	r3, [r3, #44]
 3604              		.loc 1 1832 55
 3605 0038 1A43     		orrs	r2, r2, r3
1833:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 3606              		.loc 1 1833 39
 3607 003a 7B68     		ldr	r3, [r7, #4]
 3608 003c 1B6B     		ldr	r3, [r3, #48]
1832:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
 3609              		.loc 1 1832 84
 3610 003e 1A43     		orrs	r2, r2, r3
1834:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 3611              		.loc 1 1834 41
 3612 0040 7B68     		ldr	r3, [r7, #4]
 3613 0042 9B6A     		ldr	r3, [r3, #40]
 3614              		.loc 1 1834 63
 3615 0044 013B     		subs	r3, r3, #1
 3616              		.loc 1 1834 69
 3617 0046 9B04     		lsls	r3, r3, #18
1833:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.DestBurst                                   | \
 3618              		.loc 1 1833 84
 3619 0048 42EA0301 		orr	r1, r2, r3
1835:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.TransferTriggerMode;
 3620              		.loc 1 1835 39
 3621 004c 7B68     		ldr	r3, [r7, #4]
 3622 004e 9A68     		ldr	r2, [r3, #8]
1830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 3623              		.loc 1 1830 8
 3624 0050 7B68     		ldr	r3, [r7, #4]
 3625 0052 1B68     		ldr	r3, [r3]
1834:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 3626              		.loc 1 1834 92
 3627 0054 0A43     		orrs	r2, r2, r1
1830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****                            hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
 3628              		.loc 1 1830 25
 3629 0056 1A61     		str	r2, [r3, #16]
1836:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If SW request set the CTCR register to SW Request Mode */
1838:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request == MDMA_REQUEST_SW)
 3630              		.loc 1 1838 17
 3631 0058 7B68     		ldr	r3, [r7, #4]
 3632 005a 5B68     		ldr	r3, [r3, #4]
 3633              		.loc 1 1838 5
 3634 005c B3F1804F 		cmp	r3, #1073741824
 3635 0060 07D1     		bne	.L220
1839:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccoEQtJm.s 			page 97


1840:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* 
1841:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by SW : BWM could be set to 1 or 0.
1842:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     -If the request is done by a peripheral :
1843:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address not set (0) => BWM must be set to 0
1844:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     If mask address set (different than 0) => BWM could be set to 1 or 0
1845:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     */   
1846:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 3636              		.loc 1 1846 10
 3637 0062 7B68     		ldr	r3, [r7, #4]
 3638 0064 1B68     		ldr	r3, [r3]
 3639              		.loc 1 1846 27
 3640 0066 1A69     		ldr	r2, [r3, #16]
 3641              		.loc 1 1846 10
 3642 0068 7B68     		ldr	r3, [r7, #4]
 3643 006a 1B68     		ldr	r3, [r3]
 3644              		.loc 1 1846 27
 3645 006c 42F04042 		orr	r2, r2, #-1073741824
 3646 0070 1A61     		str	r2, [r3, #16]
 3647              	.L220:
1847:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   } 
1848:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****    
1849:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Reset CBNDTR Register */ 
1850:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CBNDTR = 0;
 3648              		.loc 1 1850 8
 3649 0072 7B68     		ldr	r3, [r7, #4]
 3650 0074 1B68     		ldr	r3, [r3]
 3651              		.loc 1 1850 27
 3652 0076 0022     		movs	r2, #0
 3653 0078 5A61     		str	r2, [r3, #20]
1851:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1852:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if block source address offset is negative set the Block Repeat Source address Update Mode to 
1853:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.SourceBlockAddressOffset < 0)
 3654              		.loc 1 1853 17
 3655 007a 7B68     		ldr	r3, [r7, #4]
 3656 007c 5B6B     		ldr	r3, [r3, #52]
 3657              		.loc 1 1853 5
 3658 007e 002B     		cmp	r3, #0
 3659 0080 11DA     		bge	.L221
1854:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1855:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 3660              		.loc 1 1855 10
 3661 0082 7B68     		ldr	r3, [r7, #4]
 3662 0084 1B68     		ldr	r3, [r3]
 3663              		.loc 1 1855 29
 3664 0086 5A69     		ldr	r2, [r3, #20]
 3665              		.loc 1 1855 10
 3666 0088 7B68     		ldr	r3, [r7, #4]
 3667 008a 1B68     		ldr	r3, [r3]
 3668              		.loc 1 1855 29
 3669 008c 42F48022 		orr	r2, r2, #262144
 3670 0090 5A61     		str	r2, [r3, #20]
1856:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */
1857:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 3671              		.loc 1 1857 43
 3672 0092 7B68     		ldr	r3, [r7, #4]
 3673 0094 5B6B     		ldr	r3, [r3, #52]
 3674              		.loc 1 1857 30
ARM GAS  /tmp/ccoEQtJm.s 			page 98


 3675 0096 5B42     		rsbs	r3, r3, #0
 3676              		.loc 1 1857 17
 3677 0098 FB60     		str	r3, [r7, #12]
1858:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
 3678              		.loc 1 1858 10
 3679 009a 7B68     		ldr	r3, [r7, #4]
 3680 009c 1B68     		ldr	r3, [r3]
 3681              		.loc 1 1858 43
 3682 009e FA68     		ldr	r2, [r7, #12]
 3683 00a0 92B2     		uxth	r2, r2
 3684              		.loc 1 1858 28
 3685 00a2 1A62     		str	r2, [r3, #32]
 3686 00a4 06E0     		b	.L222
 3687              	.L221:
1859:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1860:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1861:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1862:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : source repeat block offset */     
1863:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);    
 3688              		.loc 1 1863 53
 3689 00a6 7B68     		ldr	r3, [r7, #4]
 3690 00a8 5B6B     		ldr	r3, [r3, #52]
 3691              		.loc 1 1863 32
 3692 00aa 1A46     		mov	r2, r3
 3693              		.loc 1 1863 10
 3694 00ac 7B68     		ldr	r3, [r7, #4]
 3695 00ae 1B68     		ldr	r3, [r3]
 3696              		.loc 1 1863 80
 3697 00b0 92B2     		uxth	r2, r2
 3698              		.loc 1 1863 28
 3699 00b2 1A62     		str	r2, [r3, #32]
 3700              	.L222:
1864:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1865:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1866:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* If block destination address offset is negative set the Block Repeat destination address Updat
1867:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.DestBlockAddressOffset < 0)
 3701              		.loc 1 1867 17
 3702 00b4 7B68     		ldr	r3, [r7, #4]
 3703 00b6 9B6B     		ldr	r3, [r3, #56]
 3704              		.loc 1 1867 5
 3705 00b8 002B     		cmp	r3, #0
 3706 00ba 15DA     		bge	.L223
1868:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1869:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 3707              		.loc 1 1869 10
 3708 00bc 7B68     		ldr	r3, [r7, #4]
 3709 00be 1B68     		ldr	r3, [r3]
 3710              		.loc 1 1869 29
 3711 00c0 5A69     		ldr	r2, [r3, #20]
 3712              		.loc 1 1869 10
 3713 00c2 7B68     		ldr	r3, [r7, #4]
 3714 00c4 1B68     		ldr	r3, [r3]
 3715              		.loc 1 1869 29
 3716 00c6 42F40022 		orr	r2, r2, #524288
 3717 00ca 5A61     		str	r2, [r3, #20]
1870:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Write new CBRUR Register value : destination repeat block offset */
1871:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
ARM GAS  /tmp/ccoEQtJm.s 			page 99


 3718              		.loc 1 1871 43
 3719 00cc 7B68     		ldr	r3, [r7, #4]
 3720 00ce 9B6B     		ldr	r3, [r3, #56]
 3721              		.loc 1 1871 30
 3722 00d0 5B42     		rsbs	r3, r3, #0
 3723              		.loc 1 1871 17
 3724 00d2 FB60     		str	r3, [r7, #12]
1872:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);    
 3725              		.loc 1 1872 10
 3726 00d4 7B68     		ldr	r3, [r7, #4]
 3727 00d6 1B68     		ldr	r3, [r3]
 3728              		.loc 1 1872 28
 3729 00d8 196A     		ldr	r1, [r3, #32]
 3730              		.loc 1 1872 60
 3731 00da FB68     		ldr	r3, [r7, #12]
 3732 00dc 1A04     		lsls	r2, r3, #16
 3733              		.loc 1 1872 10
 3734 00de 7B68     		ldr	r3, [r7, #4]
 3735 00e0 1B68     		ldr	r3, [r3]
 3736              		.loc 1 1872 28
 3737 00e2 0A43     		orrs	r2, r2, r1
 3738 00e4 1A62     		str	r2, [r3, #32]
 3739 00e6 09E0     		b	.L224
 3740              	.L223:
1873:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1874:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else
1875:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1876:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /*write new CBRUR Register value : destination repeat block offset */     
1877:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MD
 3741              		.loc 1 1877 10
 3742 00e8 7B68     		ldr	r3, [r7, #4]
 3743 00ea 1B68     		ldr	r3, [r3]
 3744              		.loc 1 1877 28
 3745 00ec 196A     		ldr	r1, [r3, #32]
 3746              		.loc 1 1877 55
 3747 00ee 7B68     		ldr	r3, [r7, #4]
 3748 00f0 9B6B     		ldr	r3, [r3, #56]
 3749              		.loc 1 1877 95
 3750 00f2 1A04     		lsls	r2, r3, #16
 3751              		.loc 1 1877 10
 3752 00f4 7B68     		ldr	r3, [r7, #4]
 3753 00f6 1B68     		ldr	r3, [r3]
 3754              		.loc 1 1877 28
 3755 00f8 0A43     		orrs	r2, r2, r1
 3756 00fa 1A62     		str	r2, [r3, #32]
 3757              	.L224:
1878:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }   
1879:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1880:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
1881:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   if(hmdma->Init.Request != MDMA_REQUEST_SW)
 3758              		.loc 1 1881 17
 3759 00fc 7B68     		ldr	r3, [r7, #4]
 3760 00fe 5B68     		ldr	r3, [r3, #4]
 3761              		.loc 1 1881 5
 3762 0100 B3F1804F 		cmp	r3, #1073741824
 3763 0104 06D0     		beq	.L225
1882:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
ARM GAS  /tmp/ccoEQtJm.s 			page 100


1883:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     /* Set the HW request in CTRB register  */
1884:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;      
 3764              		.loc 1 1884 40
 3765 0106 7B68     		ldr	r3, [r7, #4]
 3766 0108 5A68     		ldr	r2, [r3, #4]
 3767              		.loc 1 1884 10
 3768 010a 7B68     		ldr	r3, [r7, #4]
 3769 010c 1B68     		ldr	r3, [r3]
 3770              		.loc 1 1884 49
 3771 010e D2B2     		uxtb	r2, r2
 3772              		.loc 1 1884 27
 3773 0110 9A62     		str	r2, [r3, #40]
 3774 0112 03E0     		b	.L226
 3775              	.L225:
1885:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1886:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   else /* SW request : reset the CTBR register */
1887:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   {
1888:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****     hmdma->Instance->CTBR = 0;
 3776              		.loc 1 1888 10
 3777 0114 7B68     		ldr	r3, [r7, #4]
 3778 0116 1B68     		ldr	r3, [r3]
 3779              		.loc 1 1888 27
 3780 0118 0022     		movs	r2, #0
 3781 011a 9A62     		str	r2, [r3, #40]
 3782              	.L226:
1889:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   }
1890:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   
1891:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   /* Write Link Address Register */
1892:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c ****   hmdma->Instance->CLAR =  0;
 3783              		.loc 1 1892 8
 3784 011c 7B68     		ldr	r3, [r7, #4]
 3785 011e 1B68     		ldr	r3, [r3]
 3786              		.loc 1 1892 25
 3787 0120 0022     		movs	r2, #0
 3788 0122 5A62     		str	r2, [r3, #36]
1893:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c **** }
 3789              		.loc 1 1893 1
 3790 0124 00BF     		nop
 3791 0126 1437     		adds	r7, r7, #20
 3792              		.cfi_def_cfa_offset 4
 3793 0128 BD46     		mov	sp, r7
 3794              		.cfi_def_cfa_register 13
 3795              		@ sp needed
 3796 012a 5DF8047B 		ldr	r7, [sp], #4
 3797              		.cfi_restore 7
 3798              		.cfi_def_cfa_offset 0
 3799 012e 7047     		bx	lr
 3800              		.cfi_endproc
 3801              	.LFE154:
 3803              		.text
 3804              	.Letext0:
 3805              		.file 2 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/ma
 3806              		.file 3 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3807              		.file 4 "./Drivers/CMSIS/Include/core_cm7.h"
 3808              		.file 5 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3809              		.file 6 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 3810              		.file 7 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.
ARM GAS  /tmp/ccoEQtJm.s 			page 101


 3811              		.file 8 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3812              		.file 9 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3813              		.file 10 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 3814              		.file 11 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/m
 3815              		.file 12 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3816              		.file 13 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 3817              		.file 14 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccoEQtJm.s 			page 102


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_mdma.c
     /tmp/ccoEQtJm.s:17     .text.HAL_MDMA_Init:0000000000000000 $t
     /tmp/ccoEQtJm.s:25     .text.HAL_MDMA_Init:0000000000000000 HAL_MDMA_Init
     /tmp/ccoEQtJm.s:3550   .text.MDMA_Init:0000000000000000 MDMA_Init
     /tmp/ccoEQtJm.s:140    .text.HAL_MDMA_DeInit:0000000000000000 $t
     /tmp/ccoEQtJm.s:147    .text.HAL_MDMA_DeInit:0000000000000000 HAL_MDMA_DeInit
     /tmp/ccoEQtJm.s:300    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 $t
     /tmp/ccoEQtJm.s:307    .text.HAL_MDMA_ConfigPostRequestMask:0000000000000000 HAL_MDMA_ConfigPostRequestMask
     /tmp/ccoEQtJm.s:438    .text.HAL_MDMA_RegisterCallback:0000000000000000 $t
     /tmp/ccoEQtJm.s:445    .text.HAL_MDMA_RegisterCallback:0000000000000000 HAL_MDMA_RegisterCallback
     /tmp/ccoEQtJm.s:502    .text.HAL_MDMA_RegisterCallback:000000000000004c $d
     /tmp/ccoEQtJm.s:508    .text.HAL_MDMA_RegisterCallback:0000000000000064 $t
     /tmp/ccoEQtJm.s:582    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccoEQtJm.s:589    .text.HAL_MDMA_UnRegisterCallback:0000000000000000 HAL_MDMA_UnRegisterCallback
     /tmp/ccoEQtJm.s:645    .text.HAL_MDMA_UnRegisterCallback:0000000000000048 $d
     /tmp/ccoEQtJm.s:652    .text.HAL_MDMA_UnRegisterCallback:0000000000000064 $t
     /tmp/ccoEQtJm.s:756    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 $t
     /tmp/ccoEQtJm.s:763    .text.HAL_MDMA_LinkedList_CreateNode:0000000000000000 HAL_MDMA_LinkedList_CreateNode
     /tmp/ccoEQtJm.s:1096   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 $t
     /tmp/ccoEQtJm.s:1103   .text.HAL_MDMA_LinkedList_AddNode:0000000000000000 HAL_MDMA_LinkedList_AddNode
     /tmp/ccoEQtJm.s:1405   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 $t
     /tmp/ccoEQtJm.s:1412   .text.HAL_MDMA_LinkedList_RemoveNode:0000000000000000 HAL_MDMA_LinkedList_RemoveNode
     /tmp/ccoEQtJm.s:1690   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 $t
     /tmp/ccoEQtJm.s:1697   .text.HAL_MDMA_LinkedList_EnableCircularMode:0000000000000000 HAL_MDMA_LinkedList_EnableCircularMode
     /tmp/ccoEQtJm.s:1806   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 $t
     /tmp/ccoEQtJm.s:1813   .text.HAL_MDMA_LinkedList_DisableCircularMode:0000000000000000 HAL_MDMA_LinkedList_DisableCircularMode
     /tmp/ccoEQtJm.s:1920   .text.HAL_MDMA_Start:0000000000000000 $t
     /tmp/ccoEQtJm.s:1927   .text.HAL_MDMA_Start:0000000000000000 HAL_MDMA_Start
     /tmp/ccoEQtJm.s:3382   .text.MDMA_SetConfig:0000000000000000 MDMA_SetConfig
     /tmp/ccoEQtJm.s:2047   .text.HAL_MDMA_Start_IT:0000000000000000 $t
     /tmp/ccoEQtJm.s:2054   .text.HAL_MDMA_Start_IT:0000000000000000 HAL_MDMA_Start_IT
     /tmp/ccoEQtJm.s:2227   .text.HAL_MDMA_Abort:0000000000000000 $t
     /tmp/ccoEQtJm.s:2234   .text.HAL_MDMA_Abort:0000000000000000 HAL_MDMA_Abort
     /tmp/ccoEQtJm.s:2363   .text.HAL_MDMA_Abort_IT:0000000000000000 $t
     /tmp/ccoEQtJm.s:2370   .text.HAL_MDMA_Abort_IT:0000000000000000 HAL_MDMA_Abort_IT
     /tmp/ccoEQtJm.s:2438   .text.HAL_MDMA_PollForTransfer:0000000000000000 $t
     /tmp/ccoEQtJm.s:2445   .text.HAL_MDMA_PollForTransfer:0000000000000000 HAL_MDMA_PollForTransfer
     /tmp/ccoEQtJm.s:2727   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 $t
     /tmp/ccoEQtJm.s:2734   .text.HAL_MDMA_GenerateSWRequest:0000000000000000 HAL_MDMA_GenerateSWRequest
     /tmp/ccoEQtJm.s:2835   .text.HAL_MDMA_IRQHandler:0000000000000000 $t
     /tmp/ccoEQtJm.s:2842   .text.HAL_MDMA_IRQHandler:0000000000000000 HAL_MDMA_IRQHandler
     /tmp/ccoEQtJm.s:3253   .text.HAL_MDMA_IRQHandler:0000000000000278 $d
     /tmp/ccoEQtJm.s:3258   .text.HAL_MDMA_IRQHandler:0000000000000284 $t
     /tmp/ccoEQtJm.s:3295   .text.HAL_MDMA_GetState:0000000000000000 $t
     /tmp/ccoEQtJm.s:3302   .text.HAL_MDMA_GetState:0000000000000000 HAL_MDMA_GetState
     /tmp/ccoEQtJm.s:3336   .text.HAL_MDMA_GetError:0000000000000000 $t
     /tmp/ccoEQtJm.s:3343   .text.HAL_MDMA_GetError:0000000000000000 HAL_MDMA_GetError
     /tmp/ccoEQtJm.s:3376   .text.MDMA_SetConfig:0000000000000000 $t
     /tmp/ccoEQtJm.s:3539   .text.MDMA_SetConfig:00000000000000dc $d
     /tmp/ccoEQtJm.s:3544   .text.MDMA_Init:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
