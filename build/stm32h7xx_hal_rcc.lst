ARM GAS  /tmp/ccDJQnZC.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_rcc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_RCC_DeInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB134:
  27              		.file 1 "./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c"
   1:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
   2:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
   3:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @file    stm32h7xx_hal_rcc.c
   4:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  11:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @verbatim
  12:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  13:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  15:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  16:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSI 64MHz) with Flash 0 wait state,and all peripherals are off except
  18:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       internal SRAM, Flash, JTAG and PWR
  19:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) There is no pre-scaler on High speed (AHB) and Low speed (APB) buses;
  20:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) All GPIOs are in analogue mode , except the JTAG pins which
  23:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  25:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  26:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  27:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  30:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the AHB and APB buses pre-scalers
  31:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /tmp/ccDJQnZC.s 			page 2


  32:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) Configure the clock kernel source(s) for peripherals which clocks are not
  33:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           derived from the System clock through :RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R
  34:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           and RCC_D3CCIPR registers
  35:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  36:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ==============================================================================
  38:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  39:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       from/to registers.
  42:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  48:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
  49:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       Implemented Workaround:
  50:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  53:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   @endverbatim
  54:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ******************************************************************************
  55:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @attention
  56:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  57:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
  58:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  60:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
  65:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   ******************************************************************************
  66:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  67:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  68:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #include "stm32h7xx_hal.h"
  70:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  71:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @addtogroup STM32H7xx_HAL_Driver
  72:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  73:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  74:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  75:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC  RCC
  76:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  78:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  79:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  80:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  82:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
  87:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  88:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  /tmp/ccDJQnZC.s 			page 3


  89:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  90:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  91:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  92:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()      __HAL_RCC_GPIOC_CLK_ENABLE()
  93:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  94:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  95:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
  96:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
  97:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
  98:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
  99:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
 106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
 117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
 118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
 121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
 122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       (HSE, HSI, LSE,CSI, LSI,HSI48, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB3, A
 124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        AHB2,AHB4,APB3, APB1L, APB1H, APB2, and APB4).
 125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSI (high-speed internal), 64 MHz factory-trimmed RC used directly or through
 128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              the PLL as System clock source.
 129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSI is a low-power RC oscillator which can be used directly as system clock, periphera
 130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock, or PLL input.But even with frequency calibration, is less accurate than an
 131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              external crystal oscillator or ceramic resonator.
 132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              clock source.
 134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 48 MHz crystal oscillator used directly or
 136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) PLL , The RCC features three independent PLLs (clocked by HSI , HSE or CSI),
 141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              featuring three different output clocks and able  to work either in integer or Fractio
 142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) A main PLL, PLL1, which is generally used to provide clocks to the CPU
 143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                 and to some peripherals.
 144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****            (++) Two dedicated PLLs, PLL2 and PLL3, which are used to generate the kernel clock for 
 145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 4


 146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs
 148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M NMI (Non-Mask-able Interrupt)
 151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              exception vector.
 152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO1 (micro controller clock output), used to output HSI, LSE, HSE, PLL1(PLL1_Q)
 154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              or HSI48 clock (through a configurable pre-scaler) on PA8 pin.
 155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) MCO2 (micro controller clock output), used to output HSE, PLL2(PLL2_P), SYSCLK,
 157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              LSI, CSI, or PLL1(PLL1_P) clock (through a configurable pre-scaler) on PC9 pin.
 158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): CSI,HSI,
 161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              HSE and PLL.
 162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System core clock through configurable
 163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              pre-scaler and used to clock the CPU, memory and peripherals mapped
 164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              on AHB and APB bus of the 3 Domains (D1, D2, D3) through configurable pre-scalers
 165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              and used to clock the peripherals mapped on these buses. You can use
 166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve system clock frequency.
 167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except those
 169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              with dual clock domain where kernel source clock could be selected through
 170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****              RCC_D1CCIPR,RCC_D2CCIP1R,RCC_D2CCIP2R and RCC_D3CCIPR registers.
 171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
 172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
 173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - HSE, PLL1, PLL2 and PLL3 OFF
 180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - AHB, APB Bus pre-scaler set to 1.
 181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - All interrupts disabled
 183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - Peripheral clocks
 185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
  28              		.loc 1 189 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
 190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccDJQnZC.s 			page 5


 191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  40              		.loc 1 193 15
  41 0006 FFF7FEFF 		bl	HAL_GetTick
  42 000a 7860     		str	r0, [r7, #4]
 194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSION bit */
 196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  43              		.loc 1 196 3
  44 000c 6E4B     		ldr	r3, .L16
  45 000e 1B68     		ldr	r3, [r3]
  46 0010 6D4A     		ldr	r2, .L16
  47 0012 43F00103 		orr	r3, r3, #1
  48 0016 1360     		str	r3, [r2]
 197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSI is ready */
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  49              		.loc 1 199 9
  50 0018 08E0     		b	.L2
  51              	.L4:
 200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  52              		.loc 1 201 10
  53 001a FFF7FEFF 		bl	HAL_GetTick
  54 001e 0246     		mov	r2, r0
  55              		.loc 1 201 24
  56 0020 7B68     		ldr	r3, [r7, #4]
  57 0022 D31A     		subs	r3, r2, r3
  58              		.loc 1 201 8
  59 0024 022B     		cmp	r3, #2
  60 0026 01D9     		bls	.L2
 202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
  61              		.loc 1 203 14
  62 0028 0323     		movs	r3, #3
  63 002a C9E0     		b	.L3
  64              	.L2:
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  65              		.loc 1 199 10
  66 002c 664B     		ldr	r3, .L16
  67 002e 1B68     		ldr	r3, [r3]
  68 0030 03F00403 		and	r3, r3, #4
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
  69              		.loc 1 199 9
  70 0034 002B     		cmp	r3, #0
  71 0036 F0D0     		beq	.L4
 204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set HSITRIM[6:0] bits to the reset value */
 208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM_6);
  72              		.loc 1 208 3
  73 0038 634B     		ldr	r3, .L16
  74 003a 5B68     		ldr	r3, [r3, #4]
  75 003c 624A     		ldr	r2, .L16
  76 003e 43F08043 		orr	r3, r3, #1073741824
ARM GAS  /tmp/ccDJQnZC.s 			page 6


  77 0042 5360     		str	r3, [r2, #4]
 209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CFGR register */
 211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  78              		.loc 1 211 3
  79 0044 604B     		ldr	r3, .L16
  80 0046 0022     		movs	r2, #0
  81 0048 1A61     		str	r2, [r3, #16]
 212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  82              		.loc 1 214 19
  83 004a 604B     		ldr	r3, .L16+4
  84 004c 604A     		ldr	r2, .L16+8
  85 004e 1A60     		str	r2, [r3]
 215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
  86              		.loc 1 217 6
  87 0050 0020     		movs	r0, #0
  88 0052 FFF7FEFF 		bl	HAL_InitTick
  89 0056 0346     		mov	r3, r0
  90              		.loc 1 217 5
  91 0058 002B     		cmp	r3, #0
  92 005a 01D0     		beq	.L5
 218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
  93              		.loc 1 219 12
  94 005c 0123     		movs	r3, #1
  95 005e AFE0     		b	.L3
  96              	.L5:
 220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  97              		.loc 1 223 15
  98 0060 FFF7FEFF 		bl	HAL_GetTick
  99 0064 7860     		str	r0, [r7, #4]
 224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != 0U)
 100              		.loc 1 226 9
 101 0066 0AE0     		b	.L6
 102              	.L7:
 227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 103              		.loc 1 228 10
 104 0068 FFF7FEFF 		bl	HAL_GetTick
 105 006c 0246     		mov	r2, r0
 106              		.loc 1 228 24
 107 006e 7B68     		ldr	r3, [r7, #4]
 108 0070 D31A     		subs	r3, r2, r3
 109              		.loc 1 228 8
 110 0072 41F28832 		movw	r2, #5000
 111 0076 9342     		cmp	r3, r2
 112 0078 01D9     		bls	.L6
 229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccDJQnZC.s 			page 7


 230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 113              		.loc 1 230 14
 114 007a 0323     		movs	r3, #3
 115 007c A0E0     		b	.L3
 116              	.L6:
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 117              		.loc 1 226 10
 118 007e 524B     		ldr	r3, .L16
 119 0080 1B69     		ldr	r3, [r3, #16]
 120 0082 03F03803 		and	r3, r3, #56
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 121              		.loc 1 226 9
 122 0086 002B     		cmp	r3, #0
 123 0088 EED1     		bne	.L7
 231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 124              		.loc 1 235 15
 125 008a FFF7FEFF 		bl	HAL_GetTick
 126 008e 7860     		str	r0, [r7, #4]
 236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset CSION, CSIKERON, HSEON, HSI48ON, HSECSSON, HSIDIV bits */
 238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSIKERON| RCC_CR_HSIDIV| RCC_CR_HSIDIVF| RCC_CR_CSION | 
 127              		.loc 1 238 3
 128 0090 4D4B     		ldr	r3, .L16
 129 0092 1A68     		ldr	r2, [r3]
 130 0094 4C49     		ldr	r1, .L16
 131 0096 4F4B     		ldr	r3, .L16+12
 132 0098 1340     		ands	r3, r3, r2
 133 009a 0B60     		str	r3, [r1]
 239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   | RCC_CR_HSI48ON | RCC_CR_CSSHSEON);
 240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 134              		.loc 1 242 9
 135 009c 08E0     		b	.L8
 136              	.L9:
 243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 137              		.loc 1 244 10
 138 009e FFF7FEFF 		bl	HAL_GetTick
 139 00a2 0246     		mov	r2, r0
 140              		.loc 1 244 24
 141 00a4 7B68     		ldr	r3, [r7, #4]
 142 00a6 D31A     		subs	r3, r2, r3
 143              		.loc 1 244 8
 144 00a8 642B     		cmp	r3, #100
 145 00aa 01D9     		bls	.L8
 245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 146              		.loc 1 246 14
 147 00ac 0323     		movs	r3, #3
 148 00ae 87E0     		b	.L3
 149              	.L8:
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccDJQnZC.s 			page 8


 150              		.loc 1 242 10
 151 00b0 454B     		ldr	r3, .L16
 152 00b2 1B68     		ldr	r3, [r3]
 153 00b4 03F40033 		and	r3, r3, #131072
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 154              		.loc 1 242 9
 155 00b8 002B     		cmp	r3, #0
 156 00ba F0D1     		bne	.L9
 247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 157              		.loc 1 251 15
 158 00bc FFF7FEFF 		bl	HAL_GetTick
 159 00c0 7860     		str	r0, [r7, #4]
 252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear PLLON bit */
 254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL1ON);
 160              		.loc 1 254 3
 161 00c2 414B     		ldr	r3, .L16
 162 00c4 1B68     		ldr	r3, [r3]
 163 00c6 404A     		ldr	r2, .L16
 164 00c8 23F08073 		bic	r3, r3, #16777216
 165 00cc 1360     		str	r3, [r2]
 255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 166              		.loc 1 257 9
 167 00ce 08E0     		b	.L10
 168              	.L11:
 258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 169              		.loc 1 259 10
 170 00d0 FFF7FEFF 		bl	HAL_GetTick
 171 00d4 0246     		mov	r2, r0
 172              		.loc 1 259 24
 173 00d6 7B68     		ldr	r3, [r7, #4]
 174 00d8 D31A     		subs	r3, r2, r3
 175              		.loc 1 259 8
 176 00da 022B     		cmp	r3, #2
 177 00dc 01D9     		bls	.L10
 260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 178              		.loc 1 261 14
 179 00de 0323     		movs	r3, #3
 180 00e0 6EE0     		b	.L3
 181              	.L10:
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 182              		.loc 1 257 10
 183 00e2 394B     		ldr	r3, .L16
 184 00e4 1B68     		ldr	r3, [r3]
 185 00e6 03F00073 		and	r3, r3, #33554432
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 186              		.loc 1 257 9
 187 00ea 002B     		cmp	r3, #0
 188 00ec F0D1     		bne	.L11
ARM GAS  /tmp/ccDJQnZC.s 			page 9


 262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 189              		.loc 1 266 15
 190 00ee FFF7FEFF 		bl	HAL_GetTick
 191 00f2 7860     		str	r0, [r7, #4]
 267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2ON bit */
 269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 192              		.loc 1 269 3
 193 00f4 344B     		ldr	r3, .L16
 194 00f6 1B68     		ldr	r3, [r3]
 195 00f8 334A     		ldr	r2, .L16
 196 00fa 23F08063 		bic	r3, r3, #67108864
 197 00fe 1360     		str	r3, [r2]
 270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != 0U)
 198              		.loc 1 272 9
 199 0100 08E0     		b	.L12
 200              	.L13:
 273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 201              		.loc 1 274 10
 202 0102 FFF7FEFF 		bl	HAL_GetTick
 203 0106 0246     		mov	r2, r0
 204              		.loc 1 274 24
 205 0108 7B68     		ldr	r3, [r7, #4]
 206 010a D31A     		subs	r3, r2, r3
 207              		.loc 1 274 8
 208 010c 022B     		cmp	r3, #2
 209 010e 01D9     		bls	.L12
 275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 210              		.loc 1 276 14
 211 0110 0323     		movs	r3, #3
 212 0112 55E0     		b	.L3
 213              	.L12:
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 214              		.loc 1 272 10
 215 0114 2C4B     		ldr	r3, .L16
 216 0116 1B68     		ldr	r3, [r3]
 217 0118 03F00063 		and	r3, r3, #134217728
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 218              		.loc 1 272 9
 219 011c 002B     		cmp	r3, #0
 220 011e F0D1     		bne	.L13
 277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get Start Tick */
 281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 221              		.loc 1 281 15
 222 0120 FFF7FEFF 		bl	HAL_GetTick
 223 0124 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccDJQnZC.s 			page 10


 282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3 bit */
 284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 224              		.loc 1 284 3
 225 0126 284B     		ldr	r3, .L16
 226 0128 1B68     		ldr	r3, [r3]
 227 012a 274A     		ldr	r2, .L16
 228 012c 23F08053 		bic	r3, r3, #268435456
 229 0130 1360     		str	r3, [r2]
 285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != 0U)
 230              		.loc 1 287 9
 231 0132 08E0     		b	.L14
 232              	.L15:
 288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 233              		.loc 1 289 10
 234 0134 FFF7FEFF 		bl	HAL_GetTick
 235 0138 0246     		mov	r2, r0
 236              		.loc 1 289 24
 237 013a 7B68     		ldr	r3, [r7, #4]
 238 013c D31A     		subs	r3, r2, r3
 239              		.loc 1 289 8
 240 013e 022B     		cmp	r3, #2
 241 0140 01D9     		bls	.L14
 290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_TIMEOUT;
 242              		.loc 1 291 14
 243 0142 0323     		movs	r3, #3
 244 0144 3CE0     		b	.L3
 245              	.L14:
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 246              		.loc 1 287 10
 247 0146 204B     		ldr	r3, .L16
 248 0148 1B68     		ldr	r3, [r3]
 249 014a 03F00053 		and	r3, r3, #536870912
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 250              		.loc 1 287 9
 251 014e 002B     		cmp	r3, #0
 252 0150 F0D1     		bne	.L15
 292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D1CFGR register */
 296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D1CFGR);
 253              		.loc 1 296 3
 254 0152 1D4B     		ldr	r3, .L16
 255 0154 0022     		movs	r2, #0
 256 0156 9A61     		str	r2, [r3, #24]
 297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D2CFGR register */
 299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D2CFGR);
 257              		.loc 1 299 3
 258 0158 1B4B     		ldr	r3, .L16
 259 015a 0022     		movs	r2, #0
 260 015c DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccDJQnZC.s 			page 11


 300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset D3CFGR register */
 302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->D3CFGR);
 261              		.loc 1 302 3
 262 015e 1A4B     		ldr	r3, .L16
 263 0160 0022     		movs	r2, #0
 264 0162 1A62     		str	r2, [r3, #32]
 303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCKSELR register to default value */
 305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC->PLLCKSELR= RCC_PLLCKSELR_DIVM1_5|RCC_PLLCKSELR_DIVM2_5|RCC_PLLCKSELR_DIVM3_5;
 265              		.loc 1 305 6
 266 0164 184B     		ldr	r3, .L16
 267              		.loc 1 305 17
 268 0166 1C4A     		ldr	r2, .L16+16
 269 0168 9A62     		str	r2, [r3, #40]
 306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLLCFGR register to default value */
 308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLLCFGR, 0x01FF0000U);
 270              		.loc 1 308 3
 271 016a 174B     		ldr	r3, .L16
 272 016c 1B4A     		ldr	r2, .L16+20
 273 016e DA62     		str	r2, [r3, #44]
 309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1DIVR register to default value */
 311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL1DIVR,0x01010280U);
 274              		.loc 1 311 3
 275 0170 154B     		ldr	r3, .L16
 276 0172 1B4A     		ldr	r2, .L16+24
 277 0174 1A63     		str	r2, [r3, #48]
 312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL1FRACR register */
 314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL1FRACR);
 278              		.loc 1 314 3
 279 0176 144B     		ldr	r3, .L16
 280 0178 0022     		movs	r2, #0
 281 017a 5A63     		str	r2, [r3, #52]
 315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2DIVR register to default value */
 317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL2DIVR,0x01010280U);
 282              		.loc 1 317 3
 283 017c 124B     		ldr	r3, .L16
 284 017e 184A     		ldr	r2, .L16+24
 285 0180 9A63     		str	r2, [r3, #56]
 318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL2FRACR register */
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL2FRACR);
 286              		.loc 1 320 3
 287 0182 114B     		ldr	r3, .L16
 288 0184 0022     		movs	r2, #0
 289 0186 DA63     		str	r2, [r3, #60]
 321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3DIVR register to default value */
 323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->PLL3DIVR,0x01010280U);
 290              		.loc 1 323 3
 291 0188 0F4B     		ldr	r3, .L16
 292 018a 154A     		ldr	r2, .L16+24
 293 018c 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/ccDJQnZC.s 			page 12


 324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset PLL3FRACR register */
 326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->PLL3FRACR);
 294              		.loc 1 326 3
 295 018e 0E4B     		ldr	r3, .L16
 296 0190 0022     		movs	r2, #0
 297 0192 5A64     		str	r2, [r3, #68]
 327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 298              		.loc 1 329 3
 299 0194 0C4B     		ldr	r3, .L16
 300 0196 1B68     		ldr	r3, [r3]
 301 0198 0B4A     		ldr	r2, .L16
 302 019a 23F48023 		bic	r3, r3, #262144
 303 019e 1360     		str	r3, [r2]
 330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Disable all interrupts */
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 304              		.loc 1 332 3
 305 01a0 094B     		ldr	r3, .L16
 306 01a2 0022     		movs	r2, #0
 307 01a4 1A66     		str	r2, [r3, #96]
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Clear all interrupts flags */
 335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   WRITE_REG(RCC->CICR,0xFFFFFFFFU);
 308              		.loc 1 335 3
 309 01a6 084B     		ldr	r3, .L16
 310 01a8 4FF0FF32 		mov	r2, #-1
 311 01ac 9A66     		str	r2, [r3, #104]
 336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Reset all RSR flags */
 338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->RSR, RCC_RSR_RMVF);
 312              		.loc 1 338 3
 313 01ae 064B     		ldr	r3, .L16
 314 01b0 D3F8D030 		ldr	r3, [r3, #208]
 315 01b4 044A     		ldr	r2, .L16
 316 01b6 43F48033 		orr	r3, r3, #65536
 317 01ba C2F8D030 		str	r3, [r2, #208]
 339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 318              		.loc 1 340 10
 319 01be 0023     		movs	r3, #0
 320              	.L3:
 341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 321              		.loc 1 341 1
 322 01c0 1846     		mov	r0, r3
 323 01c2 0837     		adds	r7, r7, #8
 324              		.cfi_def_cfa_offset 8
 325 01c4 BD46     		mov	sp, r7
 326              		.cfi_def_cfa_register 13
 327              		@ sp needed
 328 01c6 80BD     		pop	{r7, pc}
 329              	.L17:
 330              		.align	2
 331              	.L16:
 332 01c8 00440258 		.word	1476543488
ARM GAS  /tmp/ccDJQnZC.s 			page 13


 333 01cc 00000000 		.word	SystemCoreClock
 334 01d0 0090D003 		.word	64000000
 335 01d4 45EDF6FF 		.word	-594619
 336 01d8 00020202 		.word	33686016
 337 01dc 0000FF01 		.word	33488896
 338 01e0 80020101 		.word	16843392
 339              		.cfi_endproc
 340              	.LFE134:
 342              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 343              		.align	1
 344              		.weak	HAL_RCC_OscConfig
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv5-d16
 350              	HAL_RCC_OscConfig:
 351              	.LFB135:
 342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
 347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to LSE Off
 351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         supported by this function. User should request a transition to HSE Off
 354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HAL status
 356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 352              		.loc 1 358 1
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 40
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 8AB0     		sub	sp, sp, #40
 361              		.cfi_def_cfa_offset 48
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check Null pointer */
 362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 365              		.loc 1 362 5
 366 0008 7B68     		ldr	r3, [r7, #4]
 367 000a 002B     		cmp	r3, #0
 368 000c 01D1     		bne	.L19
 363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccDJQnZC.s 			page 14


 369              		.loc 1 364 12
 370 000e 0123     		movs	r3, #1
 371 0010 A4E3     		b	.L20
 372              	.L19:
 365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 373              		.loc 1 370 25
 374 0012 7B68     		ldr	r3, [r7, #4]
 375 0014 1B68     		ldr	r3, [r3]
 376              		.loc 1 370 43
 377 0016 03F00103 		and	r3, r3, #1
 378              		.loc 1 370 5
 379 001a 002B     		cmp	r3, #0
 380 001c 00F08780 		beq	.L21
 381              	.LBB2:
 371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 382              		.loc 1 375 37
 383 0020 9A4B     		ldr	r3, .L96
 384 0022 1B69     		ldr	r3, [r3, #16]
 385              		.loc 1 375 20
 386 0024 03F03803 		and	r3, r3, #56
 387 0028 7B62     		str	r3, [r7, #36]
 376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 388              		.loc 1 376 40
 389 002a 984B     		ldr	r3, .L96
 390              		.loc 1 376 20
 391 002c 9B6A     		ldr	r3, [r3, #40]
 392 002e 3B62     		str	r3, [r7, #32]
 377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 393              		.loc 1 378 7
 394 0030 7B6A     		ldr	r3, [r7, #36]
 395 0032 102B     		cmp	r3, #16
 396 0034 07D0     		beq	.L22
 397              		.loc 1 378 45 discriminator 1
 398 0036 7B6A     		ldr	r3, [r7, #36]
 399 0038 182B     		cmp	r3, #24
 400 003a 10D1     		bne	.L23
 401              		.loc 1 378 107 discriminator 2
 402 003c 3B6A     		ldr	r3, [r7, #32]
 403 003e 03F00303 		and	r3, r3, #3
 404              		.loc 1 378 87 discriminator 2
 405 0042 022B     		cmp	r3, #2
 406 0044 0BD1     		bne	.L23
 407              	.L22:
 379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF
 408              		.loc 1 380 11
 409 0046 914B     		ldr	r3, .L96
ARM GAS  /tmp/ccDJQnZC.s 			page 15


 410 0048 1B68     		ldr	r3, [r3]
 411 004a 03F40033 		and	r3, r3, #131072
 412              		.loc 1 380 9
 413 004e 002B     		cmp	r3, #0
 414 0050 6CD0     		beq	.L95
 415              		.loc 1 380 75 discriminator 1
 416 0052 7B68     		ldr	r3, [r7, #4]
 417 0054 5B68     		ldr	r3, [r3, #4]
 418              		.loc 1 380 54 discriminator 1
 419 0056 002B     		cmp	r3, #0
 420 0058 68D1     		bne	.L95
 381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 421              		.loc 1 382 16
 422 005a 0123     		movs	r3, #1
 423 005c 7EE3     		b	.L20
 424              	.L23:
 383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 425              		.loc 1 388 7
 426 005e 7B68     		ldr	r3, [r7, #4]
 427 0060 5B68     		ldr	r3, [r3, #4]
 428 0062 B3F5803F 		cmp	r3, #65536
 429 0066 06D1     		bne	.L25
 430              		.loc 1 388 7 is_stmt 0 discriminator 1
 431 0068 884B     		ldr	r3, .L96
 432 006a 1B68     		ldr	r3, [r3]
 433 006c 874A     		ldr	r2, .L96
 434 006e 43F48033 		orr	r3, r3, #65536
 435 0072 1360     		str	r3, [r2]
 436 0074 2EE0     		b	.L26
 437              	.L25:
 438              		.loc 1 388 7 discriminator 2
 439 0076 7B68     		ldr	r3, [r7, #4]
 440 0078 5B68     		ldr	r3, [r3, #4]
 441 007a 002B     		cmp	r3, #0
 442 007c 0CD1     		bne	.L27
 443              		.loc 1 388 7 discriminator 3
 444 007e 834B     		ldr	r3, .L96
 445 0080 1B68     		ldr	r3, [r3]
 446 0082 824A     		ldr	r2, .L96
 447 0084 23F48033 		bic	r3, r3, #65536
 448 0088 1360     		str	r3, [r2]
 449 008a 804B     		ldr	r3, .L96
 450 008c 1B68     		ldr	r3, [r3]
 451 008e 7F4A     		ldr	r2, .L96
 452 0090 23F48023 		bic	r3, r3, #262144
 453 0094 1360     		str	r3, [r2]
 454 0096 1DE0     		b	.L26
 455              	.L27:
 456              		.loc 1 388 7 discriminator 4
 457 0098 7B68     		ldr	r3, [r7, #4]
 458 009a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccDJQnZC.s 			page 16


 459 009c B3F5A02F 		cmp	r3, #327680
 460 00a0 0CD1     		bne	.L28
 461              		.loc 1 388 7 discriminator 5
 462 00a2 7A4B     		ldr	r3, .L96
 463 00a4 1B68     		ldr	r3, [r3]
 464 00a6 794A     		ldr	r2, .L96
 465 00a8 43F48023 		orr	r3, r3, #262144
 466 00ac 1360     		str	r3, [r2]
 467 00ae 774B     		ldr	r3, .L96
 468 00b0 1B68     		ldr	r3, [r3]
 469 00b2 764A     		ldr	r2, .L96
 470 00b4 43F48033 		orr	r3, r3, #65536
 471 00b8 1360     		str	r3, [r2]
 472 00ba 0BE0     		b	.L26
 473              	.L28:
 474              		.loc 1 388 7 discriminator 6
 475 00bc 734B     		ldr	r3, .L96
 476 00be 1B68     		ldr	r3, [r3]
 477 00c0 724A     		ldr	r2, .L96
 478 00c2 23F48033 		bic	r3, r3, #65536
 479 00c6 1360     		str	r3, [r2]
 480 00c8 704B     		ldr	r3, .L96
 481 00ca 1B68     		ldr	r3, [r3]
 482 00cc 6F4A     		ldr	r2, .L96
 483 00ce 23F48023 		bic	r3, r3, #262144
 484 00d2 1360     		str	r3, [r2]
 485              	.L26:
 389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSE State */
 391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 486              		.loc 1 391 27 is_stmt 1
 487 00d4 7B68     		ldr	r3, [r7, #4]
 488 00d6 5B68     		ldr	r3, [r3, #4]
 489              		.loc 1 391 9
 490 00d8 002B     		cmp	r3, #0
 491 00da 13D0     		beq	.L29
 392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 492              		.loc 1 394 21
 493 00dc FFF7FEFF 		bl	HAL_GetTick
 494 00e0 F861     		str	r0, [r7, #28]
 395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is ready */
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 495              		.loc 1 397 14
 496 00e2 08E0     		b	.L30
 497              	.L31:
 398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 498              		.loc 1 399 26
 499 00e4 FFF7FEFF 		bl	HAL_GetTick
 500 00e8 0246     		mov	r2, r0
 501              		.loc 1 399 40
 502 00ea FB69     		ldr	r3, [r7, #28]
 503 00ec D31A     		subs	r3, r2, r3
 504              		.loc 1 399 13
ARM GAS  /tmp/ccDJQnZC.s 			page 17


 505 00ee 642B     		cmp	r3, #100
 506 00f0 01D9     		bls	.L30
 400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 507              		.loc 1 401 20
 508 00f2 0323     		movs	r3, #3
 509 00f4 32E3     		b	.L20
 510              	.L30:
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 511              		.loc 1 397 15
 512 00f6 654B     		ldr	r3, .L96
 513 00f8 1B68     		ldr	r3, [r3]
 514 00fa 03F40033 		and	r3, r3, #131072
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 515              		.loc 1 397 14
 516 00fe 002B     		cmp	r3, #0
 517 0100 F0D0     		beq	.L31
 518 0102 14E0     		b	.L21
 519              	.L29:
 402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 520              		.loc 1 408 21
 521 0104 FFF7FEFF 		bl	HAL_GetTick
 522 0108 F861     		str	r0, [r7, #28]
 409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 523              		.loc 1 411 14
 524 010a 08E0     		b	.L32
 525              	.L33:
 412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 526              		.loc 1 413 26
 527 010c FFF7FEFF 		bl	HAL_GetTick
 528 0110 0246     		mov	r2, r0
 529              		.loc 1 413 40
 530 0112 FB69     		ldr	r3, [r7, #28]
 531 0114 D31A     		subs	r3, r2, r3
 532              		.loc 1 413 13
 533 0116 642B     		cmp	r3, #100
 534 0118 01D9     		bls	.L32
 414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 535              		.loc 1 415 20
 536 011a 0323     		movs	r3, #3
 537 011c 1EE3     		b	.L20
 538              	.L32:
 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 539              		.loc 1 411 15
 540 011e 5B4B     		ldr	r3, .L96
 541 0120 1B68     		ldr	r3, [r3]
 542 0122 03F40033 		and	r3, r3, #131072
ARM GAS  /tmp/ccDJQnZC.s 			page 18


 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 543              		.loc 1 411 14
 544 0126 002B     		cmp	r3, #0
 545 0128 F0D1     		bne	.L33
 546 012a 00E0     		b	.L21
 547              	.L95:
 380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 548              		.loc 1 380 9
 549 012c 00BF     		nop
 550              	.L21:
 551              	.LBE2:
 416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 552              		.loc 1 422 25
 553 012e 7B68     		ldr	r3, [r7, #4]
 554 0130 1B68     		ldr	r3, [r3]
 555              		.loc 1 422 43
 556 0132 03F00203 		and	r3, r3, #2
 557              		.loc 1 422 5
 558 0136 002B     		cmp	r3, #0
 559 0138 00F0B080 		beq	.L34
 560              	.LBB3:
 423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the HSI is used as system clock it will not disabled */
 429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 561              		.loc 1 429 37
 562 013c 534B     		ldr	r3, .L96
 563 013e 1B69     		ldr	r3, [r3, #16]
 564              		.loc 1 429 20
 565 0140 03F03803 		and	r3, r3, #56
 566 0144 BB61     		str	r3, [r7, #24]
 430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 567              		.loc 1 430 40
 568 0146 514B     		ldr	r3, .L96
 569              		.loc 1 430 20
 570 0148 9B6A     		ldr	r3, [r3, #40]
 571 014a 7B61     		str	r3, [r7, #20]
 431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 572              		.loc 1 431 7
 573 014c BB69     		ldr	r3, [r7, #24]
 574 014e 002B     		cmp	r3, #0
 575 0150 07D0     		beq	.L35
 576              		.loc 1 431 45 discriminator 1
 577 0152 BB69     		ldr	r3, [r7, #24]
 578 0154 182B     		cmp	r3, #24
 579 0156 49D1     		bne	.L36
 580              		.loc 1 431 107 discriminator 2
 581 0158 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccDJQnZC.s 			page 19


 582 015a 03F00303 		and	r3, r3, #3
 583              		.loc 1 431 87 discriminator 2
 584 015e 002B     		cmp	r3, #0
 585 0160 44D1     		bne	.L36
 586              	.L35:
 432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF
 587              		.loc 1 434 11
 588 0162 4A4B     		ldr	r3, .L96
 589 0164 1B68     		ldr	r3, [r3]
 590 0166 03F00403 		and	r3, r3, #4
 591              		.loc 1 434 9
 592 016a 002B     		cmp	r3, #0
 593 016c 05D0     		beq	.L37
 594              		.loc 1 434 75 discriminator 1
 595 016e 7B68     		ldr	r3, [r7, #4]
 596 0170 DB68     		ldr	r3, [r3, #12]
 597              		.loc 1 434 54 discriminator 1
 598 0172 002B     		cmp	r3, #0
 599 0174 01D1     		bne	.L37
 435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 600              		.loc 1 436 16
 601 0176 0123     		movs	r3, #1
 602 0178 F0E2     		b	.L20
 603              	.L37:
 437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 604              		.loc 1 442 9
 605 017a 444B     		ldr	r3, .L96
 606 017c 1B68     		ldr	r3, [r3]
 607 017e 23F01902 		bic	r2, r3, #25
 608 0182 7B68     		ldr	r3, [r7, #4]
 609 0184 DB68     		ldr	r3, [r3, #12]
 610 0186 4149     		ldr	r1, .L96
 611 0188 1343     		orrs	r3, r3, r2
 612 018a 0B60     		str	r3, [r1]
 443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 613              		.loc 1 445 21
 614 018c FFF7FEFF 		bl	HAL_GetTick
 615 0190 F861     		str	r0, [r7, #28]
 446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 616              		.loc 1 448 14
 617 0192 08E0     		b	.L38
 618              	.L39:
 449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((uint32_t) (HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 619              		.loc 1 450 26
ARM GAS  /tmp/ccDJQnZC.s 			page 20


 620 0194 FFF7FEFF 		bl	HAL_GetTick
 621 0198 0246     		mov	r2, r0
 622              		.loc 1 450 40
 623 019a FB69     		ldr	r3, [r7, #28]
 624 019c D31A     		subs	r3, r2, r3
 625              		.loc 1 450 13
 626 019e 022B     		cmp	r3, #2
 627 01a0 01D9     		bls	.L38
 451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 628              		.loc 1 452 20
 629 01a2 0323     		movs	r3, #3
 630 01a4 DAE2     		b	.L20
 631              	.L38:
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 632              		.loc 1 448 15
 633 01a6 394B     		ldr	r3, .L96
 634 01a8 1B68     		ldr	r3, [r3]
 635 01aa 03F00403 		and	r3, r3, #4
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 636              		.loc 1 448 14
 637 01ae 002B     		cmp	r3, #0
 638 01b0 F0D0     		beq	.L39
 453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 639              		.loc 1 456 9
 640 01b2 FFF7FEFF 		bl	HAL_GetREVID
 641 01b6 0246     		mov	r2, r0
 642 01b8 41F20303 		movw	r3, #4099
 643 01bc 9A42     		cmp	r2, r3
 644 01be 0AD8     		bhi	.L40
 645              		.loc 1 456 9 is_stmt 0 discriminator 1
 646 01c0 324B     		ldr	r3, .L96
 647 01c2 5B68     		ldr	r3, [r3, #4]
 648 01c4 23F47C32 		bic	r2, r3, #258048
 649 01c8 7B68     		ldr	r3, [r7, #4]
 650 01ca 1B69     		ldr	r3, [r3, #16]
 651 01cc 1B03     		lsls	r3, r3, #12
 652 01ce 2F49     		ldr	r1, .L96
 653 01d0 1343     		orrs	r3, r3, r2
 654 01d2 4B60     		str	r3, [r1, #4]
 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 655              		.loc 1 434 9 is_stmt 1 discriminator 1
 656 01d4 62E0     		b	.L34
 657              	.L40:
 658              		.loc 1 456 9 discriminator 2
 659 01d6 2D4B     		ldr	r3, .L96
 660 01d8 5B68     		ldr	r3, [r3, #4]
 661 01da 23F0FE42 		bic	r2, r3, #2130706432
 662 01de 7B68     		ldr	r3, [r7, #4]
 663 01e0 1B69     		ldr	r3, [r3, #16]
 664 01e2 1B06     		lsls	r3, r3, #24
 665 01e4 2949     		ldr	r1, .L96
 666 01e6 1343     		orrs	r3, r3, r2
 667 01e8 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp/ccDJQnZC.s 			page 21


 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 668              		.loc 1 434 9 discriminator 2
 669 01ea 57E0     		b	.L34
 670              	.L36:
 457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the HSI State */
 463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 671              		.loc 1 463 28
 672 01ec 7B68     		ldr	r3, [r7, #4]
 673 01ee DB68     		ldr	r3, [r3, #12]
 674              		.loc 1 463 9
 675 01f0 002B     		cmp	r3, #0
 676 01f2 38D0     		beq	.L42
 464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
 466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 677              		.loc 1 466 9
 678 01f4 254B     		ldr	r3, .L96
 679 01f6 1B68     		ldr	r3, [r3]
 680 01f8 23F01902 		bic	r2, r3, #25
 681 01fc 7B68     		ldr	r3, [r7, #4]
 682 01fe DB68     		ldr	r3, [r3, #12]
 683 0200 2249     		ldr	r1, .L96
 684 0202 1343     		orrs	r3, r3, r2
 685 0204 0B60     		str	r3, [r1]
 467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 686              		.loc 1 469 21
 687 0206 FFF7FEFF 		bl	HAL_GetTick
 688 020a F861     		str	r0, [r7, #28]
 470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 689              		.loc 1 472 14
 690 020c 08E0     		b	.L43
 691              	.L44:
 473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 692              		.loc 1 474 15
 693 020e FFF7FEFF 		bl	HAL_GetTick
 694 0212 0246     		mov	r2, r0
 695              		.loc 1 474 29
 696 0214 FB69     		ldr	r3, [r7, #28]
 697 0216 D31A     		subs	r3, r2, r3
 698              		.loc 1 474 13
 699 0218 022B     		cmp	r3, #2
 700 021a 01D9     		bls	.L43
 475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 701              		.loc 1 476 20
 702 021c 0323     		movs	r3, #3
 703 021e 9DE2     		b	.L20
ARM GAS  /tmp/ccDJQnZC.s 			page 22


 704              	.L43:
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 705              		.loc 1 472 15
 706 0220 1A4B     		ldr	r3, .L96
 707 0222 1B68     		ldr	r3, [r3]
 708 0224 03F00403 		and	r3, r3, #4
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 709              		.loc 1 472 14
 710 0228 002B     		cmp	r3, #0
 711 022a F0D0     		beq	.L44
 477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 712              		.loc 1 481 9
 713 022c FFF7FEFF 		bl	HAL_GetREVID
 714 0230 0246     		mov	r2, r0
 715 0232 41F20303 		movw	r3, #4099
 716 0236 9A42     		cmp	r2, r3
 717 0238 0AD8     		bhi	.L45
 718              		.loc 1 481 9 is_stmt 0 discriminator 1
 719 023a 144B     		ldr	r3, .L96
 720 023c 5B68     		ldr	r3, [r3, #4]
 721 023e 23F47C32 		bic	r2, r3, #258048
 722 0242 7B68     		ldr	r3, [r7, #4]
 723 0244 1B69     		ldr	r3, [r3, #16]
 724 0246 1B03     		lsls	r3, r3, #12
 725 0248 1049     		ldr	r1, .L96
 726 024a 1343     		orrs	r3, r3, r2
 727 024c 4B60     		str	r3, [r1, #4]
 728 024e 25E0     		b	.L34
 729              	.L45:
 730              		.loc 1 481 9 discriminator 2
 731 0250 0E4B     		ldr	r3, .L96
 732 0252 5B68     		ldr	r3, [r3, #4]
 733 0254 23F0FE42 		bic	r2, r3, #2130706432
 734 0258 7B68     		ldr	r3, [r7, #4]
 735 025a 1B69     		ldr	r3, [r3, #16]
 736 025c 1B06     		lsls	r3, r3, #24
 737 025e 0B49     		ldr	r1, .L96
 738 0260 1343     		orrs	r3, r3, r2
 739 0262 4B60     		str	r3, [r1, #4]
 740 0264 1AE0     		b	.L34
 741              	.L42:
 482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 742              		.loc 1 486 9 is_stmt 1
 743 0266 094B     		ldr	r3, .L96
 744 0268 1B68     		ldr	r3, [r3]
 745 026a 084A     		ldr	r2, .L96
 746 026c 23F00103 		bic	r3, r3, #1
 747 0270 1360     		str	r3, [r2]
 487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 23


 488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 748              		.loc 1 489 21
 749 0272 FFF7FEFF 		bl	HAL_GetTick
 750 0276 F861     		str	r0, [r7, #28]
 490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till HSI is ready */
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 751              		.loc 1 492 14
 752 0278 0AE0     		b	.L47
 753              	.L48:
 493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 754              		.loc 1 494 15
 755 027a FFF7FEFF 		bl	HAL_GetTick
 756 027e 0246     		mov	r2, r0
 757              		.loc 1 494 29
 758 0280 FB69     		ldr	r3, [r7, #28]
 759 0282 D31A     		subs	r3, r2, r3
 760              		.loc 1 494 13
 761 0284 022B     		cmp	r3, #2
 762 0286 03D9     		bls	.L47
 495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 763              		.loc 1 496 20
 764 0288 0323     		movs	r3, #3
 765 028a 67E2     		b	.L20
 766              	.L97:
 767              		.align	2
 768              	.L96:
 769 028c 00440258 		.word	1476543488
 770              	.L47:
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 771              		.loc 1 492 15
 772 0290 A04B     		ldr	r3, .L98
 773 0292 1B68     		ldr	r3, [r3]
 774 0294 03F00403 		and	r3, r3, #4
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 775              		.loc 1 492 14
 776 0298 002B     		cmp	r3, #0
 777 029a EED1     		bne	.L48
 778              	.L34:
 779              	.LBE3:
 497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*----------------------------- CSI Configuration --------------------------*/
 503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 780              		.loc 1 503 25
 781 029c 7B68     		ldr	r3, [r7, #4]
 782 029e 1B68     		ldr	r3, [r3]
 783              		.loc 1 503 43
 784 02a0 03F01003 		and	r3, r3, #16
 785              		.loc 1 503 5
 786 02a4 002B     		cmp	r3, #0
ARM GAS  /tmp/ccDJQnZC.s 			page 24


 787 02a6 00F08F80 		beq	.L49
 788              	.LBB4:
 504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
 507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));
 508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* When the CSI is used as system clock it will not disabled */
 510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 789              		.loc 1 510 37
 790 02aa 9A4B     		ldr	r3, .L98
 791 02ac 1B69     		ldr	r3, [r3, #16]
 792              		.loc 1 510 20
 793 02ae 03F03803 		and	r3, r3, #56
 794 02b2 3B61     		str	r3, [r7, #16]
 511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 795              		.loc 1 511 40
 796 02b4 974B     		ldr	r3, .L98
 797              		.loc 1 511 20
 798 02b6 9B6A     		ldr	r3, [r3, #40]
 799 02b8 FB60     		str	r3, [r7, #12]
 512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pll
 800              		.loc 1 512 7
 801 02ba 3B69     		ldr	r3, [r7, #16]
 802 02bc 082B     		cmp	r3, #8
 803 02be 07D0     		beq	.L50
 804              		.loc 1 512 45 discriminator 1
 805 02c0 3B69     		ldr	r3, [r7, #16]
 806 02c2 182B     		cmp	r3, #24
 807 02c4 2DD1     		bne	.L51
 808              		.loc 1 512 107 discriminator 2
 809 02c6 FB68     		ldr	r3, [r7, #12]
 810 02c8 03F00303 		and	r3, r3, #3
 811              		.loc 1 512 87 discriminator 2
 812 02cc 012B     		cmp	r3, #1
 813 02ce 28D1     		bne	.L51
 814              	.L50:
 513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 514:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* When CSI is used as system clock it will not disabled */
 515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON)
 815              		.loc 1 515 11
 816 02d0 904B     		ldr	r3, .L98
 817 02d2 1B68     		ldr	r3, [r3]
 818 02d4 03F48073 		and	r3, r3, #256
 819              		.loc 1 515 9
 820 02d8 002B     		cmp	r3, #0
 821 02da 05D0     		beq	.L52
 822              		.loc 1 515 75 discriminator 1
 823 02dc 7B68     		ldr	r3, [r7, #4]
 824 02de DB69     		ldr	r3, [r3, #28]
 825              		.loc 1 515 54 discriminator 1
 826 02e0 802B     		cmp	r3, #128
 827 02e2 01D0     		beq	.L52
 516:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 517:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_ERROR;
 828              		.loc 1 517 16
 829 02e4 0123     		movs	r3, #1
ARM GAS  /tmp/ccDJQnZC.s 			page 25


 830 02e6 39E2     		b	.L20
 831              	.L52:
 518:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 519:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 520:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 521:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 522:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 523:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 832              		.loc 1 523 9
 833 02e8 FFF7FEFF 		bl	HAL_GetREVID
 834 02ec 0246     		mov	r2, r0
 835 02ee 41F20303 		movw	r3, #4099
 836 02f2 9A42     		cmp	r2, r3
 837 02f4 0AD8     		bhi	.L53
 838              		.loc 1 523 9 is_stmt 0 discriminator 1
 839 02f6 874B     		ldr	r3, .L98
 840 02f8 5B68     		ldr	r3, [r3, #4]
 841 02fa 23F0F842 		bic	r2, r3, #2080374784
 842 02fe 7B68     		ldr	r3, [r7, #4]
 843 0300 1B6A     		ldr	r3, [r3, #32]
 844 0302 9B06     		lsls	r3, r3, #26
 845 0304 8349     		ldr	r1, .L98
 846 0306 1343     		orrs	r3, r3, r2
 847 0308 4B60     		str	r3, [r1, #4]
 515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 848              		.loc 1 515 9 is_stmt 1 discriminator 1
 849 030a 5DE0     		b	.L49
 850              	.L53:
 851              		.loc 1 523 9 discriminator 2
 852 030c 814B     		ldr	r3, .L98
 853 030e DB68     		ldr	r3, [r3, #12]
 854 0310 23F07C52 		bic	r2, r3, #1056964608
 855 0314 7B68     		ldr	r3, [r7, #4]
 856 0316 1B6A     		ldr	r3, [r3, #32]
 857 0318 1B06     		lsls	r3, r3, #24
 858 031a 7E49     		ldr	r1, .L98
 859 031c 1343     		orrs	r3, r3, r2
 860 031e CB60     		str	r3, [r1, #12]
 515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 861              		.loc 1 515 9 discriminator 2
 862 0320 52E0     		b	.L49
 863              	.L51:
 524:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 525:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 526:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 527:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 528:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Check the CSI State */
 529:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 864              		.loc 1 529 28
 865 0322 7B68     		ldr	r3, [r7, #4]
 866 0324 DB69     		ldr	r3, [r3, #28]
 867              		.loc 1 529 9
 868 0326 002B     		cmp	r3, #0
 869 0328 35D0     		beq	.L55
 530:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 531:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (CSI). */
 532:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_ENABLE();
ARM GAS  /tmp/ccDJQnZC.s 			page 26


 870              		.loc 1 532 9
 871 032a 7A4B     		ldr	r3, .L98
 872 032c 1B68     		ldr	r3, [r3]
 873 032e 794A     		ldr	r2, .L98
 874 0330 43F08003 		orr	r3, r3, #128
 875 0334 1360     		str	r3, [r2]
 533:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 534:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 535:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 876              		.loc 1 535 21
 877 0336 FFF7FEFF 		bl	HAL_GetTick
 878 033a F861     		str	r0, [r7, #28]
 536:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 537:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 879              		.loc 1 538 14
 880 033c 08E0     		b	.L56
 881              	.L57:
 539:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 540:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 882              		.loc 1 540 15
 883 033e FFF7FEFF 		bl	HAL_GetTick
 884 0342 0246     		mov	r2, r0
 885              		.loc 1 540 29
 886 0344 FB69     		ldr	r3, [r7, #28]
 887 0346 D31A     		subs	r3, r2, r3
 888              		.loc 1 540 13
 889 0348 022B     		cmp	r3, #2
 890 034a 01D9     		bls	.L56
 541:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 542:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 891              		.loc 1 542 20
 892 034c 0323     		movs	r3, #3
 893 034e 05E2     		b	.L20
 894              	.L56:
 538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 895              		.loc 1 538 15
 896 0350 704B     		ldr	r3, .L98
 897 0352 1B68     		ldr	r3, [r3]
 898 0354 03F48073 		and	r3, r3, #256
 538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 899              		.loc 1 538 14
 900 0358 002B     		cmp	r3, #0
 901 035a F0D0     		beq	.L57
 543:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 544:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 545:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 546:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
 547:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 902              		.loc 1 547 9
 903 035c FFF7FEFF 		bl	HAL_GetREVID
 904 0360 0246     		mov	r2, r0
 905 0362 41F20303 		movw	r3, #4099
 906 0366 9A42     		cmp	r2, r3
 907 0368 0AD8     		bhi	.L58
 908              		.loc 1 547 9 is_stmt 0 discriminator 1
 909 036a 6A4B     		ldr	r3, .L98
ARM GAS  /tmp/ccDJQnZC.s 			page 27


 910 036c 5B68     		ldr	r3, [r3, #4]
 911 036e 23F0F842 		bic	r2, r3, #2080374784
 912 0372 7B68     		ldr	r3, [r7, #4]
 913 0374 1B6A     		ldr	r3, [r3, #32]
 914 0376 9B06     		lsls	r3, r3, #26
 915 0378 6649     		ldr	r1, .L98
 916 037a 1343     		orrs	r3, r3, r2
 917 037c 4B60     		str	r3, [r1, #4]
 918 037e 23E0     		b	.L49
 919              	.L58:
 920              		.loc 1 547 9 discriminator 2
 921 0380 644B     		ldr	r3, .L98
 922 0382 DB68     		ldr	r3, [r3, #12]
 923 0384 23F07C52 		bic	r2, r3, #1056964608
 924 0388 7B68     		ldr	r3, [r7, #4]
 925 038a 1B6A     		ldr	r3, [r3, #32]
 926 038c 1B06     		lsls	r3, r3, #24
 927 038e 6149     		ldr	r1, .L98
 928 0390 1343     		orrs	r3, r3, r2
 929 0392 CB60     		str	r3, [r1, #12]
 930 0394 18E0     		b	.L49
 931              	.L55:
 548:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 549:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 550:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 551:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (CSI). */
 552:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_CSI_DISABLE();
 932              		.loc 1 552 9 is_stmt 1
 933 0396 5F4B     		ldr	r3, .L98
 934 0398 1B68     		ldr	r3, [r3]
 935 039a 5E4A     		ldr	r2, .L98
 936 039c 23F08003 		bic	r3, r3, #128
 937 03a0 1360     		str	r3, [r2]
 553:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 554:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 555:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 938              		.loc 1 555 21
 939 03a2 FFF7FEFF 		bl	HAL_GetTick
 940 03a6 F861     		str	r0, [r7, #28]
 556:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 557:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till CSI is ready */
 558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 941              		.loc 1 558 14
 942 03a8 08E0     		b	.L60
 943              	.L61:
 559:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 560:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 944              		.loc 1 560 15
 945 03aa FFF7FEFF 		bl	HAL_GetTick
 946 03ae 0246     		mov	r2, r0
 947              		.loc 1 560 29
 948 03b0 FB69     		ldr	r3, [r7, #28]
 949 03b2 D31A     		subs	r3, r2, r3
 950              		.loc 1 560 13
 951 03b4 022B     		cmp	r3, #2
 952 03b6 01D9     		bls	.L60
 561:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccDJQnZC.s 			page 28


 562:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 953              		.loc 1 562 20
 954 03b8 0323     		movs	r3, #3
 955 03ba CFE1     		b	.L20
 956              	.L60:
 558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 957              		.loc 1 558 15
 958 03bc 554B     		ldr	r3, .L98
 959 03be 1B68     		ldr	r3, [r3]
 960 03c0 03F48073 		and	r3, r3, #256
 558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 961              		.loc 1 558 14
 962 03c4 002B     		cmp	r3, #0
 963 03c6 F0D1     		bne	.L61
 964              	.L49:
 965              	.LBE4:
 563:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 564:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 565:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 566:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 567:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 568:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 569:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 966              		.loc 1 569 25
 967 03c8 7B68     		ldr	r3, [r7, #4]
 968 03ca 1B68     		ldr	r3, [r3]
 969              		.loc 1 569 43
 970 03cc 03F00803 		and	r3, r3, #8
 971              		.loc 1 569 5
 972 03d0 002B     		cmp	r3, #0
 973 03d2 36D0     		beq	.L62
 570:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 571:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 572:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 573:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 574:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSI State */
 575:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 974              		.loc 1 575 26
 975 03d4 7B68     		ldr	r3, [r7, #4]
 976 03d6 5B69     		ldr	r3, [r3, #20]
 977              		.loc 1 575 7
 978 03d8 002B     		cmp	r3, #0
 979 03da 19D0     		beq	.L63
 576:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 577:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 578:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 980              		.loc 1 578 7
 981 03dc 4D4B     		ldr	r3, .L98
 982 03de 5B6F     		ldr	r3, [r3, #116]
 983 03e0 4C4A     		ldr	r2, .L98
 984 03e2 43F00103 		orr	r3, r3, #1
 985 03e6 5367     		str	r3, [r2, #116]
 579:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 580:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 581:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 986              		.loc 1 581 19
 987 03e8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccDJQnZC.s 			page 29


 988 03ec F861     		str	r0, [r7, #28]
 582:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 583:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 989              		.loc 1 584 12
 990 03ee 08E0     		b	.L64
 991              	.L65:
 585:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 586:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 992              		.loc 1 586 13
 993 03f0 FFF7FEFF 		bl	HAL_GetTick
 994 03f4 0246     		mov	r2, r0
 995              		.loc 1 586 27
 996 03f6 FB69     		ldr	r3, [r7, #28]
 997 03f8 D31A     		subs	r3, r2, r3
 998              		.loc 1 586 11
 999 03fa 022B     		cmp	r3, #2
 1000 03fc 01D9     		bls	.L64
 587:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 588:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1001              		.loc 1 588 18
 1002 03fe 0323     		movs	r3, #3
 1003 0400 ACE1     		b	.L20
 1004              	.L64:
 584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1005              		.loc 1 584 13
 1006 0402 444B     		ldr	r3, .L98
 1007 0404 5B6F     		ldr	r3, [r3, #116]
 1008 0406 03F00203 		and	r3, r3, #2
 584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1009              		.loc 1 584 12
 1010 040a 002B     		cmp	r3, #0
 1011 040c F0D0     		beq	.L65
 1012 040e 18E0     		b	.L62
 1013              	.L63:
 589:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 590:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 591:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 592:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 593:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 594:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 595:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 1014              		.loc 1 595 7
 1015 0410 404B     		ldr	r3, .L98
 1016 0412 5B6F     		ldr	r3, [r3, #116]
 1017 0414 3F4A     		ldr	r2, .L98
 1018 0416 23F00103 		bic	r3, r3, #1
 1019 041a 5367     		str	r3, [r2, #116]
 596:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 597:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 598:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1020              		.loc 1 598 19
 1021 041c FFF7FEFF 		bl	HAL_GetTick
 1022 0420 F861     		str	r0, [r7, #28]
 599:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 600:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSI is ready */
 601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
ARM GAS  /tmp/ccDJQnZC.s 			page 30


 1023              		.loc 1 601 12
 1024 0422 08E0     		b	.L66
 1025              	.L67:
 602:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 603:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 1026              		.loc 1 603 13
 1027 0424 FFF7FEFF 		bl	HAL_GetTick
 1028 0428 0246     		mov	r2, r0
 1029              		.loc 1 603 27
 1030 042a FB69     		ldr	r3, [r7, #28]
 1031 042c D31A     		subs	r3, r2, r3
 1032              		.loc 1 603 11
 1033 042e 022B     		cmp	r3, #2
 1034 0430 01D9     		bls	.L66
 604:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 605:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1035              		.loc 1 605 18
 1036 0432 0323     		movs	r3, #3
 1037 0434 92E1     		b	.L20
 1038              	.L66:
 601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1039              		.loc 1 601 13
 1040 0436 374B     		ldr	r3, .L98
 1041 0438 5B6F     		ldr	r3, [r3, #116]
 1042 043a 03F00203 		and	r3, r3, #2
 601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1043              		.loc 1 601 12
 1044 043e 002B     		cmp	r3, #0
 1045 0440 F0D1     		bne	.L67
 1046              	.L62:
 606:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 607:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 608:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 609:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 610:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 611:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -------------------------*/
 612:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1047              		.loc 1 612 25
 1048 0442 7B68     		ldr	r3, [r7, #4]
 1049 0444 1B68     		ldr	r3, [r3]
 1050              		.loc 1 612 43
 1051 0446 03F02003 		and	r3, r3, #32
 1052              		.loc 1 612 5
 1053 044a 002B     		cmp	r3, #0
 1054 044c 36D0     		beq	.L68
 613:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 614:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 615:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 616:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the HSI48 State */
 618:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 1055              		.loc 1 618 26
 1056 044e 7B68     		ldr	r3, [r7, #4]
 1057 0450 9B69     		ldr	r3, [r3, #24]
 1058              		.loc 1 618 7
 1059 0452 002B     		cmp	r3, #0
 1060 0454 19D0     		beq	.L69
ARM GAS  /tmp/ccDJQnZC.s 			page 31


 619:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 620:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 621:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 1061              		.loc 1 621 7
 1062 0456 2F4B     		ldr	r3, .L98
 1063 0458 1B68     		ldr	r3, [r3]
 1064 045a 2E4A     		ldr	r2, .L98
 1065 045c 43F48053 		orr	r3, r3, #4096
 1066 0460 1360     		str	r3, [r2]
 622:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 623:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 624:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1067              		.loc 1 624 19
 1068 0462 FFF7FEFF 		bl	HAL_GetTick
 1069 0466 F861     		str	r0, [r7, #28]
 625:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 626:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 1070              		.loc 1 627 12
 1071 0468 08E0     		b	.L70
 1072              	.L71:
 628:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 629:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 1073              		.loc 1 629 13
 1074 046a FFF7FEFF 		bl	HAL_GetTick
 1075 046e 0246     		mov	r2, r0
 1076              		.loc 1 629 27
 1077 0470 FB69     		ldr	r3, [r7, #28]
 1078 0472 D31A     		subs	r3, r2, r3
 1079              		.loc 1 629 11
 1080 0474 022B     		cmp	r3, #2
 1081 0476 01D9     		bls	.L70
 630:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 631:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1082              		.loc 1 631 18
 1083 0478 0323     		movs	r3, #3
 1084 047a 6FE1     		b	.L20
 1085              	.L70:
 627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1086              		.loc 1 627 13
 1087 047c 254B     		ldr	r3, .L98
 1088 047e 1B68     		ldr	r3, [r3]
 1089 0480 03F40053 		and	r3, r3, #8192
 627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1090              		.loc 1 627 12
 1091 0484 002B     		cmp	r3, #0
 1092 0486 F0D0     		beq	.L71
 1093 0488 18E0     		b	.L68
 1094              	.L69:
 632:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 633:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 634:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 635:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 636:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 637:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 638:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 1095              		.loc 1 638 7
ARM GAS  /tmp/ccDJQnZC.s 			page 32


 1096 048a 224B     		ldr	r3, .L98
 1097 048c 1B68     		ldr	r3, [r3]
 1098 048e 214A     		ldr	r2, .L98
 1099 0490 23F48053 		bic	r3, r3, #4096
 1100 0494 1360     		str	r3, [r2]
 639:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 640:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get time-out */
 641:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1101              		.loc 1 641 19
 1102 0496 FFF7FEFF 		bl	HAL_GetTick
 1103 049a F861     		str	r0, [r7, #28]
 642:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 643:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 1104              		.loc 1 644 12
 1105 049c 08E0     		b	.L72
 1106              	.L73:
 645:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 646:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 1107              		.loc 1 646 13
 1108 049e FFF7FEFF 		bl	HAL_GetTick
 1109 04a2 0246     		mov	r2, r0
 1110              		.loc 1 646 27
 1111 04a4 FB69     		ldr	r3, [r7, #28]
 1112 04a6 D31A     		subs	r3, r2, r3
 1113              		.loc 1 646 11
 1114 04a8 022B     		cmp	r3, #2
 1115 04aa 01D9     		bls	.L72
 647:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 648:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1116              		.loc 1 648 18
 1117 04ac 0323     		movs	r3, #3
 1118 04ae 55E1     		b	.L20
 1119              	.L72:
 644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1120              		.loc 1 644 13
 1121 04b0 184B     		ldr	r3, .L98
 1122 04b2 1B68     		ldr	r3, [r3]
 1123 04b4 03F40053 		and	r3, r3, #8192
 644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1124              		.loc 1 644 12
 1125 04b8 002B     		cmp	r3, #0
 1126 04ba F0D1     		bne	.L73
 1127              	.L68:
 649:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 650:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 651:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 652:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 653:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 654:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 1128              		.loc 1 654 25
 1129 04bc 7B68     		ldr	r3, [r7, #4]
 1130 04be 1B68     		ldr	r3, [r3]
 1131              		.loc 1 654 43
 1132 04c0 03F00403 		and	r3, r3, #4
 1133              		.loc 1 654 5
 1134 04c4 002B     		cmp	r3, #0
ARM GAS  /tmp/ccDJQnZC.s 			page 33


 1135 04c6 00F08680 		beq	.L74
 655:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 656:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the parameters */
 657:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 658:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 659:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 660:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     PWR->CR1 |= PWR_CR1_DBP;
 1136              		.loc 1 660 14
 1137 04ca 134B     		ldr	r3, .L98+4
 1138 04cc 1B68     		ldr	r3, [r3]
 1139 04ce 124A     		ldr	r2, .L98+4
 1140 04d0 43F48073 		orr	r3, r3, #256
 1141 04d4 1360     		str	r3, [r2]
 661:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 662:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Wait for Backup domain Write protection disable */
 663:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1142              		.loc 1 663 17
 1143 04d6 FFF7FEFF 		bl	HAL_GetTick
 1144 04da F861     		str	r0, [r7, #28]
 664:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 1145              		.loc 1 665 10
 1146 04dc 08E0     		b	.L75
 1147              	.L76:
 666:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 667:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 1148              		.loc 1 667 11
 1149 04de FFF7FEFF 		bl	HAL_GetTick
 1150 04e2 0246     		mov	r2, r0
 1151              		.loc 1 667 25
 1152 04e4 FB69     		ldr	r3, [r7, #28]
 1153 04e6 D31A     		subs	r3, r2, r3
 1154              		.loc 1 667 9
 1155 04e8 642B     		cmp	r3, #100
 1156 04ea 01D9     		bls	.L75
 668:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 669:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1157              		.loc 1 669 16
 1158 04ec 0323     		movs	r3, #3
 1159 04ee 35E1     		b	.L20
 1160              	.L75:
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1161              		.loc 1 665 15
 1162 04f0 094B     		ldr	r3, .L98+4
 1163 04f2 1B68     		ldr	r3, [r3]
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1164              		.loc 1 665 21
 1165 04f4 03F48073 		and	r3, r3, #256
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 1166              		.loc 1 665 10
 1167 04f8 002B     		cmp	r3, #0
 1168 04fa F0D0     		beq	.L76
 670:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 671:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 672:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 673:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 674:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
ARM GAS  /tmp/ccDJQnZC.s 			page 34


 1169              		.loc 1 674 5
 1170 04fc 7B68     		ldr	r3, [r7, #4]
 1171 04fe 9B68     		ldr	r3, [r3, #8]
 1172 0500 012B     		cmp	r3, #1
 1173 0502 0BD1     		bne	.L77
 1174              		.loc 1 674 5 is_stmt 0 discriminator 1
 1175 0504 034B     		ldr	r3, .L98
 1176 0506 1B6F     		ldr	r3, [r3, #112]
 1177 0508 024A     		ldr	r2, .L98
 1178 050a 43F00103 		orr	r3, r3, #1
 1179 050e 1367     		str	r3, [r2, #112]
 1180 0510 32E0     		b	.L78
 1181              	.L99:
 1182 0512 00BF     		.align	2
 1183              	.L98:
 1184 0514 00440258 		.word	1476543488
 1185 0518 00480258 		.word	1476544512
 1186              	.L77:
 1187              		.loc 1 674 5 discriminator 2
 1188 051c 7B68     		ldr	r3, [r7, #4]
 1189 051e 9B68     		ldr	r3, [r3, #8]
 1190 0520 002B     		cmp	r3, #0
 1191 0522 0CD1     		bne	.L79
 1192              		.loc 1 674 5 discriminator 3
 1193 0524 8F4B     		ldr	r3, .L100
 1194 0526 1B6F     		ldr	r3, [r3, #112]
 1195 0528 8E4A     		ldr	r2, .L100
 1196 052a 23F00103 		bic	r3, r3, #1
 1197 052e 1367     		str	r3, [r2, #112]
 1198 0530 8C4B     		ldr	r3, .L100
 1199 0532 1B6F     		ldr	r3, [r3, #112]
 1200 0534 8B4A     		ldr	r2, .L100
 1201 0536 23F00403 		bic	r3, r3, #4
 1202 053a 1367     		str	r3, [r2, #112]
 1203 053c 1CE0     		b	.L78
 1204              	.L79:
 1205              		.loc 1 674 5 discriminator 4
 1206 053e 7B68     		ldr	r3, [r7, #4]
 1207 0540 9B68     		ldr	r3, [r3, #8]
 1208 0542 052B     		cmp	r3, #5
 1209 0544 0CD1     		bne	.L80
 1210              		.loc 1 674 5 discriminator 5
 1211 0546 874B     		ldr	r3, .L100
 1212 0548 1B6F     		ldr	r3, [r3, #112]
 1213 054a 864A     		ldr	r2, .L100
 1214 054c 43F00403 		orr	r3, r3, #4
 1215 0550 1367     		str	r3, [r2, #112]
 1216 0552 844B     		ldr	r3, .L100
 1217 0554 1B6F     		ldr	r3, [r3, #112]
 1218 0556 834A     		ldr	r2, .L100
 1219 0558 43F00103 		orr	r3, r3, #1
 1220 055c 1367     		str	r3, [r2, #112]
 1221 055e 0BE0     		b	.L78
 1222              	.L80:
 1223              		.loc 1 674 5 discriminator 6
 1224 0560 804B     		ldr	r3, .L100
 1225 0562 1B6F     		ldr	r3, [r3, #112]
ARM GAS  /tmp/ccDJQnZC.s 			page 35


 1226 0564 7F4A     		ldr	r2, .L100
 1227 0566 23F00103 		bic	r3, r3, #1
 1228 056a 1367     		str	r3, [r2, #112]
 1229 056c 7D4B     		ldr	r3, .L100
 1230 056e 1B6F     		ldr	r3, [r3, #112]
 1231 0570 7C4A     		ldr	r2, .L100
 1232 0572 23F00403 		bic	r3, r3, #4
 1233 0576 1367     		str	r3, [r2, #112]
 1234              	.L78:
 675:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check the LSE State */
 676:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 1235              		.loc 1 676 26 is_stmt 1
 1236 0578 7B68     		ldr	r3, [r7, #4]
 1237 057a 9B68     		ldr	r3, [r3, #8]
 1238              		.loc 1 676 7
 1239 057c 002B     		cmp	r3, #0
 1240 057e 15D0     		beq	.L81
 677:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 678:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 679:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1241              		.loc 1 679 19
 1242 0580 FFF7FEFF 		bl	HAL_GetTick
 1243 0584 F861     		str	r0, [r7, #28]
 680:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 681:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 1244              		.loc 1 682 12
 1245 0586 0AE0     		b	.L82
 1246              	.L83:
 683:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 684:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1247              		.loc 1 684 13
 1248 0588 FFF7FEFF 		bl	HAL_GetTick
 1249 058c 0246     		mov	r2, r0
 1250              		.loc 1 684 27
 1251 058e FB69     		ldr	r3, [r7, #28]
 1252 0590 D31A     		subs	r3, r2, r3
 1253              		.loc 1 684 11
 1254 0592 41F28832 		movw	r2, #5000
 1255 0596 9342     		cmp	r3, r2
 1256 0598 01D9     		bls	.L82
 685:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 686:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1257              		.loc 1 686 18
 1258 059a 0323     		movs	r3, #3
 1259 059c DEE0     		b	.L20
 1260              	.L82:
 682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1261              		.loc 1 682 13
 1262 059e 714B     		ldr	r3, .L100
 1263 05a0 1B6F     		ldr	r3, [r3, #112]
 1264 05a2 03F00203 		and	r3, r3, #2
 682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1265              		.loc 1 682 12
 1266 05a6 002B     		cmp	r3, #0
 1267 05a8 EED0     		beq	.L83
 1268 05aa 14E0     		b	.L74
ARM GAS  /tmp/ccDJQnZC.s 			page 36


 1269              	.L81:
 687:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 688:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 689:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 690:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 691:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 692:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 693:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1270              		.loc 1 693 19
 1271 05ac FFF7FEFF 		bl	HAL_GetTick
 1272 05b0 F861     		str	r0, [r7, #28]
 694:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 695:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Wait till LSE is ready */
 696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 1273              		.loc 1 696 12
 1274 05b2 0AE0     		b	.L84
 1275              	.L85:
 697:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 698:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1276              		.loc 1 698 13
 1277 05b4 FFF7FEFF 		bl	HAL_GetTick
 1278 05b8 0246     		mov	r2, r0
 1279              		.loc 1 698 27
 1280 05ba FB69     		ldr	r3, [r7, #28]
 1281 05bc D31A     		subs	r3, r2, r3
 1282              		.loc 1 698 11
 1283 05be 41F28832 		movw	r2, #5000
 1284 05c2 9342     		cmp	r3, r2
 1285 05c4 01D9     		bls	.L84
 699:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 700:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1286              		.loc 1 700 18
 1287 05c6 0323     		movs	r3, #3
 1288 05c8 C8E0     		b	.L20
 1289              	.L84:
 696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1290              		.loc 1 696 13
 1291 05ca 664B     		ldr	r3, .L100
 1292 05cc 1B6F     		ldr	r3, [r3, #112]
 1293 05ce 03F00203 		and	r3, r3, #2
 696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 1294              		.loc 1 696 12
 1295 05d2 002B     		cmp	r3, #0
 1296 05d4 EED1     		bne	.L85
 1297              	.L74:
 701:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 702:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 703:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 704:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 705:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 706:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 707:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 708:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1298              		.loc 1 708 30
 1299 05d6 7B68     		ldr	r3, [r7, #4]
 1300 05d8 5B6A     		ldr	r3, [r3, #36]
 1301              		.loc 1 708 6
ARM GAS  /tmp/ccDJQnZC.s 			page 37


 1302 05da 002B     		cmp	r3, #0
 1303 05dc 00F0BD80 		beq	.L86
 709:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 710:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 711:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 1304              		.loc 1 711 8
 1305 05e0 604B     		ldr	r3, .L100
 1306 05e2 1B69     		ldr	r3, [r3, #16]
 1307 05e4 03F03803 		and	r3, r3, #56
 1308              		.loc 1 711 7
 1309 05e8 182B     		cmp	r3, #24
 1310 05ea 00F0B480 		beq	.L87
 712:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 713:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1311              		.loc 1 713 33
 1312 05ee 7B68     		ldr	r3, [r7, #4]
 1313 05f0 5B6A     		ldr	r3, [r3, #36]
 1314              		.loc 1 713 9
 1315 05f2 022B     		cmp	r3, #2
 1316 05f4 40F09580 		bne	.L88
 714:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 715:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the parameters */
 716:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 717:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 718:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 719:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 720:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 721:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 722:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
 723:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 724:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 725:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1317              		.loc 1 725 9
 1318 05f8 5A4B     		ldr	r3, .L100
 1319 05fa 1B68     		ldr	r3, [r3]
 1320 05fc 594A     		ldr	r2, .L100
 1321 05fe 23F08073 		bic	r3, r3, #16777216
 1322 0602 1360     		str	r3, [r2]
 726:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 727:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 728:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1323              		.loc 1 728 21
 1324 0604 FFF7FEFF 		bl	HAL_GetTick
 1325 0608 F861     		str	r0, [r7, #28]
 729:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 730:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 1326              		.loc 1 731 14
 1327 060a 08E0     		b	.L89
 1328              	.L90:
 732:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 733:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1329              		.loc 1 733 15
 1330 060c FFF7FEFF 		bl	HAL_GetTick
 1331 0610 0246     		mov	r2, r0
 1332              		.loc 1 733 29
 1333 0612 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccDJQnZC.s 			page 38


 1334 0614 D31A     		subs	r3, r2, r3
 1335              		.loc 1 733 13
 1336 0616 022B     		cmp	r3, #2
 1337 0618 01D9     		bls	.L89
 734:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 735:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1338              		.loc 1 735 20
 1339 061a 0323     		movs	r3, #3
 1340 061c 9EE0     		b	.L20
 1341              	.L89:
 731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1342              		.loc 1 731 15
 1343 061e 514B     		ldr	r3, .L100
 1344 0620 1B68     		ldr	r3, [r3]
 1345 0622 03F00073 		and	r3, r3, #33554432
 731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1346              		.loc 1 731 14
 1347 0626 002B     		cmp	r3, #0
 1348 0628 F0D1     		bne	.L90
 736:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 737:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 738:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 739:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 740:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1349              		.loc 1 740 9
 1350 062a 4E4B     		ldr	r3, .L100
 1351 062c 9A6A     		ldr	r2, [r3, #40]
 1352 062e 4E4B     		ldr	r3, .L100+4
 1353 0630 1340     		ands	r3, r3, r2
 1354 0632 7A68     		ldr	r2, [r7, #4]
 1355 0634 916A     		ldr	r1, [r2, #40]
 1356 0636 7A68     		ldr	r2, [r7, #4]
 1357 0638 D26A     		ldr	r2, [r2, #44]
 1358 063a 1201     		lsls	r2, r2, #4
 1359 063c 0A43     		orrs	r2, r2, r1
 1360 063e 4949     		ldr	r1, .L100
 1361 0640 1343     		orrs	r3, r3, r2
 1362 0642 8B62     		str	r3, [r1, #40]
 1363 0644 7B68     		ldr	r3, [r7, #4]
 1364 0646 1B6B     		ldr	r3, [r3, #48]
 1365 0648 013B     		subs	r3, r3, #1
 1366 064a C3F30802 		ubfx	r2, r3, #0, #9
 1367 064e 7B68     		ldr	r3, [r7, #4]
 1368 0650 5B6B     		ldr	r3, [r3, #52]
 1369 0652 013B     		subs	r3, r3, #1
 1370 0654 5B02     		lsls	r3, r3, #9
 1371 0656 9BB2     		uxth	r3, r3
 1372 0658 1A43     		orrs	r2, r2, r3
 1373 065a 7B68     		ldr	r3, [r7, #4]
 1374 065c 9B6B     		ldr	r3, [r3, #56]
 1375 065e 013B     		subs	r3, r3, #1
 1376 0660 1B04     		lsls	r3, r3, #16
 1377 0662 03F4FE03 		and	r3, r3, #8323072
 1378 0666 1A43     		orrs	r2, r2, r3
 1379 0668 7B68     		ldr	r3, [r7, #4]
 1380 066a DB6B     		ldr	r3, [r3, #60]
 1381 066c 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccDJQnZC.s 			page 39


 1382 066e 1B06     		lsls	r3, r3, #24
 1383 0670 03F0FE43 		and	r3, r3, #2130706432
 1384 0674 3B49     		ldr	r1, .L100
 1385 0676 1343     		orrs	r3, r3, r2
 1386 0678 0B63     		str	r3, [r1, #48]
 741:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 742:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 743:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 744:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 745:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 746:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 747:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Disable PLLFRACN . */
 748:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_DISABLE();
 1387              		.loc 1 748 10
 1388 067a 3A4B     		ldr	r3, .L100
 1389 067c DB6A     		ldr	r3, [r3, #44]
 1390 067e 394A     		ldr	r2, .L100
 1391 0680 23F00103 		bic	r3, r3, #1
 1392 0684 D362     		str	r3, [r2, #44]
 749:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 750:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          /* Configure PLL  PLL1FRACN */
 751:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 1393              		.loc 1 751 10
 1394 0686 374B     		ldr	r3, .L100
 1395 0688 5A6B     		ldr	r2, [r3, #52]
 1396 068a 384B     		ldr	r3, .L100+8
 1397 068c 1340     		ands	r3, r3, r2
 1398 068e 7A68     		ldr	r2, [r7, #4]
 1399 0690 926C     		ldr	r2, [r2, #72]
 1400 0692 D200     		lsls	r2, r2, #3
 1401 0694 3349     		ldr	r1, .L100
 1402 0696 1343     		orrs	r3, r3, r2
 1403 0698 4B63     		str	r3, [r1, #52]
 752:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 753:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 input reference frequency range: VCI */
 754:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 1404              		.loc 1 754 9
 1405 069a 324B     		ldr	r3, .L100
 1406 069c DB6A     		ldr	r3, [r3, #44]
 1407 069e 23F00C02 		bic	r2, r3, #12
 1408 06a2 7B68     		ldr	r3, [r7, #4]
 1409 06a4 1B6C     		ldr	r3, [r3, #64]
 1410 06a6 2F49     		ldr	r1, .L100
 1411 06a8 1343     		orrs	r3, r3, r2
 1412 06aa CB62     		str	r3, [r1, #44]
 755:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 756:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Select PLL1 output frequency range : VCO */
 757:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 1413              		.loc 1 757 9
 1414 06ac 2D4B     		ldr	r3, .L100
 1415 06ae DB6A     		ldr	r3, [r3, #44]
 1416 06b0 23F00202 		bic	r2, r3, #2
 1417 06b4 7B68     		ldr	r3, [r7, #4]
 1418 06b6 5B6C     		ldr	r3, [r3, #68]
 1419 06b8 2A49     		ldr	r1, .L100
 1420 06ba 1343     		orrs	r3, r3, r2
 1421 06bc CB62     		str	r3, [r1, #44]
ARM GAS  /tmp/ccDJQnZC.s 			page 40


 758:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 759:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 760:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 1422              		.loc 1 760 10
 1423 06be 294B     		ldr	r3, .L100
 1424 06c0 DB6A     		ldr	r3, [r3, #44]
 1425 06c2 284A     		ldr	r2, .L100
 1426 06c4 43F48033 		orr	r3, r3, #65536
 1427 06c8 D362     		str	r3, [r2, #44]
 761:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 762:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1Q Clock output. */
 763:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 1428              		.loc 1 763 10
 1429 06ca 264B     		ldr	r3, .L100
 1430 06cc DB6A     		ldr	r3, [r3, #44]
 1431 06ce 254A     		ldr	r2, .L100
 1432 06d0 43F40033 		orr	r3, r3, #131072
 1433 06d4 D362     		str	r3, [r2, #44]
 764:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 765:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1R  Clock output. */
 766:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 1434              		.loc 1 766 10
 1435 06d6 234B     		ldr	r3, .L100
 1436 06d8 DB6A     		ldr	r3, [r3, #44]
 1437 06da 224A     		ldr	r2, .L100
 1438 06dc 43F48023 		orr	r3, r3, #262144
 1439 06e0 D362     		str	r3, [r2, #44]
 767:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable PLL1FRACN . */
 769:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****          __HAL_RCC_PLLFRACN_ENABLE();
 1440              		.loc 1 769 10
 1441 06e2 204B     		ldr	r3, .L100
 1442 06e4 DB6A     		ldr	r3, [r3, #44]
 1443 06e6 1F4A     		ldr	r2, .L100
 1444 06e8 43F00103 		orr	r3, r3, #1
 1445 06ec D362     		str	r3, [r2, #44]
 770:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 771:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Enable the main PLL. */
 772:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1446              		.loc 1 772 9
 1447 06ee 1D4B     		ldr	r3, .L100
 1448 06f0 1B68     		ldr	r3, [r3]
 1449 06f2 1C4A     		ldr	r2, .L100
 1450 06f4 43F08073 		orr	r3, r3, #16777216
 1451 06f8 1360     		str	r3, [r2]
 773:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 774:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 775:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1452              		.loc 1 775 21
 1453 06fa FFF7FEFF 		bl	HAL_GetTick
 1454 06fe F861     		str	r0, [r7, #28]
 776:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 777:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 1455              		.loc 1 778 14
 1456 0700 08E0     		b	.L91
 1457              	.L92:
ARM GAS  /tmp/ccDJQnZC.s 			page 41


 779:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 780:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1458              		.loc 1 780 15
 1459 0702 FFF7FEFF 		bl	HAL_GetTick
 1460 0706 0246     		mov	r2, r0
 1461              		.loc 1 780 29
 1462 0708 FB69     		ldr	r3, [r7, #28]
 1463 070a D31A     		subs	r3, r2, r3
 1464              		.loc 1 780 13
 1465 070c 022B     		cmp	r3, #2
 1466 070e 01D9     		bls	.L91
 781:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 782:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1467              		.loc 1 782 20
 1468 0710 0323     		movs	r3, #3
 1469 0712 23E0     		b	.L20
 1470              	.L91:
 778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1471              		.loc 1 778 15
 1472 0714 134B     		ldr	r3, .L100
 1473 0716 1B68     		ldr	r3, [r3]
 1474 0718 03F00073 		and	r3, r3, #33554432
 778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1475              		.loc 1 778 14
 1476 071c 002B     		cmp	r3, #0
 1477 071e F0D0     		beq	.L92
 1478 0720 1BE0     		b	.L86
 1479              	.L88:
 783:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 784:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 785:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 786:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 787:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 788:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Disable the main PLL. */
 789:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1480              		.loc 1 789 9
 1481 0722 104B     		ldr	r3, .L100
 1482 0724 1B68     		ldr	r3, [r3]
 1483 0726 0F4A     		ldr	r2, .L100
 1484 0728 23F08073 		bic	r3, r3, #16777216
 1485 072c 1360     		str	r3, [r2]
 790:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 791:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Get Start Tick*/
 792:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1486              		.loc 1 792 21
 1487 072e FFF7FEFF 		bl	HAL_GetTick
 1488 0732 F861     		str	r0, [r7, #28]
 793:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 794:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Wait till PLL is ready */
 795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 1489              		.loc 1 795 14
 1490 0734 08E0     		b	.L93
 1491              	.L94:
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 797:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1492              		.loc 1 797 15
 1493 0736 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccDJQnZC.s 			page 42


 1494 073a 0246     		mov	r2, r0
 1495              		.loc 1 797 29
 1496 073c FB69     		ldr	r3, [r7, #28]
 1497 073e D31A     		subs	r3, r2, r3
 1498              		.loc 1 797 13
 1499 0740 022B     		cmp	r3, #2
 1500 0742 01D9     		bls	.L93
 798:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 799:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1501              		.loc 1 799 20
 1502 0744 0323     		movs	r3, #3
 1503 0746 09E0     		b	.L20
 1504              	.L93:
 795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1505              		.loc 1 795 15
 1506 0748 064B     		ldr	r3, .L100
 1507 074a 1B68     		ldr	r3, [r3]
 1508 074c 03F00073 		and	r3, r3, #33554432
 795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1509              		.loc 1 795 14
 1510 0750 002B     		cmp	r3, #0
 1511 0752 F0D1     		bne	.L94
 1512 0754 01E0     		b	.L86
 1513              	.L87:
 800:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 801:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 802:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 803:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 804:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
 805:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 806:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 1514              		.loc 1 806 14
 1515 0756 0123     		movs	r3, #1
 1516 0758 00E0     		b	.L20
 1517              	.L86:
 807:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 808:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 809:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return HAL_OK;
 1518              		.loc 1 809 10
 1519 075a 0023     		movs	r3, #0
 1520              	.L20:
 810:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 1521              		.loc 1 810 1
 1522 075c 1846     		mov	r0, r3
 1523 075e 2837     		adds	r7, r7, #40
 1524              		.cfi_def_cfa_offset 8
 1525 0760 BD46     		mov	sp, r7
 1526              		.cfi_def_cfa_register 13
 1527              		@ sp needed
 1528 0762 80BD     		pop	{r7, pc}
 1529              	.L101:
 1530              		.align	2
 1531              	.L100:
 1532 0764 00440258 		.word	1476543488
 1533 0768 0CFCFFFF 		.word	-1012
 1534 076c 0700FFFF 		.word	-65529
 1535              		.cfi_endproc
ARM GAS  /tmp/ccDJQnZC.s 			page 43


 1536              	.LFE135:
 1538              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1539              		.align	1
 1540              		.global	HAL_RCC_ClockConfig
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1544              		.fpu fpv5-d16
 1546              	HAL_RCC_ClockConfig:
 1547              	.LFB136:
 811:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 812:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
 813:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 814:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 815:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_OscInitTypeDef structure that
 816:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 817:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  FLatency: FLASH Latency, this parameter depend on device selected
 818:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 819:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 820:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated by HAL_InitTick() function called within this function
 821:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 822:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 823:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 824:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 825:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 826:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
 827:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 828:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 829:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 831:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         You can use HAL_RCC_GetClockConfig() function to know which clock is
 832:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         currently used as system clock source.
 833:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 834:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed freq
 835:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 836:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
 838:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 839:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 1548              		.loc 1 839 1
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 16
 1551              		@ frame_needed = 1, uses_anonymous_args = 0
 1552 0000 80B5     		push	{r7, lr}
 1553              		.cfi_def_cfa_offset 8
 1554              		.cfi_offset 7, -8
 1555              		.cfi_offset 14, -4
 1556 0002 84B0     		sub	sp, sp, #16
 1557              		.cfi_def_cfa_offset 24
 1558 0004 00AF     		add	r7, sp, #0
 1559              		.cfi_def_cfa_register 7
 1560 0006 7860     		str	r0, [r7, #4]
 1561 0008 3960     		str	r1, [r7]
 840:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   HAL_StatusTypeDef halstatus;
 841:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t tickstart;
 842:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 843:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Check Null pointer */
ARM GAS  /tmp/ccDJQnZC.s 			page 44


 844:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1562              		.loc 1 844 5
 1563 000a 7B68     		ldr	r3, [r7, #4]
 1564 000c 002B     		cmp	r3, #0
 1565 000e 01D1     		bne	.L103
 845:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 846:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     return HAL_ERROR;
 1566              		.loc 1 846 12
 1567 0010 0123     		movs	r3, #1
 1568 0012 8BE1     		b	.L104
 1569              	.L103:
 847:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 848:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 849:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
 850:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 851:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 852:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 853:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 854:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 855:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 856:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 857:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the CPU frequency */
 858:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1570              		.loc 1 858 17
 1571 0014 8A4B     		ldr	r3, .L124
 1572 0016 1B68     		ldr	r3, [r3]
 1573 0018 03F00F03 		and	r3, r3, #15
 1574              		.loc 1 858 5
 1575 001c 3A68     		ldr	r2, [r7]
 1576 001e 9A42     		cmp	r2, r3
 1577 0020 10D9     		bls	.L105
 859:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 860:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 861:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1578              		.loc 1 861 5
 1579 0022 874B     		ldr	r3, .L124
 1580 0024 1B68     		ldr	r3, [r3]
 1581 0026 23F00F02 		bic	r2, r3, #15
 1582 002a 8549     		ldr	r1, .L124
 1583 002c 3B68     		ldr	r3, [r7]
 1584 002e 1343     		orrs	r3, r3, r2
 1585 0030 0B60     		str	r3, [r1]
 862:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 863:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 864:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 865:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1586              		.loc 1 865 8
 1587 0032 834B     		ldr	r3, .L124
 1588 0034 1B68     		ldr	r3, [r3]
 1589 0036 03F00F03 		and	r3, r3, #15
 1590              		.loc 1 865 7
 1591 003a 3A68     		ldr	r2, [r7]
 1592 003c 9A42     		cmp	r2, r3
 1593 003e 01D0     		beq	.L105
 866:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 867:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 1594              		.loc 1 867 14
ARM GAS  /tmp/ccDJQnZC.s 			page 45


 1595 0040 0123     		movs	r3, #1
 1596 0042 73E1     		b	.L104
 1597              	.L105:
 868:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 869:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 870:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 871:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 872:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Increasing the BUS frequency divider */
 873:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1 Configuration ---------------------------*/
 874:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 1598              		.loc 1 874 25
 1599 0044 7B68     		ldr	r3, [r7, #4]
 1600 0046 1B68     		ldr	r3, [r3]
 1601              		.loc 1 874 38
 1602 0048 03F00403 		and	r3, r3, #4
 1603              		.loc 1 874 5
 1604 004c 002B     		cmp	r3, #0
 1605 004e 10D0     		beq	.L106
 875:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 876:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 1606              		.loc 1 876 26
 1607 0050 7B68     		ldr	r3, [r7, #4]
 1608 0052 1A69     		ldr	r2, [r3, #16]
 1609              		.loc 1 876 50
 1610 0054 7B4B     		ldr	r3, .L124+4
 1611 0056 9B69     		ldr	r3, [r3, #24]
 1612              		.loc 1 876 59
 1613 0058 03F07003 		and	r3, r3, #112
 1614              		.loc 1 876 7
 1615 005c 9A42     		cmp	r2, r3
 1616 005e 08D9     		bls	.L106
 877:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 878:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
 879:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 1617              		.loc 1 879 7
 1618 0060 784B     		ldr	r3, .L124+4
 1619 0062 9B69     		ldr	r3, [r3, #24]
 1620 0064 23F07002 		bic	r2, r3, #112
 1621 0068 7B68     		ldr	r3, [r7, #4]
 1622 006a 1B69     		ldr	r3, [r3, #16]
 1623 006c 7549     		ldr	r1, .L124+4
 1624 006e 1343     		orrs	r3, r3, r2
 1625 0070 8B61     		str	r3, [r1, #24]
 1626              	.L106:
 880:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 881:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 882:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 883:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 884:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1627              		.loc 1 884 25
 1628 0072 7B68     		ldr	r3, [r7, #4]
 1629 0074 1B68     		ldr	r3, [r3]
 1630              		.loc 1 884 38
 1631 0076 03F00803 		and	r3, r3, #8
 1632              		.loc 1 884 5
 1633 007a 002B     		cmp	r3, #0
 1634 007c 10D0     		beq	.L107
ARM GAS  /tmp/ccDJQnZC.s 			page 46


 885:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 886:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 1635              		.loc 1 886 26
 1636 007e 7B68     		ldr	r3, [r7, #4]
 1637 0080 5A69     		ldr	r2, [r3, #20]
 1638              		.loc 1 886 50
 1639 0082 704B     		ldr	r3, .L124+4
 1640 0084 DB69     		ldr	r3, [r3, #28]
 1641              		.loc 1 886 59
 1642 0086 03F07003 		and	r3, r3, #112
 1643              		.loc 1 886 7
 1644 008a 9A42     		cmp	r2, r3
 1645 008c 08D9     		bls	.L107
 887:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 888:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
 889:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 1646              		.loc 1 889 7
 1647 008e 6D4B     		ldr	r3, .L124+4
 1648 0090 DB69     		ldr	r3, [r3, #28]
 1649 0092 23F07002 		bic	r2, r3, #112
 1650 0096 7B68     		ldr	r3, [r7, #4]
 1651 0098 5B69     		ldr	r3, [r3, #20]
 1652 009a 6A49     		ldr	r1, .L124+4
 1653 009c 1343     		orrs	r3, r3, r2
 1654 009e CB61     		str	r3, [r1, #28]
 1655              	.L107:
 890:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 891:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 892:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 893:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 894:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1656              		.loc 1 894 25
 1657 00a0 7B68     		ldr	r3, [r7, #4]
 1658 00a2 1B68     		ldr	r3, [r3]
 1659              		.loc 1 894 38
 1660 00a4 03F01003 		and	r3, r3, #16
 1661              		.loc 1 894 5
 1662 00a8 002B     		cmp	r3, #0
 1663 00aa 10D0     		beq	.L108
 895:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 896:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 1664              		.loc 1 896 26
 1665 00ac 7B68     		ldr	r3, [r7, #4]
 1666 00ae 9A69     		ldr	r2, [r3, #24]
 1667              		.loc 1 896 50
 1668 00b0 644B     		ldr	r3, .L124+4
 1669 00b2 DB69     		ldr	r3, [r3, #28]
 1670              		.loc 1 896 59
 1671 00b4 03F4E063 		and	r3, r3, #1792
 1672              		.loc 1 896 7
 1673 00b8 9A42     		cmp	r2, r3
 1674 00ba 08D9     		bls	.L108
 897:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 898:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
 899:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 1675              		.loc 1 899 7
 1676 00bc 614B     		ldr	r3, .L124+4
ARM GAS  /tmp/ccDJQnZC.s 			page 47


 1677 00be DB69     		ldr	r3, [r3, #28]
 1678 00c0 23F4E062 		bic	r2, r3, #1792
 1679 00c4 7B68     		ldr	r3, [r7, #4]
 1680 00c6 9B69     		ldr	r3, [r3, #24]
 1681 00c8 5E49     		ldr	r1, .L124+4
 1682 00ca 1343     		orrs	r3, r3, r2
 1683 00cc CB61     		str	r3, [r1, #28]
 1684              	.L108:
 900:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 901:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 902:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 903:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
 904:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 1685              		.loc 1 904 25
 1686 00ce 7B68     		ldr	r3, [r7, #4]
 1687 00d0 1B68     		ldr	r3, [r3]
 1688              		.loc 1 904 38
 1689 00d2 03F02003 		and	r3, r3, #32
 1690              		.loc 1 904 5
 1691 00d6 002B     		cmp	r3, #0
 1692 00d8 10D0     		beq	.L109
 905:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 906:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 1693              		.loc 1 906 26
 1694 00da 7B68     		ldr	r3, [r7, #4]
 1695 00dc DA69     		ldr	r2, [r3, #28]
 1696              		.loc 1 906 50
 1697 00de 594B     		ldr	r3, .L124+4
 1698 00e0 1B6A     		ldr	r3, [r3, #32]
 1699              		.loc 1 906 59
 1700 00e2 03F07003 		and	r3, r3, #112
 1701              		.loc 1 906 7
 1702 00e6 9A42     		cmp	r2, r3
 1703 00e8 08D9     		bls	.L109
 907:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 908:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
 909:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 1704              		.loc 1 909 7
 1705 00ea 564B     		ldr	r3, .L124+4
 1706 00ec 1B6A     		ldr	r3, [r3, #32]
 1707 00ee 23F07002 		bic	r2, r3, #112
 1708 00f2 7B68     		ldr	r3, [r7, #4]
 1709 00f4 DB69     		ldr	r3, [r3, #28]
 1710 00f6 5349     		ldr	r1, .L124+4
 1711 00f8 1343     		orrs	r3, r3, r2
 1712 00fa 0B62     		str	r3, [r1, #32]
 1713              	.L109:
 910:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 911:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 913:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
 914:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1714              		.loc 1 914 25
 1715 00fc 7B68     		ldr	r3, [r7, #4]
 1716 00fe 1B68     		ldr	r3, [r3]
 1717              		.loc 1 914 38
 1718 0100 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccDJQnZC.s 			page 48


 1719              		.loc 1 914 5
 1720 0104 002B     		cmp	r3, #0
 1721 0106 10D0     		beq	.L110
 915:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 916:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 1722              		.loc 1 916 26
 1723 0108 7B68     		ldr	r3, [r7, #4]
 1724 010a DA68     		ldr	r2, [r3, #12]
 1725              		.loc 1 916 49
 1726 010c 4D4B     		ldr	r3, .L124+4
 1727 010e 9B69     		ldr	r3, [r3, #24]
 1728              		.loc 1 916 58
 1729 0110 03F00F03 		and	r3, r3, #15
 1730              		.loc 1 916 7
 1731 0114 9A42     		cmp	r2, r3
 1732 0116 08D9     		bls	.L110
 917:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 918:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
 919:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 920:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1733              		.loc 1 920 7
 1734 0118 4A4B     		ldr	r3, .L124+4
 1735 011a 9B69     		ldr	r3, [r3, #24]
 1736 011c 23F00F02 		bic	r2, r3, #15
 1737 0120 7B68     		ldr	r3, [r7, #4]
 1738 0122 DB68     		ldr	r3, [r3, #12]
 1739 0124 4749     		ldr	r1, .L124+4
 1740 0126 1343     		orrs	r3, r3, r2
 1741 0128 8B61     		str	r3, [r1, #24]
 1742              	.L110:
 921:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 922:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 923:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 924:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /*------------------------- SYSCLK Configuration -------------------------*/
 925:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1743              		.loc 1 925 27
 1744 012a 7B68     		ldr	r3, [r7, #4]
 1745 012c 1B68     		ldr	r3, [r3]
 1746              		.loc 1 925 40
 1747 012e 03F00103 		and	r3, r3, #1
 1748              		.loc 1 925 7
 1749 0132 002B     		cmp	r3, #0
 1750 0134 55D0     		beq	.L111
 926:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 927:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
 928:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 929:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 1751              		.loc 1 929 7
 1752 0136 434B     		ldr	r3, .L124+4
 1753 0138 9B69     		ldr	r3, [r3, #24]
 1754 013a 23F47062 		bic	r2, r3, #3840
 1755 013e 7B68     		ldr	r3, [r7, #4]
 1756 0140 9B68     		ldr	r3, [r3, #8]
 1757 0142 4049     		ldr	r1, .L124+4
 1758 0144 1343     		orrs	r3, r3, r2
 1759 0146 8B61     		str	r3, [r1, #24]
 930:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
ARM GAS  /tmp/ccDJQnZC.s 			page 49


 931:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1760              		.loc 1 931 27
 1761 0148 7B68     		ldr	r3, [r7, #4]
 1762 014a 5B68     		ldr	r3, [r3, #4]
 1763              		.loc 1 931 9
 1764 014c 022B     		cmp	r3, #2
 1765 014e 07D1     		bne	.L112
 932:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 933:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSE ready flag */
 934:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 1766              		.loc 1 934 12
 1767 0150 3C4B     		ldr	r3, .L124+4
 1768 0152 1B68     		ldr	r3, [r3]
 1769 0154 03F40033 		and	r3, r3, #131072
 1770              		.loc 1 934 11
 1771 0158 002B     		cmp	r3, #0
 1772 015a 21D1     		bne	.L113
 935:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 936:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1773              		.loc 1 936 18
 1774 015c 0123     		movs	r3, #1
 1775 015e E5E0     		b	.L104
 1776              	.L112:
 937:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 938:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 939:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* PLL is selected as System Clock Source */
 940:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1777              		.loc 1 940 32
 1778 0160 7B68     		ldr	r3, [r7, #4]
 1779 0162 5B68     		ldr	r3, [r3, #4]
 1780              		.loc 1 940 14
 1781 0164 032B     		cmp	r3, #3
 1782 0166 07D1     		bne	.L114
 941:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 942:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
 943:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 1783              		.loc 1 943 12
 1784 0168 364B     		ldr	r3, .L124+4
 1785 016a 1B68     		ldr	r3, [r3]
 1786 016c 03F00073 		and	r3, r3, #33554432
 1787              		.loc 1 943 11
 1788 0170 002B     		cmp	r3, #0
 1789 0172 15D1     		bne	.L113
 944:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 945:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1790              		.loc 1 945 18
 1791 0174 0123     		movs	r3, #1
 1792 0176 D9E0     		b	.L104
 1793              	.L114:
 946:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 947:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 948:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* CSI is selected as System Clock Source */
 949:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 1794              		.loc 1 949 32
 1795 0178 7B68     		ldr	r3, [r7, #4]
 1796 017a 5B68     		ldr	r3, [r3, #4]
 1797              		.loc 1 949 14
ARM GAS  /tmp/ccDJQnZC.s 			page 50


 1798 017c 012B     		cmp	r3, #1
 1799 017e 07D1     		bne	.L115
 950:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 951:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the PLL ready flag */
 952:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 1800              		.loc 1 952 12
 1801 0180 304B     		ldr	r3, .L124+4
 1802 0182 1B68     		ldr	r3, [r3]
 1803 0184 03F48073 		and	r3, r3, #256
 1804              		.loc 1 952 11
 1805 0188 002B     		cmp	r3, #0
 1806 018a 09D1     		bne	.L113
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 954:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1807              		.loc 1 954 18
 1808 018c 0123     		movs	r3, #1
 1809 018e CDE0     		b	.L104
 1810              	.L115:
 955:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 956:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 957:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 958:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
 959:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
 960:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         /* Check the HSI ready flag */
 961:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 1811              		.loc 1 961 12
 1812 0190 2C4B     		ldr	r3, .L124+4
 1813 0192 1B68     		ldr	r3, [r3]
 1814 0194 03F00403 		and	r3, r3, #4
 1815              		.loc 1 961 11
 1816 0198 002B     		cmp	r3, #0
 1817 019a 01D1     		bne	.L113
 962:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 963:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           return HAL_ERROR;
 1818              		.loc 1 963 18
 1819 019c 0123     		movs	r3, #1
 1820 019e C5E0     		b	.L104
 1821              	.L113:
 964:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 965:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 966:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1822              		.loc 1 966 7
 1823 01a0 284B     		ldr	r3, .L124+4
 1824 01a2 1B69     		ldr	r3, [r3, #16]
 1825 01a4 23F00702 		bic	r2, r3, #7
 1826 01a8 7B68     		ldr	r3, [r7, #4]
 1827 01aa 5B68     		ldr	r3, [r3, #4]
 1828 01ac 2549     		ldr	r1, .L124+4
 1829 01ae 1343     		orrs	r3, r3, r2
 1830 01b0 0B61     		str	r3, [r1, #16]
 967:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 968:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Get Start Tick*/
 969:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1831              		.loc 1 969 19
 1832 01b2 FFF7FEFF 		bl	HAL_GetTick
 1833 01b6 F860     		str	r0, [r7, #12]
 970:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 51


 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_P
 1834              		.loc 1 971 15
 1835 01b8 0AE0     		b	.L116
 1836              	.L117:
 972:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 973:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1837              		.loc 1 973 15
 1838 01ba FFF7FEFF 		bl	HAL_GetTick
 1839 01be 0246     		mov	r2, r0
 1840              		.loc 1 973 29
 1841 01c0 FB68     		ldr	r3, [r7, #12]
 1842 01c2 D31A     		subs	r3, r2, r3
 1843              		.loc 1 973 13
 1844 01c4 41F28832 		movw	r2, #5000
 1845 01c8 9342     		cmp	r3, r2
 1846 01ca 01D9     		bls	.L116
 974:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           {
 975:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1847              		.loc 1 975 20
 1848 01cc 0323     		movs	r3, #3
 1849 01ce ADE0     		b	.L104
 1850              	.L116:
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1851              		.loc 1 971 16
 1852 01d0 1C4B     		ldr	r3, .L124+4
 1853 01d2 1B69     		ldr	r3, [r3, #16]
 1854 01d4 03F03802 		and	r2, r3, #56
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1855              		.loc 1 971 68
 1856 01d8 7B68     		ldr	r3, [r7, #4]
 1857 01da 5B68     		ldr	r3, [r3, #4]
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1858              		.loc 1 971 83
 1859 01dc DB00     		lsls	r3, r3, #3
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
 1860              		.loc 1 971 15
 1861 01de 9A42     		cmp	r2, r3
 1862 01e0 EBD1     		bne	.L117
 1863              	.L111:
 976:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           }
 977:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 978:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 979:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 980:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 981:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Decreasing the BUS frequency divider */
 982:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /*-------------------------- HCLK Configuration --------------------------*/
 983:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1864              		.loc 1 983 25
 1865 01e2 7B68     		ldr	r3, [r7, #4]
 1866 01e4 1B68     		ldr	r3, [r3]
 1867              		.loc 1 983 38
 1868 01e6 03F00203 		and	r3, r3, #2
 1869              		.loc 1 983 5
 1870 01ea 002B     		cmp	r3, #0
 1871 01ec 10D0     		beq	.L118
 984:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 985:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
ARM GAS  /tmp/ccDJQnZC.s 			page 52


 1872              		.loc 1 985 26
 1873 01ee 7B68     		ldr	r3, [r7, #4]
 1874 01f0 DA68     		ldr	r2, [r3, #12]
 1875              		.loc 1 985 49
 1876 01f2 144B     		ldr	r3, .L124+4
 1877 01f4 9B69     		ldr	r3, [r3, #24]
 1878              		.loc 1 985 58
 1879 01f6 03F00F03 		and	r3, r3, #15
 1880              		.loc 1 985 7
 1881 01fa 9A42     		cmp	r2, r3
 1882 01fc 08D2     		bcs	.L118
 986:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
 987:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       /* Set the new HCLK clock divider */
 988:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 989:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1883              		.loc 1 989 7
 1884 01fe 114B     		ldr	r3, .L124+4
 1885 0200 9B69     		ldr	r3, [r3, #24]
 1886 0202 23F00F02 		bic	r2, r3, #15
 1887 0206 7B68     		ldr	r3, [r7, #4]
 1888 0208 DB68     		ldr	r3, [r3, #12]
 1889 020a 0E49     		ldr	r1, .L124+4
 1890 020c 1343     		orrs	r3, r3, r2
 1891 020e 8B61     		str	r3, [r1, #24]
 1892              	.L118:
 990:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 991:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 992:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 993:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 994:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1893              		.loc 1 994 17
 1894 0210 0B4B     		ldr	r3, .L124
 1895 0212 1B68     		ldr	r3, [r3]
 1896 0214 03F00F03 		and	r3, r3, #15
 1897              		.loc 1 994 5
 1898 0218 3A68     		ldr	r2, [r7]
 1899 021a 9A42     		cmp	r2, r3
 1900 021c 14D2     		bcs	.L119
 995:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
 996:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 997:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1901              		.loc 1 997 5
 1902 021e 084B     		ldr	r3, .L124
 1903 0220 1B68     		ldr	r3, [r3]
 1904 0222 23F00F02 		bic	r2, r3, #15
 1905 0226 0649     		ldr	r1, .L124
 1906 0228 3B68     		ldr	r3, [r7]
 1907 022a 1343     		orrs	r3, r3, r2
 1908 022c 0B60     		str	r3, [r1]
 998:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 999:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1000:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1001:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1909              		.loc 1 1001 8
 1910 022e 044B     		ldr	r3, .L124
 1911 0230 1B68     		ldr	r3, [r3]
 1912 0232 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccDJQnZC.s 			page 53


 1913              		.loc 1 1001 7
 1914 0236 3A68     		ldr	r2, [r7]
 1915 0238 9A42     		cmp	r2, r3
 1916 023a 05D0     		beq	.L119
1002:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1003:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       return HAL_ERROR;
 1917              		.loc 1 1003 14
 1918 023c 0123     		movs	r3, #1
 1919 023e 75E0     		b	.L104
 1920              	.L125:
 1921              		.align	2
 1922              	.L124:
 1923 0240 00200052 		.word	1375739904
 1924 0244 00440258 		.word	1476543488
 1925              	.L119:
1004:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1005:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1006:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1007:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D1PCLK1 Configuration ---------------------------*/
1008:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 1926              		.loc 1 1008 24
 1927 0248 7B68     		ldr	r3, [r7, #4]
 1928 024a 1B68     		ldr	r3, [r3]
 1929              		.loc 1 1008 37
 1930 024c 03F00403 		and	r3, r3, #4
 1931              		.loc 1 1008 4
 1932 0250 002B     		cmp	r3, #0
 1933 0252 10D0     		beq	.L120
1009:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1010:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 1934              		.loc 1 1010 25
 1935 0254 7B68     		ldr	r3, [r7, #4]
 1936 0256 1A69     		ldr	r2, [r3, #16]
 1937              		.loc 1 1010 49
 1938 0258 364B     		ldr	r3, .L126
 1939 025a 9B69     		ldr	r3, [r3, #24]
 1940              		.loc 1 1010 58
 1941 025c 03F07003 		and	r3, r3, #112
 1942              		.loc 1 1010 6
 1943 0260 9A42     		cmp	r2, r3
 1944 0262 08D2     		bcs	.L120
1011:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1012:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
1013:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 1945              		.loc 1 1013 6
 1946 0264 334B     		ldr	r3, .L126
 1947 0266 9B69     		ldr	r3, [r3, #24]
 1948 0268 23F07002 		bic	r2, r3, #112
 1949 026c 7B68     		ldr	r3, [r7, #4]
 1950 026e 1B69     		ldr	r3, [r3, #16]
 1951 0270 3049     		ldr	r1, .L126
 1952 0272 1343     		orrs	r3, r3, r2
 1953 0274 8B61     		str	r3, [r1, #24]
 1954              	.L120:
1014:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1015:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1016:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 54


1017:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1018:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1955              		.loc 1 1018 24
 1956 0276 7B68     		ldr	r3, [r7, #4]
 1957 0278 1B68     		ldr	r3, [r3]
 1958              		.loc 1 1018 37
 1959 027a 03F00803 		and	r3, r3, #8
 1960              		.loc 1 1018 4
 1961 027e 002B     		cmp	r3, #0
 1962 0280 10D0     		beq	.L121
1019:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1020:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 1963              		.loc 1 1020 25
 1964 0282 7B68     		ldr	r3, [r7, #4]
 1965 0284 5A69     		ldr	r2, [r3, #20]
 1966              		.loc 1 1020 49
 1967 0286 2B4B     		ldr	r3, .L126
 1968 0288 DB69     		ldr	r3, [r3, #28]
 1969              		.loc 1 1020 58
 1970 028a 03F07003 		and	r3, r3, #112
 1971              		.loc 1 1020 6
 1972 028e 9A42     		cmp	r2, r3
 1973 0290 08D2     		bcs	.L121
1021:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1022:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
1023:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 1974              		.loc 1 1023 6
 1975 0292 284B     		ldr	r3, .L126
 1976 0294 DB69     		ldr	r3, [r3, #28]
 1977 0296 23F07002 		bic	r2, r3, #112
 1978 029a 7B68     		ldr	r3, [r7, #4]
 1979 029c 5B69     		ldr	r3, [r3, #20]
 1980 029e 2549     		ldr	r1, .L126
 1981 02a0 1343     		orrs	r3, r3, r2
 1982 02a2 CB61     		str	r3, [r1, #28]
 1983              	.L121:
1024:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1025:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1026:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1027:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1028:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1984              		.loc 1 1028 24
 1985 02a4 7B68     		ldr	r3, [r7, #4]
 1986 02a6 1B68     		ldr	r3, [r3]
 1987              		.loc 1 1028 37
 1988 02a8 03F01003 		and	r3, r3, #16
 1989              		.loc 1 1028 4
 1990 02ac 002B     		cmp	r3, #0
 1991 02ae 10D0     		beq	.L122
1029:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1030:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 1992              		.loc 1 1030 25
 1993 02b0 7B68     		ldr	r3, [r7, #4]
 1994 02b2 9A69     		ldr	r2, [r3, #24]
 1995              		.loc 1 1030 49
 1996 02b4 1F4B     		ldr	r3, .L126
 1997 02b6 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccDJQnZC.s 			page 55


 1998              		.loc 1 1030 58
 1999 02b8 03F4E063 		and	r3, r3, #1792
 2000              		.loc 1 1030 6
 2001 02bc 9A42     		cmp	r2, r3
 2002 02be 08D2     		bcs	.L122
1031:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1032:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
1033:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 2003              		.loc 1 1033 6
 2004 02c0 1C4B     		ldr	r3, .L126
 2005 02c2 DB69     		ldr	r3, [r3, #28]
 2006 02c4 23F4E062 		bic	r2, r3, #1792
 2007 02c8 7B68     		ldr	r3, [r7, #4]
 2008 02ca 9B69     		ldr	r3, [r3, #24]
 2009 02cc 1949     		ldr	r1, .L126
 2010 02ce 1343     		orrs	r3, r3, r2
 2011 02d0 CB61     		str	r3, [r1, #28]
 2012              	.L122:
1034:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1035:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1036:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1037:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /*-------------------------- D3PCLK1 Configuration ---------------------------*/
1038:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 2013              		.loc 1 1038 24
 2014 02d2 7B68     		ldr	r3, [r7, #4]
 2015 02d4 1B68     		ldr	r3, [r3]
 2016              		.loc 1 1038 37
 2017 02d6 03F02003 		and	r3, r3, #32
 2018              		.loc 1 1038 4
 2019 02da 002B     		cmp	r3, #0
 2020 02dc 10D0     		beq	.L123
1039:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  {
1040:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 2021              		.loc 1 1040 25
 2022 02de 7B68     		ldr	r3, [r7, #4]
 2023 02e0 DA69     		ldr	r2, [r3, #28]
 2024              		.loc 1 1040 49
 2025 02e2 144B     		ldr	r3, .L126
 2026 02e4 1B6A     		ldr	r3, [r3, #32]
 2027              		.loc 1 1040 58
 2028 02e6 03F07003 		and	r3, r3, #112
 2029              		.loc 1 1040 6
 2030 02ea 9A42     		cmp	r2, r3
 2031 02ec 08D2     		bcs	.L123
1041:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    {
1042:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
1043:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 2032              		.loc 1 1043 6
 2033 02ee 114B     		ldr	r3, .L126
 2034 02f0 1B6A     		ldr	r3, [r3, #32]
 2035 02f2 23F07002 		bic	r2, r3, #112
 2036 02f6 7B68     		ldr	r3, [r7, #4]
 2037 02f8 DB69     		ldr	r3, [r3, #28]
 2038 02fa 0E49     		ldr	r1, .L126
 2039 02fc 1343     		orrs	r3, r3, r2
 2040 02fe 0B62     		str	r3, [r1, #32]
 2041              	.L123:
ARM GAS  /tmp/ccDJQnZC.s 			page 56


1044:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    }
1045:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  }
1046:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1047:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1048:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPR
 2042              		.loc 1 1048 21
 2043 0300 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2044 0304 0146     		mov	r1, r0
 2045              		.loc 1 1048 73
 2046 0306 0B4B     		ldr	r3, .L126
 2047 0308 9B69     		ldr	r3, [r3, #24]
 2048              		.loc 1 1048 102
 2049 030a 1B0A     		lsrs	r3, r3, #8
 2050 030c 03F00F03 		and	r3, r3, #15
 2051              		.loc 1 1048 68
 2052 0310 094A     		ldr	r2, .L126+4
 2053 0312 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2054              		.loc 1 1048 129
 2055 0314 03F01F03 		and	r3, r3, #31
 2056              		.loc 1 1048 47
 2057 0318 21FA03F3 		lsr	r3, r1, r3
 2058              		.loc 1 1048 19
 2059 031c 074A     		ldr	r2, .L126+8
 2060 031e 1360     		str	r3, [r2]
1049:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1050:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1051:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   halstatus = HAL_InitTick (TICK_INT_PRIORITY);
 2061              		.loc 1 1051 15
 2062 0320 0020     		movs	r0, #0
 2063 0322 FFF7FEFF 		bl	HAL_InitTick
 2064 0326 0346     		mov	r3, r0
 2065 0328 FB72     		strb	r3, [r7, #11]
1052:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1053:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return halstatus;
 2066              		.loc 1 1053 10
 2067 032a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2068              	.L104:
1054:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2069              		.loc 1 1054 1
 2070 032c 1846     		mov	r0, r3
 2071 032e 1037     		adds	r7, r7, #16
 2072              		.cfi_def_cfa_offset 8
 2073 0330 BD46     		mov	sp, r7
 2074              		.cfi_def_cfa_register 13
 2075              		@ sp needed
 2076 0332 80BD     		pop	{r7, pc}
 2077              	.L127:
 2078              		.align	2
 2079              	.L126:
 2080 0334 00440258 		.word	1476543488
 2081 0338 00000000 		.word	D1CorePrescTable
 2082 033c 00000000 		.word	SystemCoreClock
 2083              		.cfi_endproc
 2084              	.LFE136:
 2086              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 2087              		.align	1
 2088              		.global	HAL_RCC_MCOConfig
ARM GAS  /tmp/ccDJQnZC.s 			page 57


 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2092              		.fpu fpv5-d16
 2094              	HAL_RCC_MCOConfig:
 2095              	.LFB137:
1055:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1056:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1057:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @}
1058:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1059:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1060:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /** @defgroup RCC_Group2 Peripheral Control functions
1061:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1062:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  *
1063:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @verbatim
1064:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1065:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1066:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****  ===============================================================================
1067:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     [..]
1068:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
1069:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     frequencies.
1070:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1071:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** @endverbatim
1072:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @{
1073:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1074:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1075:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1076:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
1077:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
1078:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOx: specifies the output direction for the clock source.
1079:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1080:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
1081:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
1082:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
1083:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1084:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
1085:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
1086:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
1087:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLL1QCLK:  PLL1Q clock selected as MCO1 source
1088:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI48: HSI48 (48MHZ) selected as MCO1 source
1089:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
1090:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLL2PCLK: PLL2P clock selected as MCO2 source
1091:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
1092:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK:  PLL1P clock selected as MCO2 source
1093:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_CSICLK:  CSI clock selected as MCO2 source
1094:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_LSICLK:  LSI clock selected as MCO2 source
1095:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_MCODiv: specifies the MCOx pre-scaler.
1096:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1097:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
1098:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1099:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2096              		.loc 1 1101 1
 2097              		.cfi_startproc
 2098              		@ args = 0, pretend = 0, frame = 48
 2099              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccDJQnZC.s 			page 58


 2100 0000 80B5     		push	{r7, lr}
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 7, -8
 2103              		.cfi_offset 14, -4
 2104 0002 8CB0     		sub	sp, sp, #48
 2105              		.cfi_def_cfa_offset 56
 2106 0004 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
 2108 0006 F860     		str	r0, [r7, #12]
 2109 0008 B960     		str	r1, [r7, #8]
 2110 000a 7A60     		str	r2, [r7, #4]
1102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check the parameters */
1104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* RCC_MCO1 */
1107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 2111              		.loc 1 1107 5
 2112 000c FB68     		ldr	r3, [r7, #12]
 2113 000e 002B     		cmp	r3, #0
 2114 0010 2AD1     		bne	.L129
 2115              	.LBB5:
1108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO1 Clock Enable */
1112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
 2116              		.loc 1 1112 5
 2117 0012 2D4B     		ldr	r3, .L132
 2118 0014 D3F8E030 		ldr	r3, [r3, #224]
 2119 0018 2B4A     		ldr	r2, .L132
 2120 001a 43F00103 		orr	r3, r3, #1
 2121 001e C2F8E030 		str	r3, [r2, #224]
 2122 0022 294B     		ldr	r3, .L132
 2123 0024 D3F8E030 		ldr	r3, [r3, #224]
 2124 0028 03F00103 		and	r3, r3, #1
 2125 002c BB61     		str	r3, [r7, #24]
 2126 002e BB69     		ldr	r3, [r7, #24]
 2127              	.LBE5:
1113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
1115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 2128              		.loc 1 1115 25
 2129 0030 4FF48073 		mov	r3, #256
 2130 0034 FB61     		str	r3, [r7, #28]
1116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2131              		.loc 1 1116 26
 2132 0036 0223     		movs	r3, #2
 2133 0038 3B62     		str	r3, [r7, #32]
1117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2134              		.loc 1 1117 27
 2135 003a 0323     		movs	r3, #3
 2136 003c BB62     		str	r3, [r7, #40]
1118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2137              		.loc 1 1118 26
 2138 003e 0023     		movs	r3, #0
 2139 0040 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccDJQnZC.s 			page 59


1119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2140              		.loc 1 1119 31
 2141 0042 0023     		movs	r3, #0
 2142 0044 FB62     		str	r3, [r7, #44]
1120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 2143              		.loc 1 1120 5
 2144 0046 07F11C03 		add	r3, r7, #28
 2145 004a 1946     		mov	r1, r3
 2146 004c 1F48     		ldr	r0, .L132+4
 2147 004e FFF7FEFF 		bl	HAL_GPIO_Init
1121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
1123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 2148              		.loc 1 1123 5
 2149 0052 1D4B     		ldr	r3, .L132
 2150 0054 1B69     		ldr	r3, [r3, #16]
 2151 0056 23F0FE72 		bic	r2, r3, #33292288
 2152 005a B968     		ldr	r1, [r7, #8]
 2153 005c 7B68     		ldr	r3, [r7, #4]
 2154 005e 0B43     		orrs	r3, r3, r1
 2155 0060 1949     		ldr	r1, .L132
 2156 0062 1343     		orrs	r3, r3, r2
 2157 0064 0B61     		str	r3, [r1, #16]
1124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
1128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* MCO2 Clock Enable */
1130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
1131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
1133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
1134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
1135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
1136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
1137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
1138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
1139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
1141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)))
1142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2158              		.loc 1 1143 1
 2159 0066 2AE0     		b	.L131
 2160              	.L129:
 2161              	.LBB6:
1130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2162              		.loc 1 1130 5
 2163 0068 174B     		ldr	r3, .L132
 2164 006a D3F8E030 		ldr	r3, [r3, #224]
 2165 006e 164A     		ldr	r2, .L132
 2166 0070 43F00403 		orr	r3, r3, #4
 2167 0074 C2F8E030 		str	r3, [r2, #224]
 2168 0078 134B     		ldr	r3, .L132
 2169 007a D3F8E030 		ldr	r3, [r3, #224]
 2170 007e 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/ccDJQnZC.s 			page 60


 2171 0082 7B61     		str	r3, [r7, #20]
 2172 0084 7B69     		ldr	r3, [r7, #20]
 2173              	.LBE6:
1133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2174              		.loc 1 1133 25
 2175 0086 4FF40073 		mov	r3, #512
 2176 008a FB61     		str	r3, [r7, #28]
1134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2177              		.loc 1 1134 26
 2178 008c 0223     		movs	r3, #2
 2179 008e 3B62     		str	r3, [r7, #32]
1135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 2180              		.loc 1 1135 27
 2181 0090 0323     		movs	r3, #3
 2182 0092 BB62     		str	r3, [r7, #40]
1136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2183              		.loc 1 1136 26
 2184 0094 0023     		movs	r3, #0
 2185 0096 7B62     		str	r3, [r7, #36]
1137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 2186              		.loc 1 1137 31
 2187 0098 0023     		movs	r3, #0
 2188 009a FB62     		str	r3, [r7, #44]
1138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
 2189              		.loc 1 1138 5
 2190 009c 07F11C03 		add	r3, r7, #28
 2191 00a0 1946     		mov	r1, r3
 2192 00a2 0B48     		ldr	r0, .L132+8
 2193 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
1141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
 2194              		.loc 1 1141 5
 2195 00a8 074B     		ldr	r3, .L132
 2196 00aa 1B69     		ldr	r3, [r3, #16]
 2197 00ac 23F07E42 		bic	r2, r3, #-33554432
 2198 00b0 7B68     		ldr	r3, [r7, #4]
 2199 00b2 D901     		lsls	r1, r3, #7
 2200 00b4 BB68     		ldr	r3, [r7, #8]
 2201 00b6 0B43     		orrs	r3, r3, r1
 2202 00b8 0349     		ldr	r1, .L132
 2203 00ba 1343     		orrs	r3, r3, r2
 2204 00bc 0B61     		str	r3, [r1, #16]
 2205              	.L131:
 2206              		.loc 1 1143 1
 2207 00be 00BF     		nop
 2208 00c0 3037     		adds	r7, r7, #48
 2209              		.cfi_def_cfa_offset 8
 2210 00c2 BD46     		mov	sp, r7
 2211              		.cfi_def_cfa_register 13
 2212              		@ sp needed
 2213 00c4 80BD     		pop	{r7, pc}
 2214              	.L133:
 2215 00c6 00BF     		.align	2
 2216              	.L132:
 2217 00c8 00440258 		.word	1476543488
 2218 00cc 00000258 		.word	1476526080
 2219 00d0 00080258 		.word	1476528128
 2220              		.cfi_endproc
ARM GAS  /tmp/ccDJQnZC.s 			page 61


 2221              	.LFE137:
 2223              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2224              		.align	1
 2225              		.global	HAL_RCC_EnableCSS
 2226              		.syntax unified
 2227              		.thumb
 2228              		.thumb_func
 2229              		.fpu fpv5-d16
 2231              	HAL_RCC_EnableCSS:
 2232              	.LFB138:
1144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         the Cortex-M NMI (Non-Mask-able Interrupt) exception vector.
1152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2233              		.loc 1 1155 1
 2234              		.cfi_startproc
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 1, uses_anonymous_args = 0
 2237              		@ link register save eliminated.
 2238 0000 80B4     		push	{r7}
 2239              		.cfi_def_cfa_offset 4
 2240              		.cfi_offset 7, -4
 2241 0002 00AF     		add	r7, sp, #0
 2242              		.cfi_def_cfa_register 7
1156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSHSEON) ;
 2243              		.loc 1 1156 3
 2244 0004 054B     		ldr	r3, .L135
 2245 0006 1B68     		ldr	r3, [r3]
 2246 0008 044A     		ldr	r2, .L135
 2247 000a 43F40023 		orr	r3, r3, #524288
 2248 000e 1360     		str	r3, [r2]
1157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2249              		.loc 1 1157 1
 2250 0010 00BF     		nop
 2251 0012 BD46     		mov	sp, r7
 2252              		.cfi_def_cfa_register 13
 2253              		@ sp needed
 2254 0014 5DF8047B 		ldr	r7, [sp], #4
 2255              		.cfi_restore 7
 2256              		.cfi_def_cfa_offset 0
 2257 0018 7047     		bx	lr
 2258              	.L136:
 2259 001a 00BF     		.align	2
 2260              	.L135:
 2261 001c 00440258 		.word	1476543488
 2262              		.cfi_endproc
 2263              	.LFE138:
 2265              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 2266              		.align	1
ARM GAS  /tmp/ccDJQnZC.s 			page 62


 2267              		.global	HAL_RCC_DisableCSS
 2268              		.syntax unified
 2269              		.thumb
 2270              		.thumb_func
 2271              		.fpu fpv5-d16
 2273              	HAL_RCC_DisableCSS:
 2274              	.LFB139:
1158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2275              		.loc 1 1164 1
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 1, uses_anonymous_args = 0
 2279              		@ link register save eliminated.
 2280 0000 80B4     		push	{r7}
 2281              		.cfi_def_cfa_offset 4
 2282              		.cfi_offset 7, -4
 2283 0002 00AF     		add	r7, sp, #0
 2284              		.cfi_def_cfa_register 7
1165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSHSEON);
 2285              		.loc 1 1165 3
 2286 0004 054B     		ldr	r3, .L138
 2287 0006 1B68     		ldr	r3, [r3]
 2288 0008 044A     		ldr	r2, .L138
 2289 000a 23F40023 		bic	r3, r3, #524288
 2290 000e 1360     		str	r3, [r2]
1166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2291              		.loc 1 1166 1
 2292 0010 00BF     		nop
 2293 0012 BD46     		mov	sp, r7
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 0014 5DF8047B 		ldr	r7, [sp], #4
 2297              		.cfi_restore 7
 2298              		.cfi_def_cfa_offset 0
 2299 0018 7047     		bx	lr
 2300              	.L139:
 2301 001a 00BF     		.align	2
 2302              	.L138:
 2303 001c 00440258 		.word	1476543488
 2304              		.cfi_endproc
 2305              	.LFE139:
 2307              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 2308              		.align	1
 2309              		.global	HAL_RCC_GetSysClockFreq
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2313              		.fpu fpv5-d16
 2315              	HAL_RCC_GetSysClockFreq:
 2316              	.LFB140:
1167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 63


1168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         constant and the selected clock source:
1174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is CSI, function returns values based on CSI_VALUE(*)
1175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(**)
1176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(***)
1177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on CSI_VALUE(*),
1178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *           HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
1179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (*) CSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               4 MHz) but the real value may vary depending on the variations
1181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (**) HSI_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               64 MHz) but the real value may vary depending on the variations
1184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *               in voltage and temperature.
1185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note     (***) HSE_VALUE is a constant defined in stm32h7xx_hal_conf.h file (default value
1186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
1187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *                have wrong result.
1189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         value for HSE crystal.
1192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         baud rate for the communication peripherals or configure other parameters.
1195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval SYSCLK frequency
1201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2317              		.loc 1 1203 1
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 32
 2320              		@ frame_needed = 1, uses_anonymous_args = 0
 2321              		@ link register save eliminated.
 2322 0000 80B4     		push	{r7}
 2323              		.cfi_def_cfa_offset 4
 2324              		.cfi_offset 7, -4
 2325 0002 89B0     		sub	sp, sp, #36
 2326              		.cfi_def_cfa_offset 40
 2327 0004 00AF     		add	r7, sp, #0
 2328              		.cfi_def_cfa_register 7
1204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue;
1205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   float_t fracn1, pllvco;
1206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   uint32_t sysclockfreq;
1207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 2329              		.loc 1 1210 14
 2330 0006 B04B     		ldr	r3, .L161
ARM GAS  /tmp/ccDJQnZC.s 			page 64


 2331 0008 1B69     		ldr	r3, [r3, #16]
 2332              		.loc 1 1210 21
 2333 000a 03F03803 		and	r3, r3, #56
 2334              		.loc 1 1210 3
 2335 000e 182B     		cmp	r3, #24
 2336 0010 00F25081 		bhi	.L141
 2337 0014 01A2     		adr	r2, .L143
 2338 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2339 001a 00BF     		.p2align 2
 2340              	.L143:
 2341 001c 81000000 		.word	.L146+1
 2342 0020 B5020000 		.word	.L141+1
 2343 0024 B5020000 		.word	.L141+1
 2344 0028 B5020000 		.word	.L141+1
 2345 002c B5020000 		.word	.L141+1
 2346 0030 B5020000 		.word	.L141+1
 2347 0034 B5020000 		.word	.L141+1
 2348 0038 B5020000 		.word	.L141+1
 2349 003c A7000000 		.word	.L145+1
 2350 0040 B5020000 		.word	.L141+1
 2351 0044 B5020000 		.word	.L141+1
 2352 0048 B5020000 		.word	.L141+1
 2353 004c B5020000 		.word	.L141+1
 2354 0050 B5020000 		.word	.L141+1
 2355 0054 B5020000 		.word	.L141+1
 2356 0058 B5020000 		.word	.L141+1
 2357 005c AD000000 		.word	.L144+1
 2358 0060 B5020000 		.word	.L141+1
 2359 0064 B5020000 		.word	.L141+1
 2360 0068 B5020000 		.word	.L141+1
 2361 006c B5020000 		.word	.L141+1
 2362 0070 B5020000 		.word	.L141+1
 2363 0074 B5020000 		.word	.L141+1
 2364 0078 B5020000 		.word	.L141+1
 2365 007c B3000000 		.word	.L142+1
 2366              		.p2align 1
 2367              	.L146:
1211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
1213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 2368              		.loc 1 1214 8
 2369 0080 914B     		ldr	r3, .L161
 2370 0082 1B68     		ldr	r3, [r3]
 2371 0084 03F02003 		and	r3, r3, #32
 2372              		.loc 1 1214 7
 2373 0088 002B     		cmp	r3, #0
 2374 008a 09D0     		beq	.L147
1215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 2375              		.loc 1 1216 50
 2376 008c 8E4B     		ldr	r3, .L161
 2377 008e 1B68     		ldr	r3, [r3]
 2378              		.loc 1 1216 77
 2379 0090 DB08     		lsrs	r3, r3, #3
 2380 0092 03F00303 		and	r3, r3, #3
 2381              		.loc 1 1216 22
ARM GAS  /tmp/ccDJQnZC.s 			page 65


 2382 0096 8D4A     		ldr	r2, .L161+4
 2383 0098 22FA03F3 		lsr	r3, r2, r3
 2384 009c BB61     		str	r3, [r7, #24]
1217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       else
1219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         sysclockfreq = (uint32_t) HSI_VALUE;
1221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2385              		.loc 1 1223 5
 2386 009e 0CE1     		b	.L149
 2387              	.L147:
1220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
 2388              		.loc 1 1220 22
 2389 00a0 8A4B     		ldr	r3, .L161+4
 2390 00a2 BB61     		str	r3, [r7, #24]
 2391              		.loc 1 1223 5
 2392 00a4 09E1     		b	.L149
 2393              	.L145:
1224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
1226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
 2394              		.loc 1 1226 18
 2395 00a6 8A4B     		ldr	r3, .L161+8
 2396 00a8 BB61     		str	r3, [r7, #24]
1227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2397              		.loc 1 1227 5
 2398 00aa 06E1     		b	.L149
 2399              	.L144:
1228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 2400              		.loc 1 1230 18
 2401 00ac 894B     		ldr	r3, .L161+12
 2402 00ae BB61     		str	r3, [r7, #24]
1231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2403              		.loc 1 1231 5
 2404 00b0 03E1     		b	.L149
 2405              	.L142:
1232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
1234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
1236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     */
1238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 2406              		.loc 1 1238 21
 2407 00b2 854B     		ldr	r3, .L161
 2408 00b4 9B6A     		ldr	r3, [r3, #40]
 2409              		.loc 1 1238 15
 2410 00b6 03F00303 		and	r3, r3, #3
 2411 00ba 7B61     		str	r3, [r7, #20]
1239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 2412              		.loc 1 1239 17
 2413 00bc 824B     		ldr	r3, .L161
 2414 00be 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/ccDJQnZC.s 			page 66


 2415              		.loc 1 1239 51
 2416 00c0 1B09     		lsrs	r3, r3, #4
 2417              		.loc 1 1239 10
 2418 00c2 03F03F03 		and	r3, r3, #63
 2419 00c6 3B61     		str	r3, [r7, #16]
1240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 2420              		.loc 1 1240 22
 2421 00c8 7F4B     		ldr	r3, .L161
 2422 00ca DB6A     		ldr	r3, [r3, #44]
 2423              		.loc 1 1240 15
 2424 00cc 03F00103 		and	r3, r3, #1
 2425 00d0 FB60     		str	r3, [r7, #12]
1241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 2426              		.loc 1 1241 50
 2427 00d2 7D4B     		ldr	r3, .L161
 2428 00d4 5B6B     		ldr	r3, [r3, #52]
 2429              		.loc 1 1241 85
 2430 00d6 DB08     		lsrs	r3, r3, #3
 2431 00d8 C3F30C03 		ubfx	r3, r3, #0, #13
 2432              		.loc 1 1241 23
 2433 00dc FA68     		ldr	r2, [r7, #12]
 2434 00de 02FB03F3 		mul	r3, r2, r3
 2435              		.loc 1 1241 12
 2436 00e2 07EE903A 		vmov	s15, r3	@ int
 2437 00e6 F8EE677A 		vcvt.f32.u32	s15, s15
 2438 00ea C7ED027A 		vstr.32	s15, [r7, #8]
1242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     if (pllm != 0U)
 2439              		.loc 1 1243 8
 2440 00ee 3B69     		ldr	r3, [r7, #16]
 2441 00f0 002B     		cmp	r3, #0
 2442 00f2 00F0DC80 		beq	.L150
 2443 00f6 7B69     		ldr	r3, [r7, #20]
 2444 00f8 012B     		cmp	r3, #1
 2445 00fa 5CD0     		beq	.L151
 2446 00fc 7B69     		ldr	r3, [r7, #20]
 2447 00fe 002B     		cmp	r3, #0
 2448 0100 03D0     		beq	.L152
 2449 0102 7B69     		ldr	r3, [r7, #20]
 2450 0104 022B     		cmp	r3, #2
 2451 0106 78D0     		beq	.L153
 2452 0108 99E0     		b	.L160
 2453              	.L152:
1244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       switch (pllsource)
1246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       {
1247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 2454              		.loc 1 1249 12
 2455 010a 6F4B     		ldr	r3, .L161
 2456 010c 1B68     		ldr	r3, [r3]
 2457 010e 03F02003 		and	r3, r3, #32
 2458              		.loc 1 1249 11
 2459 0112 002B     		cmp	r3, #0
 2460 0114 2DD0     		beq	.L155
1250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccDJQnZC.s 			page 67


1251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 2461              		.loc 1 1251 36
 2462 0116 6C4B     		ldr	r3, .L161
 2463 0118 1B68     		ldr	r3, [r3]
 2464              		.loc 1 1251 63
 2465 011a DB08     		lsrs	r3, r3, #3
 2466 011c 03F00303 		and	r3, r3, #3
 2467              		.loc 1 1251 19
 2468 0120 6A4A     		ldr	r2, .L161+4
 2469 0122 22FA03F3 		lsr	r3, r2, r3
 2470 0126 7B60     		str	r3, [r7, #4]
1252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 2471              		.loc 1 1252 22
 2472 0128 7B68     		ldr	r3, [r7, #4]
 2473 012a 07EE903A 		vmov	s15, r3	@ int
 2474 012e F8EE676A 		vcvt.f32.u32	s13, s15
 2475              		.loc 1 1252 42
 2476 0132 3B69     		ldr	r3, [r7, #16]
 2477 0134 07EE903A 		vmov	s15, r3	@ int
 2478 0138 F8EE677A 		vcvt.f32.u32	s15, s15
 2479              		.loc 1 1252 40
 2480 013c 86EEA77A 		vdiv.f32	s14, s13, s15
 2481              		.loc 1 1252 83
 2482 0140 614B     		ldr	r3, .L161
 2483 0142 1B6B     		ldr	r3, [r3, #48]
 2484              		.loc 1 1252 69
 2485 0144 C3F30803 		ubfx	r3, r3, #0, #9
 2486              		.loc 1 1252 60
 2487 0148 07EE903A 		vmov	s15, r3	@ int
 2488 014c F8EE676A 		vcvt.f32.u32	s13, s15
 2489              		.loc 1 1252 122
 2490 0150 97ED026A 		vldr.32	s12, [r7, #8]
 2491 0154 DFED605A 		vldr.32	s11, .L161+16
 2492 0158 C6EE257A 		vdiv.f32	s15, s12, s11
 2493              		.loc 1 1252 113
 2494 015c 76EEA77A 		vadd.f32	s15, s13, s15
 2495              		.loc 1 1252 140
 2496 0160 F7EE006A 		vmov.f32	s13, #1.0e+0
 2497 0164 77EEA67A 		vadd.f32	s15, s15, s13
 2498              		.loc 1 1252 18
 2499 0168 67EE277A 		vmul.f32	s15, s14, s15
 2500 016c C7ED077A 		vstr.32	s15, [r7, #28]
1253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         else
1255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         {
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****           pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
1257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
1258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2501              		.loc 1 1258 9
 2502 0170 87E0     		b	.L157
 2503              	.L155:
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2504              		.loc 1 1256 42
 2505 0172 3B69     		ldr	r3, [r7, #16]
 2506 0174 07EE903A 		vmov	s15, r3	@ int
 2507 0178 F8EE677A 		vcvt.f32.u32	s15, s15
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccDJQnZC.s 			page 68


 2508              		.loc 1 1256 40
 2509 017c DFED576A 		vldr.32	s13, .L161+20
 2510 0180 86EEA77A 		vdiv.f32	s14, s13, s15
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2511              		.loc 1 1256 83
 2512 0184 504B     		ldr	r3, .L161
 2513 0186 1B6B     		ldr	r3, [r3, #48]
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2514              		.loc 1 1256 69
 2515 0188 C3F30803 		ubfx	r3, r3, #0, #9
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2516              		.loc 1 1256 60
 2517 018c 07EE903A 		vmov	s15, r3	@ int
 2518 0190 F8EE676A 		vcvt.f32.u32	s13, s15
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2519              		.loc 1 1256 122
 2520 0194 97ED026A 		vldr.32	s12, [r7, #8]
 2521 0198 DFED4F5A 		vldr.32	s11, .L161+16
 2522 019c C6EE257A 		vdiv.f32	s15, s12, s11
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2523              		.loc 1 1256 113
 2524 01a0 76EEA77A 		vadd.f32	s15, s13, s15
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2525              		.loc 1 1256 140
 2526 01a4 F7EE006A 		vmov.f32	s13, #1.0e+0
 2527 01a8 77EEA67A 		vadd.f32	s15, s15, s13
1256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         }
 2528              		.loc 1 1256 18
 2529 01ac 67EE277A 		vmul.f32	s15, s14, s15
 2530 01b0 C7ED077A 		vstr.32	s15, [r7, #28]
 2531              		.loc 1 1258 9
 2532 01b4 65E0     		b	.L157
 2533              	.L151:
1259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
1261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2534              		.loc 1 1261 40
 2535 01b6 3B69     		ldr	r3, [r7, #16]
 2536 01b8 07EE903A 		vmov	s15, r3	@ int
 2537 01bc F8EE677A 		vcvt.f32.u32	s15, s15
 2538              		.loc 1 1261 38
 2539 01c0 DFED476A 		vldr.32	s13, .L161+24
 2540 01c4 86EEA77A 		vdiv.f32	s14, s13, s15
 2541              		.loc 1 1261 81
 2542 01c8 3F4B     		ldr	r3, .L161
 2543 01ca 1B6B     		ldr	r3, [r3, #48]
 2544              		.loc 1 1261 67
 2545 01cc C3F30803 		ubfx	r3, r3, #0, #9
 2546              		.loc 1 1261 58
 2547 01d0 07EE903A 		vmov	s15, r3	@ int
 2548 01d4 F8EE676A 		vcvt.f32.u32	s13, s15
 2549              		.loc 1 1261 120
 2550 01d8 97ED026A 		vldr.32	s12, [r7, #8]
 2551 01dc DFED3E5A 		vldr.32	s11, .L161+16
 2552 01e0 C6EE257A 		vdiv.f32	s15, s12, s11
 2553              		.loc 1 1261 111
 2554 01e4 76EEA77A 		vadd.f32	s15, s13, s15
ARM GAS  /tmp/ccDJQnZC.s 			page 69


 2555              		.loc 1 1261 138
 2556 01e8 F7EE006A 		vmov.f32	s13, #1.0e+0
 2557 01ec 77EEA67A 		vadd.f32	s15, s15, s13
 2558              		.loc 1 1261 16
 2559 01f0 67EE277A 		vmul.f32	s15, s14, s15
 2560 01f4 C7ED077A 		vstr.32	s15, [r7, #28]
1262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2561              		.loc 1 1262 9
 2562 01f8 43E0     		b	.L157
 2563              	.L153:
1263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2564              		.loc 1 1265 40
 2565 01fa 3B69     		ldr	r3, [r7, #16]
 2566 01fc 07EE903A 		vmov	s15, r3	@ int
 2567 0200 F8EE677A 		vcvt.f32.u32	s15, s15
 2568              		.loc 1 1265 38
 2569 0204 DFED376A 		vldr.32	s13, .L161+28
 2570 0208 86EEA77A 		vdiv.f32	s14, s13, s15
 2571              		.loc 1 1265 81
 2572 020c 2E4B     		ldr	r3, .L161
 2573 020e 1B6B     		ldr	r3, [r3, #48]
 2574              		.loc 1 1265 67
 2575 0210 C3F30803 		ubfx	r3, r3, #0, #9
 2576              		.loc 1 1265 58
 2577 0214 07EE903A 		vmov	s15, r3	@ int
 2578 0218 F8EE676A 		vcvt.f32.u32	s13, s15
 2579              		.loc 1 1265 120
 2580 021c 97ED026A 		vldr.32	s12, [r7, #8]
 2581 0220 DFED2D5A 		vldr.32	s11, .L161+16
 2582 0224 C6EE257A 		vdiv.f32	s15, s12, s11
 2583              		.loc 1 1265 111
 2584 0228 76EEA77A 		vadd.f32	s15, s13, s15
 2585              		.loc 1 1265 138
 2586 022c F7EE006A 		vmov.f32	s13, #1.0e+0
 2587 0230 77EEA67A 		vadd.f32	s15, s15, s13
 2588              		.loc 1 1265 16
 2589 0234 67EE277A 		vmul.f32	s15, s14, s15
 2590 0238 C7ED077A 		vstr.32	s15, [r7, #28]
1266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2591              		.loc 1 1266 9
 2592 023c 21E0     		b	.L157
 2593              	.L160:
1267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       default:
1269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 2594              		.loc 1 1269 40
 2595 023e 3B69     		ldr	r3, [r7, #16]
 2596 0240 07EE903A 		vmov	s15, r3	@ int
 2597 0244 F8EE677A 		vcvt.f32.u32	s15, s15
 2598              		.loc 1 1269 38
 2599 0248 DFED256A 		vldr.32	s13, .L161+24
 2600 024c 86EEA77A 		vdiv.f32	s14, s13, s15
 2601              		.loc 1 1269 81
 2602 0250 1D4B     		ldr	r3, .L161
 2603 0252 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccDJQnZC.s 			page 70


 2604              		.loc 1 1269 67
 2605 0254 C3F30803 		ubfx	r3, r3, #0, #9
 2606              		.loc 1 1269 58
 2607 0258 07EE903A 		vmov	s15, r3	@ int
 2608 025c F8EE676A 		vcvt.f32.u32	s13, s15
 2609              		.loc 1 1269 120
 2610 0260 97ED026A 		vldr.32	s12, [r7, #8]
 2611 0264 DFED1C5A 		vldr.32	s11, .L161+16
 2612 0268 C6EE257A 		vdiv.f32	s15, s12, s11
 2613              		.loc 1 1269 111
 2614 026c 76EEA77A 		vadd.f32	s15, s13, s15
 2615              		.loc 1 1269 138
 2616 0270 F7EE006A 		vmov.f32	s13, #1.0e+0
 2617 0274 77EEA67A 		vadd.f32	s15, s15, s13
 2618              		.loc 1 1269 16
 2619 0278 67EE277A 		vmul.f32	s15, s14, s15
 2620 027c C7ED077A 		vstr.32	s15, [r7, #28]
1270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****         break;
 2621              		.loc 1 1270 9
 2622 0280 00BF     		nop
 2623              	.L157:
1271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       }
1272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 2624              		.loc 1 1272 20
 2625 0282 114B     		ldr	r3, .L161
 2626 0284 1B6B     		ldr	r3, [r3, #48]
 2627              		.loc 1 1272 50
 2628 0286 5B0A     		lsrs	r3, r3, #9
 2629 0288 03F07F03 		and	r3, r3, #127
 2630              		.loc 1 1272 12
 2631 028c 0133     		adds	r3, r3, #1
 2632 028e 3B60     		str	r3, [r7]
1273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 2633              		.loc 1 1273 50
 2634 0290 3B68     		ldr	r3, [r7]
 2635 0292 07EE903A 		vmov	s15, r3	@ int
 2636 0296 B8EE677A 		vcvt.f32.u32	s14, s15
 2637              		.loc 1 1273 33
 2638 029a D7ED076A 		vldr.32	s13, [r7, #28]
 2639 029e C6EE877A 		vdiv.f32	s15, s13, s14
 2640              		.loc 1 1273 20
 2641 02a2 FCEEE77A 		vcvt.u32.f32	s15, s15
 2642 02a6 17EE903A 		vmov	r3, s15	@ int
 2643 02aa BB61     		str	r3, [r7, #24]
1274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     else
1276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     {
1277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****       sysclockfreq = 0U;
1278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
1279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2644              		.loc 1 1279 5
 2645 02ac 05E0     		b	.L149
 2646              	.L150:
1277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     }
 2647              		.loc 1 1277 20
 2648 02ae 0023     		movs	r3, #0
 2649 02b0 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccDJQnZC.s 			page 71


 2650              		.loc 1 1279 5
 2651 02b2 02E0     		b	.L149
 2652              	.L141:
1280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   default:
1282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     sysclockfreq = CSI_VALUE;
 2653              		.loc 1 1282 18
 2654 02b4 064B     		ldr	r3, .L161+8
 2655 02b6 BB61     		str	r3, [r7, #24]
1283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     break;
 2656              		.loc 1 1283 5
 2657 02b8 00BF     		nop
 2658              	.L149:
1284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return sysclockfreq;
 2659              		.loc 1 1286 10
 2660 02ba BB69     		ldr	r3, [r7, #24]
1287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2661              		.loc 1 1287 1
 2662 02bc 1846     		mov	r0, r3
 2663 02be 2437     		adds	r7, r7, #36
 2664              		.cfi_def_cfa_offset 4
 2665 02c0 BD46     		mov	sp, r7
 2666              		.cfi_def_cfa_register 13
 2667              		@ sp needed
 2668 02c2 5DF8047B 		ldr	r7, [sp], #4
 2669              		.cfi_restore 7
 2670              		.cfi_def_cfa_offset 0
 2671 02c6 7047     		bx	lr
 2672              	.L162:
 2673              		.align	2
 2674              	.L161:
 2675 02c8 00440258 		.word	1476543488
 2676 02cc 0090D003 		.word	64000000
 2677 02d0 00093D00 		.word	4000000
 2678 02d4 40787D01 		.word	25000000
 2679 02d8 00000046 		.word	1174405120
 2680 02dc 0024744C 		.word	1282679808
 2681 02e0 0024744A 		.word	1249125376
 2682 02e4 20BCBE4B 		.word	1270791200
 2683              		.cfi_endproc
 2684              	.LFE140:
 2686              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2687              		.align	1
 2688              		.global	HAL_RCC_GetHCLKFreq
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv5-d16
 2694              	HAL_RCC_GetHCLKFreq:
 2695              	.LFB141:
1288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
ARM GAS  /tmp/ccDJQnZC.s 			page 72


1293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *
1295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
1296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         and updated within this function
1297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval HCLK frequency
1298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2696              		.loc 1 1300 1
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 00AF     		add	r7, sp, #0
 2705              		.cfi_def_cfa_register 7
1301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   SystemD2Clock = (HAL_RCCEx_GetD1SysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HP
 2706              		.loc 1 1301 20
 2707 0004 FFF7FEFF 		bl	HAL_RCCEx_GetD1SysClockFreq
 2708 0008 0146     		mov	r1, r0
 2709              		.loc 1 1301 76
 2710 000a 084B     		ldr	r3, .L165
 2711 000c 9B69     		ldr	r3, [r3, #24]
 2712              		.loc 1 1301 103
 2713 000e 03F00F03 		and	r3, r3, #15
 2714              		.loc 1 1301 71
 2715 0012 074A     		ldr	r2, .L165+4
 2716 0014 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2717              		.loc 1 1301 128
 2718 0016 03F01F03 		and	r3, r3, #31
 2719              		.loc 1 1301 50
 2720 001a 21FA03F3 		lsr	r3, r1, r3
 2721              		.loc 1 1301 17
 2722 001e 054A     		ldr	r2, .L165+8
 2723 0020 1360     		str	r3, [r2]
1302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return SystemD2Clock;
 2724              		.loc 1 1302 10
 2725 0022 044B     		ldr	r3, .L165+8
 2726 0024 1B68     		ldr	r3, [r3]
1303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2727              		.loc 1 1303 1
 2728 0026 1846     		mov	r0, r3
 2729 0028 80BD     		pop	{r7, pc}
 2730              	.L166:
 2731 002a 00BF     		.align	2
 2732              	.L165:
 2733 002c 00440258 		.word	1476543488
 2734 0030 00000000 		.word	D1CorePrescTable
 2735 0034 00000000 		.word	SystemD2Clock
 2736              		.cfi_endproc
 2737              	.LFE141:
 2739              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2740              		.align	1
 2741              		.global	HAL_RCC_GetPCLK1Freq
 2742              		.syntax unified
ARM GAS  /tmp/ccDJQnZC.s 			page 73


 2743              		.thumb
 2744              		.thumb_func
 2745              		.fpu fpv5-d16
 2747              	HAL_RCC_GetPCLK1Freq:
 2748              	.LFB142:
1304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2749              		.loc 1 1313 1
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 1, uses_anonymous_args = 0
 2753 0000 80B5     		push	{r7, lr}
 2754              		.cfi_def_cfa_offset 8
 2755              		.cfi_offset 7, -8
 2756              		.cfi_offset 14, -4
 2757 0002 00AF     		add	r7, sp, #0
 2758              		.cfi_def_cfa_register 7
1314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CF
 2759              		.loc 1 1315 11
 2760 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2761 0008 0146     		mov	r1, r0
 2762              		.loc 1 1315 59
 2763 000a 064B     		ldr	r3, .L169
 2764 000c DB69     		ldr	r3, [r3, #28]
 2765              		.loc 1 1315 89
 2766 000e 1B09     		lsrs	r3, r3, #4
 2767 0010 03F00703 		and	r3, r3, #7
 2768              		.loc 1 1315 54
 2769 0014 044A     		ldr	r2, .L169+4
 2770 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2771              		.loc 1 1315 117
 2772 0018 03F01F03 		and	r3, r3, #31
 2773              		.loc 1 1315 33
 2774 001c 21FA03F3 		lsr	r3, r1, r3
1316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2775              		.loc 1 1316 1
 2776 0020 1846     		mov	r0, r3
 2777 0022 80BD     		pop	{r7, pc}
 2778              	.L170:
 2779              		.align	2
 2780              	.L169:
 2781 0024 00440258 		.word	1476543488
 2782 0028 00000000 		.word	D1CorePrescTable
 2783              		.cfi_endproc
 2784              	.LFE142:
 2786              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2787              		.align	1
 2788              		.global	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccDJQnZC.s 			page 74


 2789              		.syntax unified
 2790              		.thumb
 2791              		.thumb_func
 2792              		.fpu fpv5-d16
 2794              	HAL_RCC_GetPCLK2Freq:
 2795              	.LFB143:
1317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval PCLK1 frequency
1324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2796              		.loc 1 1326 1
 2797              		.cfi_startproc
 2798              		@ args = 0, pretend = 0, frame = 0
 2799              		@ frame_needed = 1, uses_anonymous_args = 0
 2800 0000 80B5     		push	{r7, lr}
 2801              		.cfi_def_cfa_offset 8
 2802              		.cfi_offset 7, -8
 2803              		.cfi_offset 14, -4
 2804 0002 00AF     		add	r7, sp, #0
 2805              		.cfi_def_cfa_register 7
1327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CF
 2806              		.loc 1 1328 11
 2807 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2808 0008 0146     		mov	r1, r0
 2809              		.loc 1 1328 59
 2810 000a 064B     		ldr	r3, .L173
 2811 000c DB69     		ldr	r3, [r3, #28]
 2812              		.loc 1 1328 89
 2813 000e 1B0A     		lsrs	r3, r3, #8
 2814 0010 03F00703 		and	r3, r3, #7
 2815              		.loc 1 1328 54
 2816 0014 044A     		ldr	r2, .L173+4
 2817 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2818              		.loc 1 1328 117
 2819 0018 03F01F03 		and	r3, r3, #31
 2820              		.loc 1 1328 33
 2821 001c 21FA03F3 		lsr	r3, r1, r3
1329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 2822              		.loc 1 1329 1
 2823 0020 1846     		mov	r0, r3
 2824 0022 80BD     		pop	{r7, pc}
 2825              	.L174:
 2826              		.align	2
 2827              	.L173:
 2828 0024 00440258 		.word	1476543488
 2829 0028 00000000 		.word	D1CorePrescTable
 2830              		.cfi_endproc
 2831              	.LFE143:
 2833              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2834              		.align	1
ARM GAS  /tmp/ccDJQnZC.s 			page 75


 2835              		.global	HAL_RCC_GetOscConfig
 2836              		.syntax unified
 2837              		.thumb
 2838              		.thumb_func
 2839              		.fpu fpv5-d16
 2841              	HAL_RCC_GetOscConfig:
 2842              	.LFB144:
1330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_OscInitStruct: pointer to an RCC_OscInitTypeDef structure that
1335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 2843              		.loc 1 1339 1
 2844              		.cfi_startproc
 2845              		@ args = 0, pretend = 0, frame = 8
 2846              		@ frame_needed = 1, uses_anonymous_args = 0
 2847 0000 80B5     		push	{r7, lr}
 2848              		.cfi_def_cfa_offset 8
 2849              		.cfi_offset 7, -8
 2850              		.cfi_offset 14, -4
 2851 0002 82B0     		sub	sp, sp, #8
 2852              		.cfi_def_cfa_offset 16
 2853 0004 00AF     		add	r7, sp, #0
 2854              		.cfi_def_cfa_register 7
 2855 0006 7860     		str	r0, [r7, #4]
1340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2856              		.loc 1 1341 37
 2857 0008 7B68     		ldr	r3, [r7, #4]
 2858 000a 3F22     		movs	r2, #63
 2859 000c 1A60     		str	r2, [r3]
1342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI| RCC_OSCILLAT
1343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2860              		.loc 1 1345 10
 2861 000e 724B     		ldr	r3, .L196
 2862 0010 1B68     		ldr	r3, [r3]
 2863              		.loc 1 1345 15
 2864 0012 03F48023 		and	r3, r3, #262144
 2865              		.loc 1 1345 5
 2866 0016 B3F5802F 		cmp	r3, #262144
 2867 001a 04D1     		bne	.L176
1346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2868              		.loc 1 1347 33
 2869 001c 7B68     		ldr	r3, [r7, #4]
 2870 001e 4FF4A022 		mov	r2, #327680
 2871 0022 5A60     		str	r2, [r3, #4]
 2872 0024 0EE0     		b	.L177
 2873              	.L176:
1348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccDJQnZC.s 			page 76


1349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2874              		.loc 1 1349 15
 2875 0026 6C4B     		ldr	r3, .L196
 2876 0028 1B68     		ldr	r3, [r3]
 2877              		.loc 1 1349 20
 2878 002a 03F48033 		and	r3, r3, #65536
 2879              		.loc 1 1349 10
 2880 002e B3F5803F 		cmp	r3, #65536
 2881 0032 04D1     		bne	.L178
1350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2882              		.loc 1 1351 33
 2883 0034 7B68     		ldr	r3, [r7, #4]
 2884 0036 4FF48032 		mov	r2, #65536
 2885 003a 5A60     		str	r2, [r3, #4]
 2886 003c 02E0     		b	.L177
 2887              	.L178:
1352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2888              		.loc 1 1355 33
 2889 003e 7B68     		ldr	r3, [r7, #4]
 2890 0040 0022     		movs	r2, #0
 2891 0042 5A60     		str	r2, [r3, #4]
 2892              	.L177:
1356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    /* Get the CSI configuration -----------------------------------------------*/
1359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_CSION) == RCC_CR_CSION)
 2893              		.loc 1 1359 10
 2894 0044 644B     		ldr	r3, .L196
 2895 0046 1B68     		ldr	r3, [r3]
 2896              		.loc 1 1359 15
 2897 0048 03F08003 		and	r3, r3, #128
 2898              		.loc 1 1359 5
 2899 004c 802B     		cmp	r3, #128
 2900 004e 03D1     		bne	.L179
1360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_ON;
 2901              		.loc 1 1361 33
 2902 0050 7B68     		ldr	r3, [r7, #4]
 2903 0052 8022     		movs	r2, #128
 2904 0054 DA61     		str	r2, [r3, #28]
 2905 0056 02E0     		b	.L180
 2906              	.L179:
1362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSIState = RCC_CSI_OFF;
 2907              		.loc 1 1365 33
 2908 0058 7B68     		ldr	r3, [r7, #4]
 2909 005a 0022     		movs	r2, #0
 2910 005c DA61     		str	r2, [r3, #28]
 2911              	.L180:
1366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 77


1368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 2912              		.loc 1 1368 6
 2913 005e FFF7FEFF 		bl	HAL_GetREVID
 2914 0062 0246     		mov	r2, r0
 2915              		.loc 1 1368 5
 2916 0064 41F20303 		movw	r3, #4099
 2917 0068 9A42     		cmp	r2, r3
 2918 006a 07D8     		bhi	.L181
1369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_CSITRI
 2919              		.loc 1 1370 57
 2920 006c 5A4B     		ldr	r3, .L196
 2921 006e 5B68     		ldr	r3, [r3, #4]
 2922              		.loc 1 1370 46
 2923 0070 9B0E     		lsrs	r3, r3, #26
 2924 0072 03F01F02 		and	r2, r3, #31
 2925              		.loc 1 1370 44
 2926 0076 7B68     		ldr	r3, [r7, #4]
 2927 0078 1A62     		str	r2, [r3, #32]
 2928 007a 06E0     		b	.L182
 2929              	.L181:
1371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->CSICalibrationValue = (uint32_t)(READ_BIT(RCC->CSICFGR, RCC_CSICFGR_CSITRIM)
 2930              		.loc 1 1374 57
 2931 007c 564B     		ldr	r3, .L196
 2932 007e DB68     		ldr	r3, [r3, #12]
 2933              		.loc 1 1374 46
 2934 0080 1B0E     		lsrs	r3, r3, #24
 2935 0082 03F03F02 		and	r2, r3, #63
 2936              		.loc 1 1374 44
 2937 0086 7B68     		ldr	r3, [r7, #4]
 2938 0088 1A62     		str	r2, [r3, #32]
 2939              	.L182:
1375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2940              		.loc 1 1378 10
 2941 008a 534B     		ldr	r3, .L196
 2942 008c 1B68     		ldr	r3, [r3]
 2943              		.loc 1 1378 15
 2944 008e 03F00103 		and	r3, r3, #1
 2945              		.loc 1 1378 5
 2946 0092 012B     		cmp	r3, #1
 2947 0094 03D1     		bne	.L183
1379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2948              		.loc 1 1380 33
 2949 0096 7B68     		ldr	r3, [r7, #4]
 2950 0098 0122     		movs	r2, #1
 2951 009a DA60     		str	r2, [r3, #12]
 2952 009c 02E0     		b	.L184
 2953              	.L183:
1381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
ARM GAS  /tmp/ccDJQnZC.s 			page 78


1383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2954              		.loc 1 1384 33
 2955 009e 7B68     		ldr	r3, [r7, #4]
 2956 00a0 0022     		movs	r2, #0
 2957 00a2 DA60     		str	r2, [r3, #12]
 2958              	.L184:
1385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(HAL_GetREVID() <= REV_ID_Y)
 2959              		.loc 1 1387 6
 2960 00a4 FFF7FEFF 		bl	HAL_GetREVID
 2961 00a8 0246     		mov	r2, r0
 2962              		.loc 1 1387 5
 2963 00aa 41F20303 		movw	r3, #4099
 2964 00ae 9A42     		cmp	r2, r3
 2965 00b0 07D8     		bhi	.L185
1388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, HAL_RCC_REV_Y_HSITRI
 2966              		.loc 1 1389 57
 2967 00b2 494B     		ldr	r3, .L196
 2968 00b4 5B68     		ldr	r3, [r3, #4]
 2969              		.loc 1 1389 46
 2970 00b6 1B0B     		lsrs	r3, r3, #12
 2971 00b8 03F03F02 		and	r2, r3, #63
 2972              		.loc 1 1389 44
 2973 00bc 7B68     		ldr	r3, [r7, #4]
 2974 00be 1A61     		str	r2, [r3, #16]
 2975 00c0 06E0     		b	.L186
 2976              	.L185:
1390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSICalibrationValue = (uint32_t)(READ_BIT(RCC->HSICFGR, RCC_HSICFGR_HSITRIM)
 2977              		.loc 1 1393 57
 2978 00c2 454B     		ldr	r3, .L196
 2979 00c4 5B68     		ldr	r3, [r3, #4]
 2980              		.loc 1 1393 46
 2981 00c6 1B0E     		lsrs	r3, r3, #24
 2982 00c8 03F07F02 		and	r2, r3, #127
 2983              		.loc 1 1393 44
 2984 00cc 7B68     		ldr	r3, [r7, #4]
 2985 00ce 1A61     		str	r2, [r3, #16]
 2986              	.L186:
1394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2987              		.loc 1 1397 10
 2988 00d0 414B     		ldr	r3, .L196
 2989 00d2 1B6F     		ldr	r3, [r3, #112]
 2990              		.loc 1 1397 17
 2991 00d4 03F00403 		and	r3, r3, #4
 2992              		.loc 1 1397 5
 2993 00d8 042B     		cmp	r3, #4
 2994 00da 03D1     		bne	.L187
1398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccDJQnZC.s 			page 79


1399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2995              		.loc 1 1399 33
 2996 00dc 7B68     		ldr	r3, [r7, #4]
 2997 00de 0522     		movs	r2, #5
 2998 00e0 9A60     		str	r2, [r3, #8]
 2999 00e2 0CE0     		b	.L188
 3000              	.L187:
1400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 3001              		.loc 1 1401 15
 3002 00e4 3C4B     		ldr	r3, .L196
 3003 00e6 1B6F     		ldr	r3, [r3, #112]
 3004              		.loc 1 1401 22
 3005 00e8 03F00103 		and	r3, r3, #1
 3006              		.loc 1 1401 10
 3007 00ec 012B     		cmp	r3, #1
 3008 00ee 03D1     		bne	.L189
1402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 3009              		.loc 1 1403 33
 3010 00f0 7B68     		ldr	r3, [r7, #4]
 3011 00f2 0122     		movs	r2, #1
 3012 00f4 9A60     		str	r2, [r3, #8]
 3013 00f6 02E0     		b	.L188
 3014              	.L189:
1404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 3015              		.loc 1 1407 33
 3016 00f8 7B68     		ldr	r3, [r7, #4]
 3017 00fa 0022     		movs	r2, #0
 3018 00fc 9A60     		str	r2, [r3, #8]
 3019              	.L188:
1408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 3020              		.loc 1 1411 10
 3021 00fe 364B     		ldr	r3, .L196
 3022 0100 5B6F     		ldr	r3, [r3, #116]
 3023              		.loc 1 1411 16
 3024 0102 03F00103 		and	r3, r3, #1
 3025              		.loc 1 1411 5
 3026 0106 012B     		cmp	r3, #1
 3027 0108 03D1     		bne	.L190
1412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 3028              		.loc 1 1413 33
 3029 010a 7B68     		ldr	r3, [r7, #4]
 3030 010c 0122     		movs	r2, #1
 3031 010e 5A61     		str	r2, [r3, #20]
 3032 0110 02E0     		b	.L191
 3033              	.L190:
1414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccDJQnZC.s 			page 80


1417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 3034              		.loc 1 1417 33
 3035 0112 7B68     		ldr	r3, [r7, #4]
 3036 0114 0022     		movs	r2, #0
 3037 0116 5A61     		str	r2, [r3, #20]
 3038              	.L191:
1418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR & RCC_CR_HSI48ON) == RCC_CR_HSI48ON)
 3039              		.loc 1 1421 10
 3040 0118 2F4B     		ldr	r3, .L196
 3041 011a 1B68     		ldr	r3, [r3]
 3042              		.loc 1 1421 15
 3043 011c 03F48053 		and	r3, r3, #4096
 3044              		.loc 1 1421 5
 3045 0120 B3F5805F 		cmp	r3, #4096
 3046 0124 03D1     		bne	.L192
1422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 3047              		.loc 1 1423 35
 3048 0126 7B68     		ldr	r3, [r7, #4]
 3049 0128 0122     		movs	r2, #1
 3050 012a 9A61     		str	r2, [r3, #24]
 3051 012c 02E0     		b	.L193
 3052              	.L192:
1424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
1426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 3053              		.loc 1 1427 35
 3054 012e 7B68     		ldr	r3, [r7, #4]
 3055 0130 0022     		movs	r2, #0
 3056 0132 9A61     		str	r2, [r3, #24]
 3057              	.L193:
1428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 3058              		.loc 1 1431 10
 3059 0134 284B     		ldr	r3, .L196
 3060 0136 1B68     		ldr	r3, [r3]
 3061              		.loc 1 1431 15
 3062 0138 03F08073 		and	r3, r3, #16777216
 3063              		.loc 1 1431 5
 3064 013c B3F1807F 		cmp	r3, #16777216
 3065 0140 03D1     		bne	.L194
1432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 3066              		.loc 1 1433 37
 3067 0142 7B68     		ldr	r3, [r7, #4]
 3068 0144 0222     		movs	r2, #2
 3069 0146 5A62     		str	r2, [r3, #36]
 3070 0148 02E0     		b	.L195
 3071              	.L194:
1434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   else
ARM GAS  /tmp/ccDJQnZC.s 			page 81


1436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 3072              		.loc 1 1437 37
 3073 014a 7B68     		ldr	r3, [r7, #4]
 3074 014c 0122     		movs	r2, #1
 3075 014e 5A62     		str	r2, [r3, #36]
 3076              	.L195:
1438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 3077              		.loc 1 1439 52
 3078 0150 214B     		ldr	r3, .L196
 3079 0152 9B6A     		ldr	r3, [r3, #40]
 3080              		.loc 1 1439 38
 3081 0154 03F00302 		and	r2, r3, #3
 3082              		.loc 1 1439 36
 3083 0158 7B68     		ldr	r3, [r7, #4]
 3084 015a 9A62     		str	r2, [r3, #40]
1440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> RCC_PLLCKSELR_D
 3085              		.loc 1 1440 48
 3086 015c 1E4B     		ldr	r3, .L196
 3087 015e 9B6A     		ldr	r3, [r3, #40]
 3088              		.loc 1 1440 33
 3089 0160 1B09     		lsrs	r3, r3, #4
 3090 0162 03F03F02 		and	r2, r3, #63
 3091              		.loc 1 1440 31
 3092 0166 7B68     		ldr	r3, [r7, #4]
 3093 0168 DA62     		str	r2, [r3, #44]
1441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) >> RCC_PLL1DIVR_N1_Pos
 3094              		.loc 1 1441 48
 3095 016a 1B4B     		ldr	r3, .L196
 3096 016c 1B6B     		ldr	r3, [r3, #48]
 3097              		.loc 1 1441 33
 3098 016e C3F30803 		ubfx	r3, r3, #0, #9
 3099              		.loc 1 1441 101
 3100 0172 5A1C     		adds	r2, r3, #1
 3101              		.loc 1 1441 31
 3102 0174 7B68     		ldr	r3, [r7, #4]
 3103 0176 1A63     		str	r2, [r3, #48]
1442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos
 3104              		.loc 1 1442 48
 3105 0178 174B     		ldr	r3, .L196
 3106 017a 1B6B     		ldr	r3, [r3, #48]
 3107              		.loc 1 1442 33
 3108 017c 1B0E     		lsrs	r3, r3, #24
 3109 017e 03F07F03 		and	r3, r3, #127
 3110              		.loc 1 1442 101
 3111 0182 5A1C     		adds	r2, r3, #1
 3112              		.loc 1 1442 31
 3113 0184 7B68     		ldr	r3, [r7, #4]
 3114 0186 DA63     		str	r2, [r3, #60]
1443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos
 3115              		.loc 1 1443 48
 3116 0188 134B     		ldr	r3, .L196
 3117 018a 1B6B     		ldr	r3, [r3, #48]
 3118              		.loc 1 1443 33
 3119 018c 5B0A     		lsrs	r3, r3, #9
 3120 018e 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/ccDJQnZC.s 			page 82


 3121              		.loc 1 1443 101
 3122 0192 5A1C     		adds	r2, r3, #1
 3123              		.loc 1 1443 31
 3124 0194 7B68     		ldr	r3, [r7, #4]
 3125 0196 5A63     		str	r2, [r3, #52]
1444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLL1DIVR & RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos
 3126              		.loc 1 1444 48
 3127 0198 0F4B     		ldr	r3, .L196
 3128 019a 1B6B     		ldr	r3, [r3, #48]
 3129              		.loc 1 1444 33
 3130 019c 1B0C     		lsrs	r3, r3, #16
 3131 019e 03F07F03 		and	r3, r3, #127
 3132              		.loc 1 1444 101
 3133 01a2 5A1C     		adds	r2, r3, #1
 3134              		.loc 1 1444 31
 3135 01a4 7B68     		ldr	r3, [r7, #4]
 3136 01a6 9A63     		str	r2, [r3, #56]
1445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLRGE = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1RGE));
 3137              		.loc 1 1445 50
 3138 01a8 0B4B     		ldr	r3, .L196
 3139 01aa DB6A     		ldr	r3, [r3, #44]
 3140              		.loc 1 1445 35
 3141 01ac 03F00C02 		and	r2, r3, #12
 3142              		.loc 1 1445 33
 3143 01b0 7B68     		ldr	r3, [r7, #4]
 3144 01b2 1A64     		str	r2, [r3, #64]
1446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLVCOSEL = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLL1VCOSEL) >> RCC_PLLC
 3145              		.loc 1 1446 53
 3146 01b4 084B     		ldr	r3, .L196
 3147 01b6 DB6A     		ldr	r3, [r3, #44]
 3148              		.loc 1 1446 38
 3149 01b8 5B08     		lsrs	r3, r3, #1
 3150 01ba 03F00102 		and	r2, r3, #1
 3151              		.loc 1 1446 36
 3152 01be 7B68     		ldr	r3, [r7, #4]
 3153 01c0 5A64     		str	r2, [r3, #68]
1447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLFRACN = (uint32_t)(((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1
 3154              		.loc 1 1447 53
 3155 01c2 054B     		ldr	r3, .L196
 3156 01c4 5B6B     		ldr	r3, [r3, #52]
 3157              		.loc 1 1447 37
 3158 01c6 DB08     		lsrs	r3, r3, #3
 3159 01c8 C3F30C02 		ubfx	r2, r3, #0, #13
 3160              		.loc 1 1447 35
 3161 01cc 7B68     		ldr	r3, [r7, #4]
 3162 01ce 9A64     		str	r2, [r3, #72]
1448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3163              		.loc 1 1448 1
 3164 01d0 00BF     		nop
 3165 01d2 0837     		adds	r7, r7, #8
 3166              		.cfi_def_cfa_offset 8
 3167 01d4 BD46     		mov	sp, r7
 3168              		.cfi_def_cfa_register 13
 3169              		@ sp needed
 3170 01d6 80BD     		pop	{r7, pc}
 3171              	.L197:
 3172              		.align	2
ARM GAS  /tmp/ccDJQnZC.s 			page 83


 3173              	.L196:
 3174 01d8 00440258 		.word	1476543488
 3175              		.cfi_endproc
 3176              	.LFE144:
 3178              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 3179              		.align	1
 3180              		.global	HAL_RCC_GetClockConfig
 3181              		.syntax unified
 3182              		.thumb
 3183              		.thumb_func
 3184              		.fpu fpv5-d16
 3186              	HAL_RCC_GetClockConfig:
 3187              	.LFB145:
1449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * RCC configuration registers.
1453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct: pointer to an RCC_ClkInitTypeDef structure that
1454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * will be configured.
1455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @param  pFLatency: Pointer on the Flash Latency.
1456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3188              		.loc 1 1459 1
 3189              		.cfi_startproc
 3190              		@ args = 0, pretend = 0, frame = 8
 3191              		@ frame_needed = 1, uses_anonymous_args = 0
 3192              		@ link register save eliminated.
 3193 0000 80B4     		push	{r7}
 3194              		.cfi_def_cfa_offset 4
 3195              		.cfi_offset 7, -4
 3196 0002 83B0     		sub	sp, sp, #12
 3197              		.cfi_def_cfa_offset 16
 3198 0004 00AF     		add	r7, sp, #0
 3199              		.cfi_def_cfa_register 7
 3200 0006 7860     		str	r0, [r7, #4]
 3201 0008 3960     		str	r1, [r7]
1460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 
 3202              		.loc 1 1461 32
 3203 000a 7B68     		ldr	r3, [r7, #4]
 3204 000c 3F22     		movs	r2, #63
 3205 000e 1A60     		str	r2, [r3]
1462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****                                  RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;
1463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 3206              		.loc 1 1465 51
 3207 0010 1A4B     		ldr	r3, .L199
 3208 0012 1B69     		ldr	r3, [r3, #16]
 3209              		.loc 1 1465 37
 3210 0014 03F00702 		and	r2, r3, #7
 3211              		.loc 1 1465 35
 3212 0018 7B68     		ldr	r3, [r7, #4]
 3213 001a 5A60     		str	r2, [r3, #4]
1466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
ARM GAS  /tmp/ccDJQnZC.s 			page 84


1467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the SYSCLK configuration ----------------------------------------------*/
1468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
 3214              		.loc 1 1468 52
 3215 001c 174B     		ldr	r3, .L199
 3216 001e 9B69     		ldr	r3, [r3, #24]
 3217              		.loc 1 1468 38
 3218 0020 03F47062 		and	r2, r3, #3840
 3219              		.loc 1 1468 36
 3220 0024 7B68     		ldr	r3, [r7, #4]
 3221 0026 9A60     		str	r2, [r3, #8]
1469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the D1HCLK configuration ----------------------------------------------*/
1471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
 3222              		.loc 1 1471 52
 3223 0028 144B     		ldr	r3, .L199
 3224 002a 9B69     		ldr	r3, [r3, #24]
 3225              		.loc 1 1471 38
 3226 002c 03F00F02 		and	r2, r3, #15
 3227              		.loc 1 1471 36
 3228 0030 7B68     		ldr	r3, [r7, #4]
 3229 0032 DA60     		str	r2, [r3, #12]
1472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB3 configuration ----------------------------------------------*/
1474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
 3230              		.loc 1 1474 53
 3231 0034 114B     		ldr	r3, .L199
 3232 0036 9B69     		ldr	r3, [r3, #24]
 3233              		.loc 1 1474 39
 3234 0038 03F07002 		and	r2, r3, #112
 3235              		.loc 1 1474 37
 3236 003c 7B68     		ldr	r3, [r7, #4]
 3237 003e 1A61     		str	r2, [r3, #16]
1475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
 3238              		.loc 1 1477 53
 3239 0040 0E4B     		ldr	r3, .L199
 3240 0042 DB69     		ldr	r3, [r3, #28]
 3241              		.loc 1 1477 39
 3242 0044 03F07002 		and	r2, r3, #112
 3243              		.loc 1 1477 37
 3244 0048 7B68     		ldr	r3, [r7, #4]
 3245 004a 5A61     		str	r2, [r3, #20]
1478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
 3246              		.loc 1 1480 53
 3247 004c 0B4B     		ldr	r3, .L199
 3248 004e DB69     		ldr	r3, [r3, #28]
 3249              		.loc 1 1480 39
 3250 0050 03F4E062 		and	r2, r3, #1792
 3251              		.loc 1 1480 37
 3252 0054 7B68     		ldr	r3, [r7, #4]
 3253 0056 9A61     		str	r2, [r3, #24]
1481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the APB4 configuration ----------------------------------------------*/
1483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
ARM GAS  /tmp/ccDJQnZC.s 			page 85


 3254              		.loc 1 1483 53
 3255 0058 084B     		ldr	r3, .L199
 3256 005a 1B6A     		ldr	r3, [r3, #32]
 3257              		.loc 1 1483 39
 3258 005c 03F07002 		and	r2, r3, #112
 3259              		.loc 1 1483 37
 3260 0060 7B68     		ldr	r3, [r7, #4]
 3261 0062 DA61     		str	r2, [r3, #28]
1484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 3262              		.loc 1 1487 32
 3263 0064 064B     		ldr	r3, .L199+4
 3264 0066 1B68     		ldr	r3, [r3]
 3265              		.loc 1 1487 16
 3266 0068 03F00F02 		and	r2, r3, #15
 3267              		.loc 1 1487 14
 3268 006c 3B68     		ldr	r3, [r7]
 3269 006e 1A60     		str	r2, [r3]
1488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3270              		.loc 1 1488 1
 3271 0070 00BF     		nop
 3272 0072 0C37     		adds	r7, r7, #12
 3273              		.cfi_def_cfa_offset 4
 3274 0074 BD46     		mov	sp, r7
 3275              		.cfi_def_cfa_register 13
 3276              		@ sp needed
 3277 0076 5DF8047B 		ldr	r7, [sp], #4
 3278              		.cfi_restore 7
 3279              		.cfi_def_cfa_offset 0
 3280 007a 7047     		bx	lr
 3281              	.L200:
 3282              		.align	2
 3283              	.L199:
 3284 007c 00440258 		.word	1476543488
 3285 0080 00200052 		.word	1375739904
 3286              		.cfi_endproc
 3287              	.LFE145:
 3289              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 3290              		.align	1
 3291              		.global	HAL_RCC_NMI_IRQHandler
 3292              		.syntax unified
 3293              		.thumb
 3294              		.thumb_func
 3295              		.fpu fpv5-d16
 3297              	HAL_RCC_NMI_IRQHandler:
 3298              	.LFB146:
1489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval None
1494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3299              		.loc 1 1496 1
ARM GAS  /tmp/ccDJQnZC.s 			page 86


 3300              		.cfi_startproc
 3301              		@ args = 0, pretend = 0, frame = 0
 3302              		@ frame_needed = 1, uses_anonymous_args = 0
 3303 0000 80B5     		push	{r7, lr}
 3304              		.cfi_def_cfa_offset 8
 3305              		.cfi_offset 7, -8
 3306              		.cfi_offset 14, -4
 3307 0002 00AF     		add	r7, sp, #0
 3308              		.cfi_def_cfa_register 7
1497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 3309              		.loc 1 1498 6
 3310 0004 074B     		ldr	r3, .L204
 3311 0006 5B6E     		ldr	r3, [r3, #100]
 3312 0008 03F48063 		and	r3, r3, #1024
 3313              		.loc 1 1498 5
 3314 000c B3F5806F 		cmp	r3, #1024
 3315 0010 05D1     		bne	.L203
1499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   {
1500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     HAL_RCC_CCSCallback();
 3316              		.loc 1 1501 5
 3317 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 3318              		.loc 1 1504 5
 3319 0016 034B     		ldr	r3, .L204
 3320 0018 4FF48062 		mov	r2, #1024
 3321 001c 9A66     		str	r2, [r3, #104]
 3322              	.L203:
1505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   }
1506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3323              		.loc 1 1506 1
 3324 001e 00BF     		nop
 3325 0020 80BD     		pop	{r7, pc}
 3326              	.L205:
 3327 0022 00BF     		.align	2
 3328              	.L204:
 3329 0024 00440258 		.word	1476543488
 3330              		.cfi_endproc
 3331              	.LFE146:
 3333              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 3334              		.align	1
 3335              		.weak	HAL_RCC_CSSCallback
 3336              		.syntax unified
 3337              		.thumb
 3338              		.thumb_func
 3339              		.fpu fpv5-d16
 3341              	HAL_RCC_CSSCallback:
 3342              	.LFB147:
1507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** 
1508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** /**
1509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   * @retval none
1511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   */
1512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** __weak void HAL_RCC_CCSCallback(void)
ARM GAS  /tmp/ccDJQnZC.s 			page 87


1513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** {
 3343              		.loc 1 1513 1
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 0
 3346              		@ frame_needed = 1, uses_anonymous_args = 0
 3347              		@ link register save eliminated.
 3348 0000 80B4     		push	{r7}
 3349              		.cfi_def_cfa_offset 4
 3350              		.cfi_offset 7, -4
 3351 0002 00AF     		add	r7, sp, #0
 3352              		.cfi_def_cfa_register 7
1514:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****             the HAL_RCC_CCSCallback could be implemented in the user file
1516:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c ****    */
1517:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c **** }
 3353              		.loc 1 1517 1
 3354 0004 00BF     		nop
 3355 0006 BD46     		mov	sp, r7
 3356              		.cfi_def_cfa_register 13
 3357              		@ sp needed
 3358 0008 5DF8047B 		ldr	r7, [sp], #4
 3359              		.cfi_restore 7
 3360              		.cfi_def_cfa_offset 0
 3361 000c 7047     		bx	lr
 3362              		.cfi_endproc
 3363              	.LFE147:
 3365              		.text
 3366              	.Letext0:
 3367              		.file 2 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/ma
 3368              		.file 3 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3369              		.file 4 "./Drivers/CMSIS/Include/core_cm7.h"
 3370              		.file 5 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3371              		.file 6 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 3372              		.file 7 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.
 3373              		.file 8 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3374              		.file 9 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 3375              		.file 10 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 3376              		.file 11 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/m
 3377              		.file 12 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3378              		.file 13 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 3379              		.file 14 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3380              		.file 15 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccDJQnZC.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_rcc.c
     /tmp/ccDJQnZC.s:17     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccDJQnZC.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccDJQnZC.s:332    .text.HAL_RCC_DeInit:00000000000001c8 $d
     /tmp/ccDJQnZC.s:343    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccDJQnZC.s:350    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccDJQnZC.s:769    .text.HAL_RCC_OscConfig:000000000000028c $d
     /tmp/ccDJQnZC.s:772    .text.HAL_RCC_OscConfig:0000000000000290 $t
     /tmp/ccDJQnZC.s:1184   .text.HAL_RCC_OscConfig:0000000000000514 $d
     /tmp/ccDJQnZC.s:1188   .text.HAL_RCC_OscConfig:000000000000051c $t
     /tmp/ccDJQnZC.s:1532   .text.HAL_RCC_OscConfig:0000000000000764 $d
     /tmp/ccDJQnZC.s:1539   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccDJQnZC.s:1546   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccDJQnZC.s:1923   .text.HAL_RCC_ClockConfig:0000000000000240 $d
     /tmp/ccDJQnZC.s:1927   .text.HAL_RCC_ClockConfig:0000000000000248 $t
     /tmp/ccDJQnZC.s:2315   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccDJQnZC.s:2080   .text.HAL_RCC_ClockConfig:0000000000000334 $d
     /tmp/ccDJQnZC.s:2087   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccDJQnZC.s:2094   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccDJQnZC.s:2217   .text.HAL_RCC_MCOConfig:00000000000000c8 $d
     /tmp/ccDJQnZC.s:2224   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccDJQnZC.s:2231   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccDJQnZC.s:2261   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccDJQnZC.s:2266   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccDJQnZC.s:2273   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccDJQnZC.s:2303   .text.HAL_RCC_DisableCSS:000000000000001c $d
     /tmp/ccDJQnZC.s:2308   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccDJQnZC.s:2341   .text.HAL_RCC_GetSysClockFreq:000000000000001c $d
     /tmp/ccDJQnZC.s:2366   .text.HAL_RCC_GetSysClockFreq:0000000000000080 $t
     /tmp/ccDJQnZC.s:2675   .text.HAL_RCC_GetSysClockFreq:00000000000002c8 $d
     /tmp/ccDJQnZC.s:2687   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccDJQnZC.s:2694   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccDJQnZC.s:2733   .text.HAL_RCC_GetHCLKFreq:000000000000002c $d
     /tmp/ccDJQnZC.s:2740   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccDJQnZC.s:2747   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccDJQnZC.s:2781   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccDJQnZC.s:2787   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccDJQnZC.s:2794   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccDJQnZC.s:2828   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccDJQnZC.s:2834   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccDJQnZC.s:2841   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccDJQnZC.s:3174   .text.HAL_RCC_GetOscConfig:00000000000001d8 $d
     /tmp/ccDJQnZC.s:3179   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccDJQnZC.s:3186   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccDJQnZC.s:3284   .text.HAL_RCC_GetClockConfig:000000000000007c $d
     /tmp/ccDJQnZC.s:3290   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccDJQnZC.s:3297   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccDJQnZC.s:3341   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccDJQnZC.s:3329   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccDJQnZC.s:3334   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
HAL_GetREVID
ARM GAS  /tmp/ccDJQnZC.s 			page 89


D1CorePrescTable
HAL_GPIO_Init
HAL_RCCEx_GetD1SysClockFreq
SystemD2Clock
