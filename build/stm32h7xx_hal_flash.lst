ARM GAS  /tmp/ccTRR5PT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_flash.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	pFlash,28,4
  17              		.section	.text.HAL_FLASH_Program,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_FLASH_Program
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	HAL_FLASH_Program:
  27              	.LFB134:
  28              		.file 1 "./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c"
   1:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
   2:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
   3:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @file    stm32h7xx_hal_flash.c
   4:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @author  MCD Application Team
   5:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Program operations functions
   9:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Memory Control functions
  10:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  12:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @verbatim
  13:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  14:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ==============================================================================
  16:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  17:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AXI I-Code and D-Code accesses
  18:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  21:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   [..] The FLASH main features are:
  22:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory read operations
  23:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  24:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Read / write protections
  25:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Option bytes programming
  26:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 266-bits word
  27:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****           (10 bits added per flash word)
  28:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  29:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                         ##### How to use this driver #####
  30:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ==============================================================================
ARM GAS  /tmp/ccTRR5PT.s 			page 2


  31:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  32:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  33:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       memory of all STM32H7xx devices.
  34:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  35:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions:
  36:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  37:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  38:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Program functions: 256-bit word only
  39:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) There Two modes of programming :
  40:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  41:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  42:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  43:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  44:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  45:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  46:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  47:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  48:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_FLASH_GetError()
  49:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  50:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       (#) Option bytes management functions :
  51:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  52:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  53:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  54:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 In this case, a reset is generated
  55:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
  56:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  57:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       to handle the following operations:
  58:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Set the latency
  59:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  60:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  61:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      [..]
  62:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) For any Flash memory program operation (erase or program), the CPU clock frequency
  63:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         (HCLK) must be at least 1MHz.
  64:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The contents of the Flash memory are not guaranteed if a device reset occurs during
  65:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         a Flash memory operation.
  66:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     (@) The application can simultaneously request a read and a write operation through each AXI
  67:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         interface.
  68:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         As the Flash memory is divided into two independent banks, the embedded Flash
  69:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         memory interface can drive different operations at the same time on each bank. For
  70:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         example a read, write or erase operation can be executed on bank 1 while another read,
  71:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         write or erase operation is executed on bank 2.
  72:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  73:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  @endverbatim
  74:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  75:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @attention
  76:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  77:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics.
  78:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * All rights reserved.</center></h2>
  79:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  80:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  81:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * the "License"; You may not use this file except in compliance with the
  82:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * License. You may obtain a copy of the License at:
  83:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                       opensource.org/licenses/BSD-3-Clause
  84:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
  85:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   ******************************************************************************
  86:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  87:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 3


  88:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  89:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #include "stm32h7xx_hal.h"
  90:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  91:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup STM32H7xx_HAL_Driver
  92:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  93:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  94:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
  95:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH FLASH
  96:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief FLASH HAL module driver
  97:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
  98:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
  99:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 100:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 101:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 102:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 103:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 104:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 105:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 106:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 107:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE              50000U /* 50 s */
 108:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 109:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 110:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 111:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 112:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 113:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 114:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 115:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Exported functions ---------------------------------------------------------*/
 116:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 117:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported functions
 118:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 119:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 120:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 121:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 122:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Programming operation functions
 123:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 124:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 125:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 126:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                   ##### Programming operation functions #####
 127:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 128:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 129:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 130:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     program operations.
 131:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 132:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 133:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 134:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 135:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 136:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 137:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program flash word of 256 bits at a specified address
 138:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 139:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *         This parameter can be a value of @ref FLASH_Type_Program
 140:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 141:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data (256 bits) to be programmed
 142:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 143:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 144:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
ARM GAS  /tmp/ccTRR5PT.s 			page 4


 145:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAddre
 146:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
  29              		.loc 1 146 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              		.cfi_def_cfa_offset 48
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 B960     		str	r1, [r7, #8]
  43 000a 7A60     		str	r2, [r7, #4]
 147:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 148:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)FlashAddress;
  44              		.loc 1 148 18
  45 000c BB68     		ldr	r3, [r7, #8]
  46 000e 3B62     		str	r3, [r7, #32]
 149:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
  47              		.loc 1 149 18
  48 0010 7B68     		ldr	r3, [r7, #4]
  49 0012 FB61     		str	r3, [r7, #28]
 150:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 151:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
  50              		.loc 1 151 11
  51 0014 0823     		movs	r3, #8
  52 0016 FB75     		strb	r3, [r7, #23]
 152:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 153:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 154:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 155:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 156:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 157:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 158:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
  53              		.loc 1 158 3
  54 0018 384B     		ldr	r3, .L11
  55 001a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  56 001c 012B     		cmp	r3, #1
  57 001e 01D1     		bne	.L2
  58              		.loc 1 158 3 is_stmt 0 discriminator 1
  59 0020 0223     		movs	r3, #2
  60 0022 67E0     		b	.L3
  61              	.L2:
  62              		.loc 1 158 3 discriminator 2
  63 0024 354B     		ldr	r3, .L11
  64 0026 0122     		movs	r2, #1
  65 0028 1A75     		strb	r2, [r3, #20]
 159:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 160:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
  66              		.loc 1 160 5 is_stmt 1 discriminator 2
  67 002a BB68     		ldr	r3, [r7, #8]
  68 002c B3F1006F 		cmp	r3, #134217728
  69 0030 06D3     		bcc	.L4
ARM GAS  /tmp/ccTRR5PT.s 			page 5


  70              		.loc 1 160 6 discriminator 1
  71 0032 BB68     		ldr	r3, [r7, #8]
  72 0034 B3F1016F 		cmp	r3, #135266304
  73 0038 02D2     		bcs	.L4
 161:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 162:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
  74              		.loc 1 162 10
  75 003a 0123     		movs	r3, #1
  76 003c BB61     		str	r3, [r7, #24]
  77 003e 01E0     		b	.L5
  78              	.L4:
 163:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 164:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 165:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 166:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
  79              		.loc 1 166 10
  80 0040 0223     		movs	r3, #2
  81 0042 BB61     		str	r3, [r7, #24]
  82              	.L5:
 167:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 168:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 169:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 170:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
  83              		.loc 1 170 20
  84 0044 2D4B     		ldr	r3, .L11
  85 0046 0022     		movs	r2, #0
  86 0048 9A61     		str	r2, [r3, #24]
 171:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 172:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 173:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
  87              		.loc 1 173 12
  88 004a B969     		ldr	r1, [r7, #24]
  89 004c 4CF25030 		movw	r0, #50000
  90 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  91 0054 0346     		mov	r3, r0
  92 0056 87F82730 		strb	r3, [r7, #39]
 174:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 175:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(status == HAL_OK)
  93              		.loc 1 175 5
  94 005a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  95 005e 002B     		cmp	r3, #0
  96 0060 43D1     		bne	.L6
 176:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 177:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
  97              		.loc 1 177 7
  98 0062 BB69     		ldr	r3, [r7, #24]
  99 0064 012B     		cmp	r3, #1
 100 0066 06D1     		bne	.L7
 178:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 179:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 180:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
 101              		.loc 1 180 7
 102 0068 254B     		ldr	r3, .L11+4
 103 006a DB68     		ldr	r3, [r3, #12]
 104 006c 244A     		ldr	r2, .L11+4
 105 006e 43F00203 		orr	r3, r3, #2
 106 0072 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccTRR5PT.s 			page 6


 107 0074 07E0     		b	.L8
 108              	.L7:
 181:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 182:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 183:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 184:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 185:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 109              		.loc 1 185 7
 110 0076 224B     		ldr	r3, .L11+4
 111 0078 D3F80C31 		ldr	r3, [r3, #268]
 112 007c 204A     		ldr	r2, .L11+4
 113 007e 43F00203 		orr	r3, r3, #2
 114 0082 C2F80C31 		str	r3, [r2, #268]
 115              	.L8:
 116              	.LBB18:
 117              	.LBB19:
 118              		.file 2 "./Drivers/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:./Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccTRR5PT.s 			page 7


  41:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:./Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccTRR5PT.s 			page 8


  98:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccTRR5PT.s 			page 9


 155:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccTRR5PT.s 			page 10


 212:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 220:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  /tmp/ccTRR5PT.s 			page 11


 269:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 277:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccTRR5PT.s 			page 12


 326:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 334:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 13


 383:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  /tmp/ccTRR5PT.s 			page 14


 440:./Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  /tmp/ccTRR5PT.s 			page 15


 497:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  /tmp/ccTRR5PT.s 			page 16


 554:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  /tmp/ccTRR5PT.s 			page 17


 611:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:./Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:./Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 18


 668:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:./Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:./Drivers/CMSIS/Include/cmsis_gcc.h **** */
 676:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:./Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  /tmp/ccTRR5PT.s 			page 19


 725:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 733:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:./Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:./Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 119              		.loc 2 742 3
 120              		.syntax unified
 121              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 122 0086 BFF36F8F 		isb 0xF
 123              	@ 0 "" 2
 124              		.thumb
 125              		.syntax unified
 126              	.LBE19:
 127              	.LBE18:
 128              	.LBB20:
 129              	.LBB21:
 743:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:./Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 130              		.loc 2 753 3
 131              		.syntax unified
 132              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 133 008a BFF34F8F 		dsb 0xF
 134              	@ 0 "" 2
 135              		.thumb
 136              		.syntax unified
 137              	.L9:
 138              	.LBE21:
 139              	.LBE20:
 186:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 187:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 188:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 189:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 190:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 191:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Program the 256 bits flash word */
 192:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     do
ARM GAS  /tmp/ccTRR5PT.s 			page 20


 193:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 194:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *dest_addr = *src_addr;
 140              		.loc 1 194 20 discriminator 1
 141 008e FB69     		ldr	r3, [r7, #28]
 142 0090 1A68     		ldr	r2, [r3]
 143              		.loc 1 194 18 discriminator 1
 144 0092 3B6A     		ldr	r3, [r7, #32]
 145 0094 1A60     		str	r2, [r3]
 195:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       dest_addr++;
 146              		.loc 1 195 16 discriminator 1
 147 0096 3B6A     		ldr	r3, [r7, #32]
 148 0098 0433     		adds	r3, r3, #4
 149 009a 3B62     		str	r3, [r7, #32]
 196:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       src_addr++;
 150              		.loc 1 196 15 discriminator 1
 151 009c FB69     		ldr	r3, [r7, #28]
 152 009e 0433     		adds	r3, r3, #4
 153 00a0 FB61     		str	r3, [r7, #28]
 197:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       row_index--;
 154              		.loc 1 197 16 discriminator 1
 155 00a2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 156 00a4 013B     		subs	r3, r3, #1
 157 00a6 FB75     		strb	r3, [r7, #23]
 198:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } while (row_index != 0U);
 158              		.loc 1 198 5 discriminator 1
 159 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 160 00aa 002B     		cmp	r3, #0
 161 00ac EFD1     		bne	.L9
 162              	.LBB22:
 163              	.LBB23:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 164              		.loc 2 742 3
 165              		.syntax unified
 166              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 167 00ae BFF36F8F 		isb 0xF
 168              	@ 0 "" 2
 169              		.thumb
 170              		.syntax unified
 171              	.LBE23:
 172              	.LBE22:
 173              	.LBB24:
 174              	.LBB25:
 175              		.loc 2 753 3
 176              		.syntax unified
 177              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 178 00b2 BFF34F8F 		dsb 0xF
 179              	@ 0 "" 2
 180              		.thumb
 181              		.syntax unified
 182              	.LBE25:
 183              	.LBE24:
 199:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 200:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 201:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 202:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 203:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 204:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
ARM GAS  /tmp/ccTRR5PT.s 			page 21


 184              		.loc 1 204 14
 185 00b6 B969     		ldr	r1, [r7, #24]
 186 00b8 4CF25030 		movw	r0, #50000
 187 00bc FFF7FEFF 		bl	FLASH_WaitForLastOperation
 188 00c0 0346     		mov	r3, r0
 189 00c2 87F82730 		strb	r3, [r7, #39]
 205:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 206:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 190              		.loc 1 206 7
 191 00c6 BB69     		ldr	r3, [r7, #24]
 192 00c8 012B     		cmp	r3, #1
 193 00ca 06D1     		bne	.L10
 207:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 208:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG*/
 209:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR1, FLASH_CR_PG);
 194              		.loc 1 209 7
 195 00cc 0C4B     		ldr	r3, .L11+4
 196 00ce DB68     		ldr	r3, [r3, #12]
 197 00d0 0B4A     		ldr	r2, .L11+4
 198 00d2 23F00203 		bic	r3, r3, #2
 199 00d6 D360     		str	r3, [r2, #12]
 200 00d8 07E0     		b	.L6
 201              	.L10:
 210:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 211:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 212:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 213:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* If the program operation is completed, disable the PG */
 214:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR2, FLASH_CR_PG);
 202              		.loc 1 214 7
 203 00da 094B     		ldr	r3, .L11+4
 204 00dc D3F80C31 		ldr	r3, [r3, #268]
 205 00e0 074A     		ldr	r2, .L11+4
 206 00e2 23F00203 		bic	r3, r3, #2
 207 00e6 C2F80C31 		str	r3, [r2, #268]
 208              	.L6:
 215:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 216:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 217:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 218:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Unlocked */
 219:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 209              		.loc 1 219 3
 210 00ea 044B     		ldr	r3, .L11
 211 00ec 0022     		movs	r2, #0
 212 00ee 1A75     		strb	r2, [r3, #20]
 220:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 221:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 213              		.loc 1 221 10
 214 00f0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 215              	.L3:
 222:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 216              		.loc 1 222 1
 217 00f4 1846     		mov	r0, r3
 218 00f6 2837     		adds	r7, r7, #40
 219              		.cfi_def_cfa_offset 8
 220 00f8 BD46     		mov	sp, r7
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
ARM GAS  /tmp/ccTRR5PT.s 			page 22


 223 00fa 80BD     		pop	{r7, pc}
 224              	.L12:
 225              		.align	2
 226              	.L11:
 227 00fc 00000000 		.word	pFlash
 228 0100 00200052 		.word	1375739904
 229              		.cfi_endproc
 230              	.LFE134:
 232              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_FLASH_Program_IT
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv5-d16
 240              	HAL_FLASH_Program_IT:
 241              	.LFB135:
 223:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 224:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 225:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Program flash words of 256 bits at a specified address with interrupt enabled.
 226:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 227:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                      This parameter can be a value of @ref FLASH_Type_Program
 228:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  FlashAddress specifies the address to be programmed.
 229:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  DataAddress specifies the address of data (256 bits) to be programmed
 230:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 231:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 232:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 233:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t FlashAddress, uint32_t DataAd
 234:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 242              		.loc 1 234 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 32
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 88B0     		sub	sp, sp, #32
 251              		.cfi_def_cfa_offset 40
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 254 0006 F860     		str	r0, [r7, #12]
 255 0008 B960     		str	r1, [r7, #8]
 256 000a 7A60     		str	r2, [r7, #4]
 235:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 236:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)FlashAddress;
 257              		.loc 1 236 18
 258 000c BB68     		ldr	r3, [r7, #8]
 259 000e FB61     		str	r3, [r7, #28]
 237:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 260              		.loc 1 237 18
 261 0010 7B68     		ldr	r3, [r7, #4]
 262 0012 BB61     		str	r3, [r7, #24]
 238:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bank;
 239:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint8_t row_index = FLASH_NB_32BITWORD_IN_FLASHWORD;
 263              		.loc 1 239 11
 264 0014 0823     		movs	r3, #8
ARM GAS  /tmp/ccTRR5PT.s 			page 23


 265 0016 FB74     		strb	r3, [r7, #19]
 240:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 241:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check the parameters */
 242:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 243:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(FlashAddress));
 244:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 245:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Process Locked */
 246:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 266              		.loc 1 246 3
 267 0018 364B     		ldr	r3, .L23
 268 001a 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 269 001c 012B     		cmp	r3, #1
 270 001e 01D1     		bne	.L14
 271              		.loc 1 246 3 is_stmt 0 discriminator 1
 272 0020 0223     		movs	r3, #2
 273 0022 62E0     		b	.L15
 274              	.L14:
 275              		.loc 1 246 3 discriminator 2
 276 0024 334B     		ldr	r3, .L23
 277 0026 0122     		movs	r2, #1
 278 0028 1A75     		strb	r2, [r3, #20]
 247:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 248:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Reset error code */
 249:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 279              		.loc 1 249 20 is_stmt 1 discriminator 2
 280 002a 324B     		ldr	r3, .L23
 281 002c 0022     		movs	r2, #0
 282 002e 9A61     		str	r2, [r3, #24]
 250:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 251:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(IS_FLASH_PROGRAM_ADDRESS_BANK1(FlashAddress))
 283              		.loc 1 251 5 discriminator 2
 284 0030 BB68     		ldr	r3, [r7, #8]
 285 0032 B3F1006F 		cmp	r3, #134217728
 286 0036 06D3     		bcc	.L16
 287              		.loc 1 251 6 discriminator 1
 288 0038 BB68     		ldr	r3, [r7, #8]
 289 003a B3F1016F 		cmp	r3, #135266304
 290 003e 02D2     		bcs	.L16
 252:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 253:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_1;
 291              		.loc 1 253 10
 292 0040 0123     		movs	r3, #1
 293 0042 7B61     		str	r3, [r7, #20]
 294 0044 01E0     		b	.L17
 295              	.L16:
 254:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 255:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 256:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 257:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bank = FLASH_BANK_2;
 296              		.loc 1 257 10
 297 0046 0223     		movs	r3, #2
 298 0048 7B61     		str	r3, [r7, #20]
 299              	.L17:
 258:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 259:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 260:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 261:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, bank);
ARM GAS  /tmp/ccTRR5PT.s 			page 24


 300              		.loc 1 261 12
 301 004a 7969     		ldr	r1, [r7, #20]
 302 004c 4CF25030 		movw	r0, #50000
 303 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 304 0054 0346     		mov	r3, r0
 305 0056 BB74     		strb	r3, [r7, #18]
 262:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 263:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status != HAL_OK)
 306              		.loc 1 263 6
 307 0058 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 308 005a 002B     		cmp	r3, #0
 309 005c 03D0     		beq	.L18
 264:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 265:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 266:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 310              		.loc 1 266 5
 311 005e 254B     		ldr	r3, .L23
 312 0060 0022     		movs	r2, #0
 313 0062 1A75     		strb	r2, [r3, #20]
 314 0064 40E0     		b	.L19
 315              	.L18:
 267:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 268:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 269:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 270:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.Address = FlashAddress;
 316              		.loc 1 270 20
 317 0066 234A     		ldr	r2, .L23
 318 0068 BB68     		ldr	r3, [r7, #8]
 319 006a 1361     		str	r3, [r2, #16]
 271:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 272:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(bank == FLASH_BANK_1)
 320              		.loc 1 272 7
 321 006c 7B69     		ldr	r3, [r7, #20]
 322 006e 012B     		cmp	r3, #1
 323 0070 0FD1     		bne	.L20
 273:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 274:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 275:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK1;
 324              		.loc 1 275 31
 325 0072 204B     		ldr	r3, .L23
 326 0074 0322     		movs	r2, #3
 327 0076 1A70     		strb	r2, [r3]
 276:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 277:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 278:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR1, FLASH_CR_PG);
 328              		.loc 1 278 7
 329 0078 1F4B     		ldr	r3, .L23+4
 330 007a DB68     		ldr	r3, [r3, #12]
 331 007c 1E4A     		ldr	r2, .L23+4
 332 007e 43F00203 		orr	r3, r3, #2
 333 0082 D360     		str	r3, [r2, #12]
 279:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 280:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank 1 */
 281:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK1(FLASH_IT_EOP_BANK1     | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_
 334              		.loc 1 281 7
 335 0084 1C4B     		ldr	r3, .L23+4
 336 0086 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccTRR5PT.s 			page 25


 337 0088 1B4A     		ldr	r2, .L23+4
 338 008a 43F4DE03 		orr	r3, r3, #7274496
 339 008e D360     		str	r3, [r2, #12]
 340 0090 12E0     		b	.L21
 341              	.L20:
 282:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_B
 283:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 284:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 285:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 286:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set internal variables used by the IRQ handler */
 287:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_BANK2;
 342              		.loc 1 287 31
 343 0092 184B     		ldr	r3, .L23
 344 0094 0622     		movs	r2, #6
 345 0096 1A70     		strb	r2, [r3]
 288:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 289:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Set PG bit */
 290:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       SET_BIT(FLASH->CR2, FLASH_CR_PG);
 346              		.loc 1 290 7
 347 0098 174B     		ldr	r3, .L23+4
 348 009a D3F80C31 		ldr	r3, [r3, #268]
 349 009e 164A     		ldr	r2, .L23+4
 350 00a0 43F00203 		orr	r3, r3, #2
 351 00a4 C2F80C31 		str	r3, [r2, #268]
 291:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 292:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Enable End of Operation and Error interrupts for Bank2*/
 293:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_ENABLE_IT_BANK2(FLASH_IT_EOP_BANK2     | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_
 352              		.loc 1 293 7
 353 00a8 134B     		ldr	r3, .L23+4
 354 00aa D3F80C31 		ldr	r3, [r3, #268]
 355 00ae 124A     		ldr	r2, .L23+4
 356 00b0 43F4DE03 		orr	r3, r3, #7274496
 357 00b4 C2F80C31 		str	r3, [r2, #268]
 358              	.L21:
 359              	.LBB26:
 360              	.LBB27:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 361              		.loc 2 742 3
 362              		.syntax unified
 363              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 364 00b8 BFF36F8F 		isb 0xF
 365              	@ 0 "" 2
 366              		.thumb
 367              		.syntax unified
 368              	.LBE27:
 369              	.LBE26:
 370              	.LBB28:
 371              	.LBB29:
 372              		.loc 2 753 3
 373              		.syntax unified
 374              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 375 00bc BFF34F8F 		dsb 0xF
 376              	@ 0 "" 2
 377              		.thumb
 378              		.syntax unified
 379              	.L22:
 380              	.LBE29:
ARM GAS  /tmp/ccTRR5PT.s 			page 26


 381              	.LBE28:
 294:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                   FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_B
 295:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 296:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 297:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 298:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 299:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 300:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Program the 256 bits flash word */
 301:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     do
 302:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 303:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       *dest_addr = *src_addr;
 382              		.loc 1 303 20 discriminator 1
 383 00c0 BB69     		ldr	r3, [r7, #24]
 384 00c2 1A68     		ldr	r2, [r3]
 385              		.loc 1 303 18 discriminator 1
 386 00c4 FB69     		ldr	r3, [r7, #28]
 387 00c6 1A60     		str	r2, [r3]
 304:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       dest_addr++;
 388              		.loc 1 304 16 discriminator 1
 389 00c8 FB69     		ldr	r3, [r7, #28]
 390 00ca 0433     		adds	r3, r3, #4
 391 00cc FB61     		str	r3, [r7, #28]
 305:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       src_addr++;
 392              		.loc 1 305 15 discriminator 1
 393 00ce BB69     		ldr	r3, [r7, #24]
 394 00d0 0433     		adds	r3, r3, #4
 395 00d2 BB61     		str	r3, [r7, #24]
 306:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       row_index--;
 396              		.loc 1 306 16 discriminator 1
 397 00d4 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 398 00d6 013B     		subs	r3, r3, #1
 399 00d8 FB74     		strb	r3, [r7, #19]
 307:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     } while (row_index != 0U);
 400              		.loc 1 307 5 discriminator 1
 401 00da FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 402 00dc 002B     		cmp	r3, #0
 403 00de EFD1     		bne	.L22
 404              	.LBB30:
 405              	.LBB31:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 406              		.loc 2 742 3
 407              		.syntax unified
 408              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 409 00e0 BFF36F8F 		isb 0xF
 410              	@ 0 "" 2
 411              		.thumb
 412              		.syntax unified
 413              	.LBE31:
 414              	.LBE30:
 415              	.LBB32:
 416              	.LBB33:
 417              		.loc 2 753 3
 418              		.syntax unified
 419              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 420 00e4 BFF34F8F 		dsb 0xF
 421              	@ 0 "" 2
 422              		.thumb
ARM GAS  /tmp/ccTRR5PT.s 			page 27


 423              		.syntax unified
 424              	.L19:
 425              	.LBE33:
 426              	.LBE32:
 308:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 309:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __ISB();
 310:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __DSB();
 311:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 312:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 313:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 427              		.loc 1 313 10
 428 00e8 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 429              	.L15:
 314:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 430              		.loc 1 314 1
 431 00ea 1846     		mov	r0, r3
 432 00ec 2037     		adds	r7, r7, #32
 433              		.cfi_def_cfa_offset 8
 434 00ee BD46     		mov	sp, r7
 435              		.cfi_def_cfa_register 13
 436              		@ sp needed
 437 00f0 80BD     		pop	{r7, pc}
 438              	.L24:
 439 00f2 00BF     		.align	2
 440              	.L23:
 441 00f4 00000000 		.word	pFlash
 442 00f8 00200052 		.word	1375739904
 443              		.cfi_endproc
 444              	.LFE135:
 446              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 447              		.align	1
 448              		.global	HAL_FLASH_IRQHandler
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv5-d16
 454              	HAL_FLASH_IRQHandler:
 455              	.LFB136:
 315:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 316:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 317:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 318:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 319:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 320:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 321:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 456              		.loc 1 321 1
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 16
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460 0000 80B5     		push	{r7, lr}
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 7, -8
 463              		.cfi_offset 14, -4
 464 0002 84B0     		sub	sp, sp, #16
 465              		.cfi_def_cfa_offset 24
 466 0004 00AF     		add	r7, sp, #0
 467              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccTRR5PT.s 			page 28


 322:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t temp;
 323:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t errorflag;
 324:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 325:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 326:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 End of Operation flag  */
 327:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK1(FLASH_SR_EOP) != RESET)
 468              		.loc 1 327 6
 469 0006 954B     		ldr	r3, .L52
 470 0008 1B69     		ldr	r3, [r3, #16]
 471 000a 03F48033 		and	r3, r3, #65536
 472              		.loc 1 327 5
 473 000e B3F5803F 		cmp	r3, #65536
 474 0012 5CD1     		bne	.L26
 328:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 329:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK1)
 475              		.loc 1 329 14
 476 0014 924B     		ldr	r3, .L52+4
 477 0016 1B78     		ldrb	r3, [r3]
 478 0018 DBB2     		uxtb	r3, r3
 479              		.loc 1 329 7
 480 001a 012B     		cmp	r3, #1
 481 001c 32D1     		bne	.L27
 330:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 331:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 332:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 482              		.loc 1 332 13
 483 001e 904B     		ldr	r3, .L52+4
 484 0020 5B68     		ldr	r3, [r3, #4]
 485              		.loc 1 332 30
 486 0022 013B     		subs	r3, r3, #1
 487 0024 8E4A     		ldr	r2, .L52+4
 488 0026 5360     		str	r3, [r2, #4]
 333:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 334:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 335:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 489              		.loc 1 335 16
 490 0028 8D4B     		ldr	r3, .L52+4
 491 002a 5B68     		ldr	r3, [r3, #4]
 492              		.loc 1 335 9
 493 002c 002B     		cmp	r3, #0
 494 002e 18D0     		beq	.L28
 336:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 337:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Indicate user which sector has been erased */
 338:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 495              		.loc 1 338 9
 496 0030 8B4B     		ldr	r3, .L52+4
 497 0032 DB68     		ldr	r3, [r3, #12]
 498 0034 1846     		mov	r0, r3
 499 0036 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 339:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 340:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 1 End of Operation pending bit */
 341:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 500              		.loc 1 341 9
 501 003a 884B     		ldr	r3, .L52
 502 003c 4FF48032 		mov	r2, #65536
 503 0040 5A61     		str	r2, [r3, #20]
 342:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 29


 343:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 344:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 504              		.loc 1 344 15
 505 0042 874B     		ldr	r3, .L52+4
 506 0044 DB68     		ldr	r3, [r3, #12]
 507              		.loc 1 344 22
 508 0046 0133     		adds	r3, r3, #1
 509 0048 854A     		ldr	r2, .L52+4
 510 004a D360     		str	r3, [r2, #12]
 345:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 511              		.loc 1 345 14
 512 004c 844B     		ldr	r3, .L52+4
 513 004e DB68     		ldr	r3, [r3, #12]
 514 0050 FB60     		str	r3, [r7, #12]
 346:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_1, pFlash.VoltageForErase);
 515              		.loc 1 346 9
 516 0052 834B     		ldr	r3, .L52+4
 517 0054 9B68     		ldr	r3, [r3, #8]
 518 0056 1A46     		mov	r2, r3
 519 0058 0121     		movs	r1, #1
 520 005a F868     		ldr	r0, [r7, #12]
 521 005c FFF7FEFF 		bl	FLASH_Erase_Sector
 522 0060 35E0     		b	.L26
 523              	.L28:
 347:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 348:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 349:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 350:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 351:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 352:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 524              		.loc 1 352 23
 525 0062 7F4B     		ldr	r3, .L52+4
 526 0064 4FF0FF32 		mov	r2, #-1
 527 0068 DA60     		str	r2, [r3, #12]
 353:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 528              		.loc 1 353 33
 529 006a 7D4B     		ldr	r3, .L52+4
 530 006c 0022     		movs	r2, #0
 531 006e 1A70     		strb	r2, [r3]
 354:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 355:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 356:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 532              		.loc 1 356 9
 533 0070 7B4B     		ldr	r3, .L52+4
 534 0072 DB68     		ldr	r3, [r3, #12]
 535 0074 1846     		mov	r0, r3
 536 0076 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 357:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 358:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 359:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 537              		.loc 1 359 9
 538 007a 784B     		ldr	r3, .L52
 539 007c 4FF48032 		mov	r2, #65536
 540 0080 5A61     		str	r2, [r3, #20]
 541 0082 24E0     		b	.L26
 542              	.L27:
 360:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
ARM GAS  /tmp/ccTRR5PT.s 			page 30


 361:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 362:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 363:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 364:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 543              		.loc 1 364 17
 544 0084 764B     		ldr	r3, .L52+4
 545 0086 1B78     		ldrb	r3, [r3]
 546 0088 FB72     		strb	r3, [r7, #11]
 365:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 366:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 547              		.loc 1 366 9
 548 008a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 549 008c 022B     		cmp	r3, #2
 550 008e 02D0     		beq	.L30
 551              		.loc 1 366 52 discriminator 1
 552 0090 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 553 0092 072B     		cmp	r3, #7
 554 0094 03D1     		bne	.L31
 555              	.L30:
 367:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 368:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 369:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 370:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_1);
 556              		.loc 1 370 9
 557 0096 0120     		movs	r0, #1
 558 0098 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 559 009c 07E0     		b	.L32
 560              	.L31:
 371:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 372:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK1)
 561              		.loc 1 372 14
 562 009e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 563 00a0 032B     		cmp	r3, #3
 564 00a2 04D1     		bne	.L32
 373:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 374:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
 375:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 376:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 565              		.loc 1 376 9
 566 00a4 6E4B     		ldr	r3, .L52+4
 567 00a6 1B69     		ldr	r3, [r3, #16]
 568 00a8 1846     		mov	r0, r3
 569 00aa FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 570              	.L32:
 377:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 378:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 379:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 380:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 381:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 382:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 383:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK2) && \
 571              		.loc 1 383 9
 572 00ae FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 573 00b0 042B     		cmp	r3, #4
 574 00b2 0CD0     		beq	.L26
 575              		.loc 1 383 52 discriminator 1
 576 00b4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccTRR5PT.s 			page 31


 577 00b6 052B     		cmp	r3, #5
 578 00b8 09D0     		beq	.L26
 384:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK2) && \
 579              		.loc 1 384 52
 580 00ba FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 581 00bc 062B     		cmp	r3, #6
 582 00be 06D0     		beq	.L26
 385:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK2))
 386:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 387:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 583              		.loc 1 387 33
 584 00c0 674B     		ldr	r3, .L52+4
 585 00c2 0022     		movs	r2, #0
 586 00c4 1A70     		strb	r2, [r3]
 388:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 389:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 587              		.loc 1 389 9
 588 00c6 654B     		ldr	r3, .L52
 589 00c8 4FF48032 		mov	r2, #65536
 590 00cc 5A61     		str	r2, [r3, #20]
 591              	.L26:
 390:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 391:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 392:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 393:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 394:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 End of Operation flag  */
 395:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG_BANK2(FLASH_SR_EOP) != RESET)
 592              		.loc 1 395 6
 593 00ce 634B     		ldr	r3, .L52
 594 00d0 D3F81031 		ldr	r3, [r3, #272]
 595 00d4 03F48033 		and	r3, r3, #65536
 596              		.loc 1 395 5
 597 00d8 B3F5803F 		cmp	r3, #65536
 598 00dc 5FD1     		bne	.L33
 396:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 397:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_SECTERASE_BANK2)
 599              		.loc 1 397 14
 600 00de 604B     		ldr	r3, .L52+4
 601 00e0 1B78     		ldrb	r3, [r3]
 602 00e2 DBB2     		uxtb	r3, r3
 603              		.loc 1 397 7
 604 00e4 042B     		cmp	r3, #4
 605 00e6 34D1     		bne	.L34
 398:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 399:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*Nb of sector to erased can be decreased*/
 400:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.NbSectorsToErase--;
 606              		.loc 1 400 13
 607 00e8 5D4B     		ldr	r3, .L52+4
 608 00ea 5B68     		ldr	r3, [r3, #4]
 609              		.loc 1 400 30
 610 00ec 013B     		subs	r3, r3, #1
 611 00ee 5C4A     		ldr	r2, .L52+4
 612 00f0 5360     		str	r3, [r2, #4]
 401:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 402:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Check if there are still sectors to erase*/
 403:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(pFlash.NbSectorsToErase != 0U)
 613              		.loc 1 403 16
ARM GAS  /tmp/ccTRR5PT.s 			page 32


 614 00f2 5B4B     		ldr	r3, .L52+4
 615 00f4 5B68     		ldr	r3, [r3, #4]
 616              		.loc 1 403 9
 617 00f6 002B     		cmp	r3, #0
 618 00f8 19D0     		beq	.L35
 404:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 405:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Indicate user which sector has been erased*/
 406:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 619              		.loc 1 406 9
 620 00fa 594B     		ldr	r3, .L52+4
 621 00fc DB68     		ldr	r3, [r3, #12]
 622 00fe 1846     		mov	r0, r3
 623 0100 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 407:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 408:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear bank 2 End of Operation pending bit */
 409:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 624              		.loc 1 409 9
 625 0104 554B     		ldr	r3, .L52
 626 0106 4FF48032 		mov	r2, #65536
 627 010a C3F81421 		str	r2, [r3, #276]
 410:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 411:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*Increment sector number*/
 412:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector++;
 628              		.loc 1 412 15
 629 010e 544B     		ldr	r3, .L52+4
 630 0110 DB68     		ldr	r3, [r3, #12]
 631              		.loc 1 412 22
 632 0112 0133     		adds	r3, r3, #1
 633 0114 524A     		ldr	r2, .L52+4
 634 0116 D360     		str	r3, [r2, #12]
 413:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         temp = pFlash.Sector;
 635              		.loc 1 413 14
 636 0118 514B     		ldr	r3, .L52+4
 637 011a DB68     		ldr	r3, [r3, #12]
 638 011c FB60     		str	r3, [r7, #12]
 414:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         FLASH_Erase_Sector(temp, FLASH_BANK_2, pFlash.VoltageForErase);
 639              		.loc 1 414 9
 640 011e 504B     		ldr	r3, .L52+4
 641 0120 9B68     		ldr	r3, [r3, #8]
 642 0122 1A46     		mov	r2, r3
 643 0124 0221     		movs	r1, #2
 644 0126 F868     		ldr	r0, [r7, #12]
 645 0128 FFF7FEFF 		bl	FLASH_Erase_Sector
 646 012c 37E0     		b	.L33
 647              	.L35:
 415:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 416:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 417:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 418:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* No more sectors to Erase, user callback can be called */
 419:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Reset Sector and stop Erase sectors procedure */
 420:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 648              		.loc 1 420 23
 649 012e 4C4B     		ldr	r3, .L52+4
 650 0130 4FF0FF32 		mov	r2, #-1
 651 0134 DA60     		str	r2, [r3, #12]
 421:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 652              		.loc 1 421 33
ARM GAS  /tmp/ccTRR5PT.s 			page 33


 653 0136 4A4B     		ldr	r3, .L52+4
 654 0138 0022     		movs	r2, #0
 655 013a 1A70     		strb	r2, [r3]
 422:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 423:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 424:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Sector);
 656              		.loc 1 424 9
 657 013c 484B     		ldr	r3, .L52+4
 658 013e DB68     		ldr	r3, [r3, #12]
 659 0140 1846     		mov	r0, r3
 660 0142 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 425:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 426:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 427:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 661              		.loc 1 427 9
 662 0146 454B     		ldr	r3, .L52
 663 0148 4FF48032 		mov	r2, #65536
 664 014c C3F81421 		str	r2, [r3, #276]
 665 0150 25E0     		b	.L33
 666              	.L34:
 428:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 429:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 430:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 431:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 432:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 667              		.loc 1 432 17
 668 0152 434B     		ldr	r3, .L52+4
 669 0154 1B78     		ldrb	r3, [r3]
 670 0156 FB72     		strb	r3, [r7, #11]
 433:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 434:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE))
 671              		.loc 1 434 9
 672 0158 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 673 015a 052B     		cmp	r3, #5
 674 015c 02D0     		beq	.L37
 675              		.loc 1 434 52 discriminator 1
 676 015e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 677 0160 072B     		cmp	r3, #7
 678 0162 03D1     		bne	.L38
 679              	.L37:
 435:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 436:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /*MassErase ended. Return the selected bank*/
 437:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 438:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(FLASH_BANK_2);
 680              		.loc 1 438 9
 681 0164 0220     		movs	r0, #2
 682 0166 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 683 016a 07E0     		b	.L39
 684              	.L38:
 439:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 440:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else if(procedure == FLASH_PROC_PROGRAM_BANK2)
 685              		.loc 1 440 14
 686 016c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 687 016e 062B     		cmp	r3, #6
 688 0170 04D1     		bne	.L39
 441:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 442:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Program ended. Return the selected address */
ARM GAS  /tmp/ccTRR5PT.s 			page 34


 443:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 444:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 689              		.loc 1 444 9
 690 0172 3B4B     		ldr	r3, .L52+4
 691 0174 1B69     		ldr	r3, [r3, #16]
 692 0176 1846     		mov	r0, r3
 693 0178 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 694              	.L39:
 445:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 446:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       else
 447:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 448:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Nothing to do */
 449:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 450:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 451:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if((procedure != FLASH_PROC_SECTERASE_BANK1) && \
 695              		.loc 1 451 9
 696 017c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 697 017e 012B     		cmp	r3, #1
 698 0180 0DD0     		beq	.L33
 699              		.loc 1 451 52 discriminator 1
 700 0182 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 701 0184 022B     		cmp	r3, #2
 702 0186 0AD0     		beq	.L33
 452:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_MASSERASE_BANK1) && \
 703              		.loc 1 452 52
 704 0188 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 705 018a 032B     		cmp	r3, #3
 706 018c 07D0     		beq	.L33
 453:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****          (procedure != FLASH_PROC_PROGRAM_BANK1))
 454:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 455:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 707              		.loc 1 455 33
 708 018e 344B     		ldr	r3, .L52+4
 709 0190 0022     		movs	r2, #0
 710 0192 1A70     		strb	r2, [r3]
 456:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         /* Clear FLASH End of Operation pending bit */
 457:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 711              		.loc 1 457 9
 712 0194 314B     		ldr	r3, .L52
 713 0196 4FF48032 		mov	r2, #65536
 714 019a C3F81421 		str	r2, [r3, #276]
 715              	.L33:
 458:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 459:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 460:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 461:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 462:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank1 operation error flags */
 463:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR1 & (FLASH_FLAG_WRPERR_BANK1 | FLASH_FLAG_PGSERR_BANK1 | FLASH_FLAG_STRBERR_
 716              		.loc 1 463 20
 717 019e 2F4B     		ldr	r3, .L52
 718 01a0 1B69     		ldr	r3, [r3, #16]
 719              		.loc 1 463 13
 720 01a2 03F4DC03 		and	r3, r3, #7208960
 721 01a6 7B60     		str	r3, [r7, #4]
 464:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                             FLASH_FLAG_INCERR_BANK1 | FLASH_FLAG_OPERR_BANK1);
 465:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 722              		.loc 1 465 5
ARM GAS  /tmp/ccTRR5PT.s 			page 35


 723 01a8 7B68     		ldr	r3, [r7, #4]
 724 01aa 002B     		cmp	r3, #0
 725 01ac 28D0     		beq	.L40
 466:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 467:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 468:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 726              		.loc 1 468 22
 727 01ae 2C4B     		ldr	r3, .L52+4
 728 01b0 9A69     		ldr	r2, [r3, #24]
 729 01b2 7B68     		ldr	r3, [r7, #4]
 730 01b4 1343     		orrs	r3, r3, r2
 731 01b6 2A4A     		ldr	r2, .L52+4
 732 01b8 9361     		str	r3, [r2, #24]
 469:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 470:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 471:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK1(errorflag);
 733              		.loc 1 471 5
 734 01ba 284A     		ldr	r2, .L52
 735 01bc 7B68     		ldr	r3, [r7, #4]
 736 01be 5361     		str	r3, [r2, #20]
 472:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 473:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 737              		.loc 1 473 15
 738 01c0 274B     		ldr	r3, .L52+4
 739 01c2 1B78     		ldrb	r3, [r3]
 740 01c4 FB72     		strb	r3, [r7, #11]
 474:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 475:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure == FLASH_PROC_SECTERASE_BANK1)
 741              		.loc 1 475 7
 742 01c6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 743 01c8 012B     		cmp	r3, #1
 744 01ca 07D1     		bne	.L41
 476:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 477:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty sector */
 478:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 745              		.loc 1 478 12
 746 01cc 244B     		ldr	r3, .L52+4
 747 01ce DB68     		ldr	r3, [r3, #12]
 748 01d0 FB60     		str	r3, [r7, #12]
 479:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 749              		.loc 1 479 21
 750 01d2 234B     		ldr	r3, .L52+4
 751 01d4 4FF0FF32 		mov	r2, #-1
 752 01d8 DA60     		str	r2, [r3, #12]
 753 01da 0BE0     		b	.L42
 754              	.L41:
 480:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 481:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK1) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 755              		.loc 1 481 12
 756 01dc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 757 01de 022B     		cmp	r3, #2
 758 01e0 02D0     		beq	.L43
 759              		.loc 1 481 55 discriminator 1
 760 01e2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 761 01e4 072B     		cmp	r3, #7
 762 01e6 02D1     		bne	.L44
 763              	.L43:
ARM GAS  /tmp/ccTRR5PT.s 			page 36


 482:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 483:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty bank */
 484:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_1;
 764              		.loc 1 484 12
 765 01e8 0123     		movs	r3, #1
 766 01ea FB60     		str	r3, [r7, #12]
 767 01ec 02E0     		b	.L42
 768              	.L44:
 485:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 486:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 487:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 488:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Return the faulty address */
 489:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 769              		.loc 1 489 12
 770 01ee 1C4B     		ldr	r3, .L52+4
 771 01f0 1B69     		ldr	r3, [r3, #16]
 772 01f2 FB60     		str	r3, [r7, #12]
 773              	.L42:
 490:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 491:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 492:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Stop the procedure ongoing*/
 493:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 774              		.loc 1 493 29
 775 01f4 1A4B     		ldr	r3, .L52+4
 776 01f6 0022     		movs	r2, #0
 777 01f8 1A70     		strb	r2, [r3]
 494:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 495:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 496:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 778              		.loc 1 496 5
 779 01fa F868     		ldr	r0, [r7, #12]
 780 01fc FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 781              	.L40:
 497:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 498:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 499:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH Bank2 operation error flags */
 500:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   errorflag = FLASH->SR2 & ((FLASH_FLAG_WRPERR_BANK2 | FLASH_FLAG_PGSERR_BANK2 | FLASH_FLAG_STRBERR
 782              		.loc 1 500 20
 783 0200 164B     		ldr	r3, .L52
 784 0202 D3F81031 		ldr	r3, [r3, #272]
 785              		.loc 1 500 13
 786 0206 03F4DC03 		and	r3, r3, #7208960
 787 020a 7B60     		str	r3, [r7, #4]
 501:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                              FLASH_FLAG_INCERR_BANK2 | FLASH_FLAG_OPERR_BANK2) & 0x7FFFFFFFU);
 502:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 503:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  /* Check FLASH Bank2 operation error flags */
 504:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(errorflag != 0U)
 788              		.loc 1 504 5
 789 020c 7B68     		ldr	r3, [r7, #4]
 790 020e 002B     		cmp	r3, #0
 791 0210 31D0     		beq	.L45
 505:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 506:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 507:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= (errorflag | 0x80000000U);
 792              		.loc 1 507 22
 793 0212 134B     		ldr	r3, .L52+4
 794 0214 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccTRR5PT.s 			page 37


 795 0216 7B68     		ldr	r3, [r7, #4]
 796 0218 1343     		orrs	r3, r3, r2
 797 021a 43F00043 		orr	r3, r3, #-2147483648
 798 021e 104A     		ldr	r2, .L52+4
 799 0220 9361     		str	r3, [r2, #24]
 508:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 509:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 510:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG_BANK2(errorflag);
 800              		.loc 1 510 5
 801 0222 0E4A     		ldr	r2, .L52
 802 0224 7B68     		ldr	r3, [r7, #4]
 803 0226 23F00043 		bic	r3, r3, #-2147483648
 804 022a C2F81431 		str	r3, [r2, #276]
 511:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 512:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 805              		.loc 1 512 15
 806 022e 0C4B     		ldr	r3, .L52+4
 807 0230 1B78     		ldrb	r3, [r3]
 808 0232 FB72     		strb	r3, [r7, #11]
 513:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 514:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(procedure== FLASH_PROC_SECTERASE_BANK2)
 809              		.loc 1 514 7
 810 0234 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 811 0236 042B     		cmp	r3, #4
 812 0238 07D1     		bne	.L46
 515:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 516:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty sector*/
 517:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Sector;
 813              		.loc 1 517 12
 814 023a 094B     		ldr	r3, .L52+4
 815 023c DB68     		ldr	r3, [r3, #12]
 816 023e FB60     		str	r3, [r7, #12]
 518:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.Sector = 0xFFFFFFFFU;
 817              		.loc 1 518 21
 818 0240 074B     		ldr	r3, .L52+4
 819 0242 4FF0FF32 		mov	r2, #-1
 820 0246 DA60     		str	r2, [r3, #12]
 821 0248 0FE0     		b	.L47
 822              	.L46:
 519:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 520:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else if((procedure == FLASH_PROC_MASSERASE_BANK2) || (procedure == FLASH_PROC_ALLBANK_MASSERASE
 823              		.loc 1 520 12
 824 024a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 825 024c 052B     		cmp	r3, #5
 826 024e 02D0     		beq	.L48
 827              		.loc 1 520 55 discriminator 1
 828 0250 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 829 0252 072B     		cmp	r3, #7
 830 0254 06D1     		bne	.L49
 831              	.L48:
 521:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 522:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty bank*/
 523:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = FLASH_BANK_2;
 832              		.loc 1 523 12
 833 0256 0223     		movs	r3, #2
 834 0258 FB60     		str	r3, [r7, #12]
 835 025a 06E0     		b	.L47
ARM GAS  /tmp/ccTRR5PT.s 			page 38


 836              	.L53:
 837              		.align	2
 838              	.L52:
 839 025c 00200052 		.word	1375739904
 840 0260 00000000 		.word	pFlash
 841              	.L49:
 524:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 525:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     else
 526:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 527:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /*return the faulty address*/
 528:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       temp = pFlash.Address;
 842              		.loc 1 528 12
 843 0264 114B     		ldr	r3, .L54
 844 0266 1B69     		ldr	r3, [r3, #16]
 845 0268 FB60     		str	r3, [r7, #12]
 846              	.L47:
 529:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 530:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 531:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 532:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 847              		.loc 1 532 29
 848 026a 104B     		ldr	r3, .L54
 849 026c 0022     		movs	r2, #0
 850 026e 1A70     		strb	r2, [r3]
 533:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 534:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 535:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 851              		.loc 1 535 5
 852 0270 F868     		ldr	r0, [r7, #12]
 853 0272 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 854              	.L45:
 536:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 537:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 538:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 855              		.loc 1 538 12
 856 0276 0D4B     		ldr	r3, .L54
 857 0278 1B78     		ldrb	r3, [r3]
 858 027a DBB2     		uxtb	r3, r3
 859              		.loc 1 538 5
 860 027c 002B     		cmp	r3, #0
 861 027e 10D1     		bne	.L51
 539:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 540:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank1 Operation and Error source interrupt */
 541:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK1(FLASH_IT_EOP_BANK1    | FLASH_IT_WRPERR_BANK1 | FLASH_IT_PGSERR_BA
 862              		.loc 1 541 5
 863 0280 0B4B     		ldr	r3, .L54+4
 864 0282 DB68     		ldr	r3, [r3, #12]
 865 0284 0A4A     		ldr	r2, .L54+4
 866 0286 23F4DE03 		bic	r3, r3, #7274496
 867 028a D360     		str	r3, [r2, #12]
 542:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK1 | FLASH_IT_INCERR_BANK1 | FLASH_IT_OPERR_BA
 543:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 544:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Disable Bank2 Operation and Error source interrupt */
 545:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT_BANK2(FLASH_IT_EOP_BANK2    | FLASH_IT_WRPERR_BANK2 | FLASH_IT_PGSERR_BA
 868              		.loc 1 545 5
 869 028c 084B     		ldr	r3, .L54+4
 870 028e D3F80C31 		ldr	r3, [r3, #268]
ARM GAS  /tmp/ccTRR5PT.s 			page 39


 871 0292 074A     		ldr	r2, .L54+4
 872 0294 23F4DE03 		bic	r3, r3, #7274496
 873 0298 C2F80C31 		str	r3, [r2, #268]
 546:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                                  FLASH_IT_STRBERR_BANK2 | FLASH_IT_INCERR_BANK2 | FLASH_IT_OPERR_BA
 547:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 548:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Process Unlocked */
 549:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 874              		.loc 1 549 5
 875 029c 034B     		ldr	r3, .L54
 876 029e 0022     		movs	r2, #0
 877 02a0 1A75     		strb	r2, [r3, #20]
 878              	.L51:
 550:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 551:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 879              		.loc 1 551 1
 880 02a2 00BF     		nop
 881 02a4 1037     		adds	r7, r7, #16
 882              		.cfi_def_cfa_offset 8
 883 02a6 BD46     		mov	sp, r7
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed
 886 02a8 80BD     		pop	{r7, pc}
 887              	.L55:
 888 02aa 00BF     		.align	2
 889              	.L54:
 890 02ac 00000000 		.word	pFlash
 891 02b0 00200052 		.word	1375739904
 892              		.cfi_endproc
 893              	.LFE136:
 895              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 896              		.align	1
 897              		.weak	HAL_FLASH_EndOfOperationCallback
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 901              		.fpu fpv5-d16
 903              	HAL_FLASH_EndOfOperationCallback:
 904              	.LFB137:
 552:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 553:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 554:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 555:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 556:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 557:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Sectors Erase: Sector which has been erased
 558:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected sectors have been erased)
 559:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                  Program Address which was selected for data program
 560:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 561:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 562:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 563:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 905              		.loc 1 563 1
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 8
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910 0000 80B4     		push	{r7}
 911              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccTRR5PT.s 			page 40


 912              		.cfi_offset 7, -4
 913 0002 83B0     		sub	sp, sp, #12
 914              		.cfi_def_cfa_offset 16
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 7860     		str	r0, [r7, #4]
 564:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 565:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
 566:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 567:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 568:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 569:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 570:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 918              		.loc 1 570 1
 919 0008 00BF     		nop
 920 000a 0C37     		adds	r7, r7, #12
 921              		.cfi_def_cfa_offset 4
 922 000c BD46     		mov	sp, r7
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 000e 5DF8047B 		ldr	r7, [sp], #4
 926              		.cfi_restore 7
 927              		.cfi_def_cfa_offset 0
 928 0012 7047     		bx	lr
 929              		.cfi_endproc
 930              	.LFE137:
 932              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 933              		.align	1
 934              		.weak	HAL_FLASH_OperationErrorCallback
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 938              		.fpu fpv5-d16
 940              	HAL_FLASH_OperationErrorCallback:
 941              	.LFB138:
 571:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 572:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 573:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 574:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 575:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 576:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Sectors Erase: Sector number which returned an error
 577:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 578:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval None
 579:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 580:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 581:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 942              		.loc 1 581 1
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947 0000 80B4     		push	{r7}
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 0002 83B0     		sub	sp, sp, #12
 951              		.cfi_def_cfa_offset 16
 952 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccTRR5PT.s 			page 41


 953              		.cfi_def_cfa_register 7
 954 0006 7860     		str	r0, [r7, #4]
 582:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 583:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   UNUSED(ReturnValue);
 584:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 585:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 586:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 587:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    */
 588:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 955              		.loc 1 588 1
 956 0008 00BF     		nop
 957 000a 0C37     		adds	r7, r7, #12
 958              		.cfi_def_cfa_offset 4
 959 000c BD46     		mov	sp, r7
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 000e 5DF8047B 		ldr	r7, [sp], #4
 963              		.cfi_restore 7
 964              		.cfi_def_cfa_offset 0
 965 0012 7047     		bx	lr
 966              		.cfi_endproc
 967              	.LFE138:
 969              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 970              		.align	1
 971              		.global	HAL_FLASH_Unlock
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 975              		.fpu fpv5-d16
 977              	HAL_FLASH_Unlock:
 978              	.LFB139:
 589:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 590:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 591:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 592:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 593:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 594:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 595:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Management functions
 596:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 597:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 598:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 599:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 600:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 601:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 602:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 603:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     memory operations.
 604:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 605:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 606:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 607:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 608:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 609:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 610:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH control registers access
 611:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 612:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 613:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 614:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
ARM GAS  /tmp/ccTRR5PT.s 			page 42


 979              		.loc 1 614 1
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 1, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984 0000 80B4     		push	{r7}
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 7, -4
 987 0002 00AF     		add	r7, sp, #0
 988              		.cfi_def_cfa_register 7
 615:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 989              		.loc 1 615 6
 990 0004 184B     		ldr	r3, .L62
 991 0006 DB68     		ldr	r3, [r3, #12]
 992 0008 03F00103 		and	r3, r3, #1
 993              		.loc 1 615 5
 994 000c 002B     		cmp	r3, #0
 995 000e 0DD0     		beq	.L59
 616:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 617:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank1 Registers access */
 618:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY1);
 996              		.loc 1 618 5
 997 0010 154B     		ldr	r3, .L62
 998 0012 164A     		ldr	r2, .L62+4
 999 0014 5A60     		str	r2, [r3, #4]
 619:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR1, FLASH_KEY2);
 1000              		.loc 1 619 5
 1001 0016 144B     		ldr	r3, .L62
 1002 0018 154A     		ldr	r2, .L62+8
 1003 001a 5A60     		str	r2, [r3, #4]
 620:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 621:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank1 is unlocked */
 622:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) != 0U)
 1004              		.loc 1 622 9
 1005 001c 124B     		ldr	r3, .L62
 1006 001e DB68     		ldr	r3, [r3, #12]
 1007 0020 03F00103 		and	r3, r3, #1
 1008              		.loc 1 622 8
 1009 0024 002B     		cmp	r3, #0
 1010 0026 01D0     		beq	.L59
 623:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 624:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 1011              		.loc 1 624 14
 1012 0028 0123     		movs	r3, #1
 1013 002a 18E0     		b	.L60
 1014              	.L59:
 625:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 626:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 627:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 628:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 1015              		.loc 1 628 6
 1016 002c 0E4B     		ldr	r3, .L62
 1017 002e D3F80C31 		ldr	r3, [r3, #268]
 1018 0032 03F00103 		and	r3, r3, #1
 1019              		.loc 1 628 5
 1020 0036 002B     		cmp	r3, #0
 1021 0038 10D0     		beq	.L61
ARM GAS  /tmp/ccTRR5PT.s 			page 43


 629:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 630:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorize the FLASH Bank2 Registers access */
 631:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY1);
 1022              		.loc 1 631 5
 1023 003a 0B4B     		ldr	r3, .L62
 1024 003c 0B4A     		ldr	r2, .L62+4
 1025 003e C3F80421 		str	r2, [r3, #260]
 632:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR2, FLASH_KEY2);
 1026              		.loc 1 632 5
 1027 0042 094B     		ldr	r3, .L62
 1028 0044 0A4A     		ldr	r2, .L62+8
 1029 0046 C3F80421 		str	r2, [r3, #260]
 633:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 634:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify Flash Bank2 is unlocked */
 635:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) != 0U)
 1030              		.loc 1 635 9
 1031 004a 074B     		ldr	r3, .L62
 1032 004c D3F80C31 		ldr	r3, [r3, #268]
 1033 0050 03F00103 		and	r3, r3, #1
 1034              		.loc 1 635 8
 1035 0054 002B     		cmp	r3, #0
 1036 0056 01D0     		beq	.L61
 636:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 637:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 1037              		.loc 1 637 14
 1038 0058 0123     		movs	r3, #1
 1039 005a 00E0     		b	.L60
 1040              	.L61:
 638:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 639:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 640:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 641:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1041              		.loc 1 641 10
 1042 005c 0023     		movs	r3, #0
 1043              	.L60:
 642:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1044              		.loc 1 642 1
 1045 005e 1846     		mov	r0, r3
 1046 0060 BD46     		mov	sp, r7
 1047              		.cfi_def_cfa_register 13
 1048              		@ sp needed
 1049 0062 5DF8047B 		ldr	r7, [sp], #4
 1050              		.cfi_restore 7
 1051              		.cfi_def_cfa_offset 0
 1052 0066 7047     		bx	lr
 1053              	.L63:
 1054              		.align	2
 1055              	.L62:
 1056 0068 00200052 		.word	1375739904
 1057 006c 23016745 		.word	1164378403
 1058 0070 AB89EFCD 		.word	-839939669
 1059              		.cfi_endproc
 1060              	.LFE139:
 1062              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_FLASH_Lock
 1065              		.syntax unified
ARM GAS  /tmp/ccTRR5PT.s 			page 44


 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv5-d16
 1070              	HAL_FLASH_Lock:
 1071              	.LFB140:
 643:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 644:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 645:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Locks the FLASH control registers access
 646:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 647:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 648:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 649:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1072              		.loc 1 649 1
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 7, -4
 1080 0002 00AF     		add	r7, sp, #0
 1081              		.cfi_def_cfa_register 7
 650:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank1 Control Register access */
 651:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR1, FLASH_CR_LOCK);
 1082              		.loc 1 651 3
 1083 0004 124B     		ldr	r3, .L68
 1084 0006 DB68     		ldr	r3, [r3, #12]
 1085 0008 114A     		ldr	r2, .L68
 1086 000a 43F00103 		orr	r3, r3, #1
 1087 000e D360     		str	r3, [r2, #12]
 652:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 653:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank1 is locked */
 654:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR1, FLASH_CR_LOCK) == 0U)
 1088              		.loc 1 654 7
 1089 0010 0F4B     		ldr	r3, .L68
 1090 0012 DB68     		ldr	r3, [r3, #12]
 1091 0014 03F00103 		and	r3, r3, #1
 1092              		.loc 1 654 6
 1093 0018 002B     		cmp	r3, #0
 1094 001a 01D1     		bne	.L65
 655:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 656:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 1095              		.loc 1 656 12
 1096 001c 0123     		movs	r3, #1
 1097 001e 11E0     		b	.L66
 1098              	.L65:
 657:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 658:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 659:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Bank2 Control Register access */
 660:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->CR2, FLASH_CR_LOCK);
 1099              		.loc 1 660 3
 1100 0020 0B4B     		ldr	r3, .L68
 1101 0022 D3F80C31 		ldr	r3, [r3, #268]
 1102 0026 0A4A     		ldr	r2, .L68
 1103 0028 43F00103 		orr	r3, r3, #1
 1104 002c C2F80C31 		str	r3, [r2, #268]
 661:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 45


 662:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify Flash Bank2 is locked */
 663:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->CR2, FLASH_CR_LOCK) == 0U)
 1105              		.loc 1 663 7
 1106 0030 074B     		ldr	r3, .L68
 1107 0032 D3F80C31 		ldr	r3, [r3, #268]
 1108 0036 03F00103 		and	r3, r3, #1
 1109              		.loc 1 663 6
 1110 003a 002B     		cmp	r3, #0
 1111 003c 01D1     		bne	.L67
 664:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 665:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 1112              		.loc 1 665 12
 1113 003e 0123     		movs	r3, #1
 1114 0040 00E0     		b	.L66
 1115              	.L67:
 666:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 667:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 668:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1116              		.loc 1 668 10
 1117 0042 0023     		movs	r3, #0
 1118              	.L66:
 669:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1119              		.loc 1 669 1
 1120 0044 1846     		mov	r0, r3
 1121 0046 BD46     		mov	sp, r7
 1122              		.cfi_def_cfa_register 13
 1123              		@ sp needed
 1124 0048 5DF8047B 		ldr	r7, [sp], #4
 1125              		.cfi_restore 7
 1126              		.cfi_def_cfa_offset 0
 1127 004c 7047     		bx	lr
 1128              	.L69:
 1129 004e 00BF     		.align	2
 1130              	.L68:
 1131 0050 00200052 		.word	1375739904
 1132              		.cfi_endproc
 1133              	.LFE140:
 1135              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 1136              		.align	1
 1137              		.global	HAL_FLASH_OB_Unlock
 1138              		.syntax unified
 1139              		.thumb
 1140              		.thumb_func
 1141              		.fpu fpv5-d16
 1143              	HAL_FLASH_OB_Unlock:
 1144              	.LFB141:
 670:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 671:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 672:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 673:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 674:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 675:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 676:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1145              		.loc 1 676 1
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccTRR5PT.s 			page 46


 1149              		@ link register save eliminated.
 1150 0000 80B4     		push	{r7}
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 7, -4
 1153 0002 00AF     		add	r7, sp, #0
 1154              		.cfi_def_cfa_register 7
 677:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 1155              		.loc 1 677 6
 1156 0004 0C4B     		ldr	r3, .L73
 1157 0006 9B69     		ldr	r3, [r3, #24]
 1158 0008 03F00103 		and	r3, r3, #1
 1159              		.loc 1 677 5
 1160 000c 002B     		cmp	r3, #0
 1161 000e 0DD0     		beq	.L71
 678:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 679:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Authorizes the Option Byte registers programming */
 680:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY1);
 1162              		.loc 1 680 5
 1163 0010 094B     		ldr	r3, .L73
 1164 0012 0A4A     		ldr	r2, .L73+4
 1165 0014 9A60     		str	r2, [r3, #8]
 681:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPT_KEY2);
 1166              		.loc 1 681 5
 1167 0016 084B     		ldr	r3, .L73
 1168 0018 094A     		ldr	r2, .L73+8
 1169 001a 9A60     		str	r2, [r3, #8]
 682:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 683:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Verify that the Option Bytes are unlocked */
 684:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) != 0U)
 1170              		.loc 1 684 9
 1171 001c 064B     		ldr	r3, .L73
 1172 001e 9B69     		ldr	r3, [r3, #24]
 1173 0020 03F00103 		and	r3, r3, #1
 1174              		.loc 1 684 8
 1175 0024 002B     		cmp	r3, #0
 1176 0026 01D0     		beq	.L71
 685:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 686:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 1177              		.loc 1 686 14
 1178 0028 0123     		movs	r3, #1
 1179 002a 00E0     		b	.L72
 1180              	.L71:
 687:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 688:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 689:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 690:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1181              		.loc 1 690 10
 1182 002c 0023     		movs	r3, #0
 1183              	.L72:
 691:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1184              		.loc 1 691 1
 1185 002e 1846     		mov	r0, r3
 1186 0030 BD46     		mov	sp, r7
 1187              		.cfi_def_cfa_register 13
 1188              		@ sp needed
 1189 0032 5DF8047B 		ldr	r7, [sp], #4
 1190              		.cfi_restore 7
ARM GAS  /tmp/ccTRR5PT.s 			page 47


 1191              		.cfi_def_cfa_offset 0
 1192 0036 7047     		bx	lr
 1193              	.L74:
 1194              		.align	2
 1195              	.L73:
 1196 0038 00200052 		.word	1375739904
 1197 003c 3B2A1908 		.word	135866939
 1198 0040 7F6E5D4C 		.word	1281191551
 1199              		.cfi_endproc
 1200              	.LFE141:
 1202              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 1203              		.align	1
 1204              		.global	HAL_FLASH_OB_Lock
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1208              		.fpu fpv5-d16
 1210              	HAL_FLASH_OB_Lock:
 1211              	.LFB142:
 692:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 693:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 694:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 695:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 696:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 697:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 698:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1212              		.loc 1 698 1
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 1217 0000 80B4     		push	{r7}
 1218              		.cfi_def_cfa_offset 4
 1219              		.cfi_offset 7, -4
 1220 0002 00AF     		add	r7, sp, #0
 1221              		.cfi_def_cfa_register 7
 699:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 700:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK);
 1222              		.loc 1 700 3
 1223 0004 094B     		ldr	r3, .L78
 1224 0006 9B69     		ldr	r3, [r3, #24]
 1225 0008 084A     		ldr	r2, .L78
 1226 000a 43F00103 		orr	r3, r3, #1
 1227 000e 9361     		str	r3, [r2, #24]
 701:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 702:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Verify that the Option Bytes are locked */
 703:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (READ_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTLOCK) == 0U)
 1228              		.loc 1 703 7
 1229 0010 064B     		ldr	r3, .L78
 1230 0012 9B69     		ldr	r3, [r3, #24]
 1231 0014 03F00103 		and	r3, r3, #1
 1232              		.loc 1 703 6
 1233 0018 002B     		cmp	r3, #0
 1234 001a 01D1     		bne	.L76
 704:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 705:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 1235              		.loc 1 705 12
ARM GAS  /tmp/ccTRR5PT.s 			page 48


 1236 001c 0123     		movs	r3, #1
 1237 001e 00E0     		b	.L77
 1238              	.L76:
 706:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 707:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 708:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1239              		.loc 1 708 10
 1240 0020 0023     		movs	r3, #0
 1241              	.L77:
 709:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1242              		.loc 1 709 1
 1243 0022 1846     		mov	r0, r3
 1244 0024 BD46     		mov	sp, r7
 1245              		.cfi_def_cfa_register 13
 1246              		@ sp needed
 1247 0026 5DF8047B 		ldr	r7, [sp], #4
 1248              		.cfi_restore 7
 1249              		.cfi_def_cfa_offset 0
 1250 002a 7047     		bx	lr
 1251              	.L79:
 1252              		.align	2
 1253              	.L78:
 1254 002c 00200052 		.word	1375739904
 1255              		.cfi_endproc
 1256              	.LFE142:
 1258              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 1259              		.align	1
 1260              		.global	HAL_FLASH_OB_Launch
 1261              		.syntax unified
 1262              		.thumb
 1263              		.thumb_func
 1264              		.fpu fpv5-d16
 1266              	HAL_FLASH_OB_Launch:
 1267              	.LFB143:
 710:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 711:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 712:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Launch the option bytes loading.
 713:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL Status
 714:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 715:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 716:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1268              		.loc 1 716 1
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 8
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 82B0     		sub	sp, sp, #8
 1277              		.cfi_def_cfa_offset 16
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 717:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   HAL_StatusTypeDef status;
 718:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 719:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for CRC computation to be completed */
 720:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_1) != HAL_OK)
ARM GAS  /tmp/ccTRR5PT.s 			page 49


 1280              		.loc 1 720 7
 1281 0006 0121     		movs	r1, #1
 1282 0008 4CF25030 		movw	r0, #50000
 1283 000c FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1284 0010 0346     		mov	r3, r0
 1285              		.loc 1 720 6
 1286 0012 002B     		cmp	r3, #0
 1287 0014 02D0     		beq	.L81
 721:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 722:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 1288              		.loc 1 722 12
 1289 0016 0123     		movs	r3, #1
 1290 0018 FB71     		strb	r3, [r7, #7]
 1291 001a 0CE0     		b	.L82
 1292              	.L81:
 723:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 724:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else if (FLASH_CRC_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE, FLASH_BANK_2) != HAL_OK)
 1293              		.loc 1 724 12
 1294 001c 0221     		movs	r1, #2
 1295 001e 4CF25030 		movw	r0, #50000
 1296 0022 FFF7FEFF 		bl	FLASH_CRC_WaitForLastOperation
 1297 0026 0346     		mov	r3, r0
 1298              		.loc 1 724 11
 1299 0028 002B     		cmp	r3, #0
 1300 002a 02D0     		beq	.L83
 725:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 726:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_ERROR;
 1301              		.loc 1 726 12
 1302 002c 0123     		movs	r3, #1
 1303 002e FB71     		strb	r3, [r7, #7]
 1304 0030 01E0     		b	.L82
 1305              	.L83:
 727:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 728:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 729:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 730:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = HAL_OK;
 1306              		.loc 1 730 12
 1307 0032 0023     		movs	r3, #0
 1308 0034 FB71     		strb	r3, [r7, #7]
 1309              	.L82:
 731:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 732:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 733:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (status == HAL_OK)
 1310              		.loc 1 733 6
 1311 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1312 0038 002B     		cmp	r3, #0
 1313 003a 0BD1     		bne	.L84
 734:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 735:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Set OPTSTRT Bit */
 736:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     SET_BIT(FLASH->OPTCR, FLASH_OPTCR_OPTSTART);
 1314              		.loc 1 736 5
 1315 003c 084B     		ldr	r3, .L86
 1316 003e 9B69     		ldr	r3, [r3, #24]
 1317 0040 074A     		ldr	r2, .L86
 1318 0042 43F00203 		orr	r3, r3, #2
 1319 0046 9361     		str	r3, [r2, #24]
 737:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
ARM GAS  /tmp/ccTRR5PT.s 			page 50


 738:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Wait for OB change operation to be completed */
 739:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     status = FLASH_OB_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1320              		.loc 1 739 14
 1321 0048 4CF25030 		movw	r0, #50000
 1322 004c FFF7FEFF 		bl	FLASH_OB_WaitForLastOperation
 1323 0050 0346     		mov	r3, r0
 1324 0052 FB71     		strb	r3, [r7, #7]
 1325              	.L84:
 740:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 741:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 742:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return status;
 1326              		.loc 1 742 10
 1327 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1328              		.loc 1 743 1
 1329 0056 1846     		mov	r0, r3
 1330 0058 0837     		adds	r7, r7, #8
 1331              		.cfi_def_cfa_offset 8
 1332 005a BD46     		mov	sp, r7
 1333              		.cfi_def_cfa_register 13
 1334              		@ sp needed
 1335 005c 80BD     		pop	{r7, pc}
 1336              	.L87:
 1337 005e 00BF     		.align	2
 1338              	.L86:
 1339 0060 00200052 		.word	1375739904
 1340              		.cfi_endproc
 1341              	.LFE143:
 1343              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 1344              		.align	1
 1345              		.global	HAL_FLASH_GetError
 1346              		.syntax unified
 1347              		.thumb
 1348              		.thumb_func
 1349              		.fpu fpv5-d16
 1351              	HAL_FLASH_GetError:
 1352              	.LFB144:
 744:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 745:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 746:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 747:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 748:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 749:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 750:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 751:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  *
 752:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @verbatim
 753:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 754:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 755:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****  ===============================================================================
 756:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     [..]
 757:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 758:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 759:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** @endverbatim
 760:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 761:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 762:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 763:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
ARM GAS  /tmp/ccTRR5PT.s 			page 51


 764:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 765:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_FLASH_ERRORCode The returned value can be:
 766:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE       : No error set
 767:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 768:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK1  : Write Protection Error on Bank 1
 769:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK1  : Program Sequence Error on Bank 1
 770:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK1 : Strobe Error on Bank 1
 771:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK1  : Inconsistency Error on Bank 1
 772:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK1  : Operation Error on Bank 1
 773:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK1  : Read Protection Error on Bank 1
 774:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK1  : Read Secured Error on Bank 1
 775:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK1: ECC Single Correction Error on Bank 1
 776:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK1: ECC Double Detection Error on Bank 1
 777:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK1: CRC Read Error on Bank 1
 778:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *
 779:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP_BANK2  : Write Protection Error on Bank 2
 780:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS_BANK2  : Program Sequence Error on Bank 2
 781:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_STRB_BANK2 : Strobe Error on Bank 2
 782:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_INC_BANK2  : Inconsistency Error on Bank 2
 783:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPE_BANK2  : Operation Error on Bank 2
 784:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDP_BANK2  : Read Protection Error on Bank 2
 785:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RDS_BANK2  : Read Secured Error on Bank 2
 786:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SNECC_BANK2: SNECC Error on Bank 2
 787:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_DBECC_BANK2: Double Detection ECC on Bank 2
 788:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_CRCRD_BANK2: CRC Read Error on Bank 2
 789:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** */
 790:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 791:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 792:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1353              		.loc 1 792 1
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358 0000 80B4     		push	{r7}
 1359              		.cfi_def_cfa_offset 4
 1360              		.cfi_offset 7, -4
 1361 0002 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 793:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****    return pFlash.ErrorCode;
 1363              		.loc 1 793 17
 1364 0004 034B     		ldr	r3, .L90
 1365 0006 9B69     		ldr	r3, [r3, #24]
 794:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1366              		.loc 1 794 1
 1367 0008 1846     		mov	r0, r3
 1368 000a BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 000c 5DF8047B 		ldr	r7, [sp], #4
 1372              		.cfi_restore 7
 1373              		.cfi_def_cfa_offset 0
 1374 0010 7047     		bx	lr
 1375              	.L91:
 1376 0012 00BF     		.align	2
 1377              	.L90:
 1378 0014 00000000 		.word	pFlash
ARM GAS  /tmp/ccTRR5PT.s 			page 52


 1379              		.cfi_endproc
 1380              	.LFE144:
 1382              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1383              		.align	1
 1384              		.global	FLASH_WaitForLastOperation
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1388              		.fpu fpv5-d16
 1390              	FLASH_WaitForLastOperation:
 1391              	.LFB145:
 795:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 796:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 797:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 798:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 799:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 800:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 801:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @}
 802:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 803:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 804:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 805:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 806:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 807:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @{
 808:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 809:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 810:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 811:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 812:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 813:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
 814:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 815:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 816:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
 817:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1392              		.loc 1 817 1
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 24
 1395              		@ frame_needed = 1, uses_anonymous_args = 0
 1396 0000 80B5     		push	{r7, lr}
 1397              		.cfi_def_cfa_offset 8
 1398              		.cfi_offset 7, -8
 1399              		.cfi_offset 14, -4
 1400 0002 86B0     		sub	sp, sp, #24
 1401              		.cfi_def_cfa_offset 32
 1402 0004 00AF     		add	r7, sp, #0
 1403              		.cfi_def_cfa_register 7
 1404 0006 7860     		str	r0, [r7, #4]
 1405 0008 3960     		str	r1, [r7]
 818:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on QW flag to be reset.
 819:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      Even if the FLASH operation fails, the QW flag will be reset and an error
 820:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****      flag will be set */
 821:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 822:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag, errorflag;
 823:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1406              		.loc 1 823 24
 1407 000a FFF7FEFF 		bl	HAL_GetTick
 1408 000e F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccTRR5PT.s 			page 53


 824:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 825:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 826:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 827:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Select bsyflag depending on Bank */
 828:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1409              		.loc 1 828 5
 1410 0010 3B68     		ldr	r3, [r7]
 1411 0012 012B     		cmp	r3, #1
 1412 0014 02D1     		bne	.L93
 829:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 830:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_QW_BANK1;
 1413              		.loc 1 830 13
 1414 0016 0423     		movs	r3, #4
 1415 0018 7B61     		str	r3, [r7, #20]
 1416 001a 13E0     		b	.L95
 1417              	.L93:
 831:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 832:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 833:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 834:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_QW_BANK2;
 1418              		.loc 1 834 13
 1419 001c 414B     		ldr	r3, .L109
 1420 001e 7B61     		str	r3, [r7, #20]
 835:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 836:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
 1421              		.loc 1 837 8
 1422 0020 10E0     		b	.L95
 1423              	.L100:
 838:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 839:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1424              		.loc 1 839 7
 1425 0022 7B68     		ldr	r3, [r7, #4]
 1426 0024 B3F1FF3F 		cmp	r3, #-1
 1427 0028 0CD0     		beq	.L95
 840:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 841:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1428              		.loc 1 841 12
 1429 002a FFF7FEFF 		bl	HAL_GetTick
 1430 002e 0246     		mov	r2, r0
 1431              		.loc 1 841 26
 1432 0030 FB68     		ldr	r3, [r7, #12]
 1433 0032 D31A     		subs	r3, r2, r3
 1434              		.loc 1 841 9
 1435 0034 7A68     		ldr	r2, [r7, #4]
 1436 0036 9A42     		cmp	r2, r3
 1437 0038 02D3     		bcc	.L96
 1438              		.loc 1 841 50 discriminator 1
 1439 003a 7B68     		ldr	r3, [r7, #4]
 1440 003c 002B     		cmp	r3, #0
 1441 003e 01D1     		bne	.L95
 1442              	.L96:
 842:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 843:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1443              		.loc 1 843 16
 1444 0040 0323     		movs	r3, #3
 1445 0042 6AE0     		b	.L97
ARM GAS  /tmp/ccTRR5PT.s 			page 54


 1446              	.L95:
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1447              		.loc 1 837 9
 1448 0044 7A69     		ldr	r2, [r7, #20]
 1449 0046 384B     		ldr	r3, .L109+4
 1450 0048 1340     		ands	r3, r3, r2
 1451 004a 7A69     		ldr	r2, [r7, #20]
 1452 004c 9A42     		cmp	r2, r3
 1453 004e 0AD1     		bne	.L98
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1454              		.loc 1 837 9 is_stmt 0 discriminator 1
 1455 0050 364B     		ldr	r3, .L109+8
 1456 0052 1A69     		ldr	r2, [r3, #16]
 1457 0054 7B69     		ldr	r3, [r7, #20]
 1458 0056 1340     		ands	r3, r3, r2
 1459 0058 7A69     		ldr	r2, [r7, #20]
 1460 005a 9A42     		cmp	r2, r3
 1461 005c 0CBF     		ite	eq
 1462 005e 0123     		moveq	r3, #1
 1463 0060 0023     		movne	r3, #0
 1464 0062 DBB2     		uxtb	r3, r3
 1465 0064 0CE0     		b	.L99
 1466              	.L98:
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1467              		.loc 1 837 9 discriminator 2
 1468 0066 314B     		ldr	r3, .L109+8
 1469 0068 D3F81031 		ldr	r3, [r3, #272]
 1470 006c DA43     		mvns	r2, r3
 1471 006e 7B69     		ldr	r3, [r7, #20]
 1472 0070 1340     		ands	r3, r3, r2
 1473 0072 23F00043 		bic	r3, r3, #-2147483648
 1474 0076 002B     		cmp	r3, #0
 1475 0078 0CBF     		ite	eq
 1476 007a 0123     		moveq	r3, #1
 1477 007c 0023     		movne	r3, #0
 1478 007e DBB2     		uxtb	r3, r3
 1479              	.L99:
 837:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1480              		.loc 1 837 8 is_stmt 1 discriminator 4
 1481 0080 002B     		cmp	r3, #0
 1482 0082 CED1     		bne	.L100
 844:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 845:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 846:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 847:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 848:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get Error Flags */
 849:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if (Bank == FLASH_BANK_1)
 1483              		.loc 1 849 6
 1484 0084 3B68     		ldr	r3, [r7]
 1485 0086 012B     		cmp	r3, #1
 1486 0088 05D1     		bne	.L101
 850:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 851:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = FLASH->SR1 & FLASH_FLAG_ALL_ERRORS_BANK1;
 1487              		.loc 1 851 22
 1488 008a 284B     		ldr	r3, .L109+8
 1489 008c 1A69     		ldr	r2, [r3, #16]
 1490              		.loc 1 851 15
ARM GAS  /tmp/ccTRR5PT.s 			page 55


 1491 008e 284B     		ldr	r3, .L109+12
 1492 0090 1340     		ands	r3, r3, r2
 1493 0092 3B61     		str	r3, [r7, #16]
 1494 0094 07E0     		b	.L102
 1495              	.L101:
 852:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 853:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 854:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 855:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     errorflag = (FLASH->SR2 & FLASH_FLAG_ALL_ERRORS_BANK2) | 0x80000000U;
 1496              		.loc 1 855 23
 1497 0096 254B     		ldr	r3, .L109+8
 1498 0098 D3F81021 		ldr	r2, [r3, #272]
 1499              		.loc 1 855 60
 1500 009c 244B     		ldr	r3, .L109+12
 1501 009e 1340     		ands	r3, r3, r2
 1502              		.loc 1 855 15
 1503 00a0 43F00043 		orr	r3, r3, #-2147483648
 1504 00a4 3B61     		str	r3, [r7, #16]
 1505              	.L102:
 856:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 857:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 858:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* In case of error reported in Flash SR1 or SR2 register */
 859:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if((errorflag & 0x7FFFFFFFU) != 0U)
 1506              		.loc 1 859 17
 1507 00a6 3B69     		ldr	r3, [r7, #16]
 1508 00a8 23F00043 		bic	r3, r3, #-2147483648
 1509              		.loc 1 859 5
 1510 00ac 002B     		cmp	r3, #0
 1511 00ae 17D0     		beq	.L103
 860:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 861:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /*Save the error code*/
 862:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= errorflag;
 1512              		.loc 1 862 22
 1513 00b0 204B     		ldr	r3, .L109+16
 1514 00b2 9A69     		ldr	r2, [r3, #24]
 1515 00b4 3B69     		ldr	r3, [r7, #16]
 1516 00b6 1343     		orrs	r3, r3, r2
 1517 00b8 1E4A     		ldr	r2, .L109+16
 1518 00ba 9361     		str	r3, [r2, #24]
 863:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 864:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear error programming flags */
 865:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(errorflag);
 1519              		.loc 1 865 5
 1520 00bc 3A69     		ldr	r2, [r7, #16]
 1521 00be 1A4B     		ldr	r3, .L109+4
 1522 00c0 1340     		ands	r3, r3, r2
 1523 00c2 3A69     		ldr	r2, [r7, #16]
 1524 00c4 9A42     		cmp	r2, r3
 1525 00c6 03D1     		bne	.L104
 1526              		.loc 1 865 5 is_stmt 0 discriminator 1
 1527 00c8 184A     		ldr	r2, .L109+8
 1528 00ca 3B69     		ldr	r3, [r7, #16]
 1529 00cc 5361     		str	r3, [r2, #20]
 1530 00ce 05E0     		b	.L105
 1531              	.L104:
 1532              		.loc 1 865 5 discriminator 2
 1533 00d0 164A     		ldr	r2, .L109+8
ARM GAS  /tmp/ccTRR5PT.s 			page 56


 1534 00d2 3B69     		ldr	r3, [r7, #16]
 1535 00d4 23F00043 		bic	r3, r3, #-2147483648
 1536 00d8 C2F81431 		str	r3, [r2, #276]
 1537              	.L105:
 866:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 867:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 1538              		.loc 1 867 12 is_stmt 1
 1539 00dc 0123     		movs	r3, #1
 1540 00de 1CE0     		b	.L97
 1541              	.L103:
 868:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 869:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 870:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 871:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1542              		.loc 1 871 5
 1543 00e0 3B68     		ldr	r3, [r7]
 1544 00e2 012B     		cmp	r3, #1
 1545 00e4 0BD1     		bne	.L106
 872:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 873:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_EOP_BANK1))
 1546              		.loc 1 873 9
 1547 00e6 114B     		ldr	r3, .L109+8
 1548 00e8 1B69     		ldr	r3, [r3, #16]
 1549 00ea 03F48033 		and	r3, r3, #65536
 1550              		.loc 1 873 8
 1551 00ee B3F5803F 		cmp	r3, #65536
 1552 00f2 11D1     		bne	.L108
 874:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 875:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
 876:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_EOP_BANK1);
 1553              		.loc 1 876 7
 1554 00f4 0D4B     		ldr	r3, .L109+8
 1555 00f6 4FF48032 		mov	r2, #65536
 1556 00fa 5A61     		str	r2, [r3, #20]
 1557 00fc 0CE0     		b	.L108
 1558              	.L106:
 877:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 878:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 879:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 880:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 881:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_EOP_BANK2))
 1559              		.loc 1 881 9
 1560 00fe 0B4B     		ldr	r3, .L109+8
 1561 0100 D3F81031 		ldr	r3, [r3, #272]
 1562 0104 03F48033 		and	r3, r3, #65536
 1563              		.loc 1 881 8
 1564 0108 B3F5803F 		cmp	r3, #65536
 1565 010c 04D1     		bne	.L108
 882:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 883:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH End of Operation pending bit */
 884:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_EOP_BANK2);
 1566              		.loc 1 884 7
 1567 010e 074B     		ldr	r3, .L109+8
 1568 0110 4FF48032 		mov	r2, #65536
 1569 0114 C3F81421 		str	r2, [r3, #276]
 1570              	.L108:
 885:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
ARM GAS  /tmp/ccTRR5PT.s 			page 57


 886:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 887:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 888:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1571              		.loc 1 888 10
 1572 0118 0023     		movs	r3, #0
 1573              	.L97:
 889:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1574              		.loc 1 889 1
 1575 011a 1846     		mov	r0, r3
 1576 011c 1837     		adds	r7, r7, #24
 1577              		.cfi_def_cfa_offset 8
 1578 011e BD46     		mov	sp, r7
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 0120 80BD     		pop	{r7, pc}
 1582              	.L110:
 1583 0122 00BF     		.align	2
 1584              	.L109:
 1585 0124 04000080 		.word	-2147483644
 1586 0128 0F00EF1F 		.word	535756815
 1587 012c 00200052 		.word	1375739904
 1588 0130 0000EE17 		.word	401473536
 1589 0134 00000000 		.word	pFlash
 1590              		.cfi_endproc
 1591              	.LFE145:
 1593              		.section	.text.FLASH_OB_WaitForLastOperation,"ax",%progbits
 1594              		.align	1
 1595              		.global	FLASH_OB_WaitForLastOperation
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu fpv5-d16
 1601              	FLASH_OB_WaitForLastOperation:
 1602              	.LFB146:
 890:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 891:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 892:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH Option Bytes change operation to complete.
 893:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 894:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 895:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 896:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_OB_WaitForLastOperation(uint32_t Timeout)
 897:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1603              		.loc 1 897 1
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 16
 1606              		@ frame_needed = 1, uses_anonymous_args = 0
 1607 0000 80B5     		push	{r7, lr}
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 7, -8
 1610              		.cfi_offset 14, -4
 1611 0002 84B0     		sub	sp, sp, #16
 1612              		.cfi_def_cfa_offset 24
 1613 0004 00AF     		add	r7, sp, #0
 1614              		.cfi_def_cfa_register 7
 1615 0006 7860     		str	r0, [r7, #4]
 898:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Get timeout */
 899:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
ARM GAS  /tmp/ccTRR5PT.s 			page 58


 1616              		.loc 1 899 24
 1617 0008 FFF7FEFF 		bl	HAL_GetTick
 1618 000c F860     		str	r0, [r7, #12]
 900:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 901:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH Option Bytes change operation to complete by polling on OPT_BUSY flag to be
 902:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPT_BUSY) != 0U)
 1619              		.loc 1 902 8
 1620 000e 10E0     		b	.L112
 1621              	.L115:
 903:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 904:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1622              		.loc 1 904 7
 1623 0010 7B68     		ldr	r3, [r7, #4]
 1624 0012 B3F1FF3F 		cmp	r3, #-1
 1625 0016 0CD0     		beq	.L112
 905:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 906:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1626              		.loc 1 906 12
 1627 0018 FFF7FEFF 		bl	HAL_GetTick
 1628 001c 0246     		mov	r2, r0
 1629              		.loc 1 906 26
 1630 001e FB68     		ldr	r3, [r7, #12]
 1631 0020 D31A     		subs	r3, r2, r3
 1632              		.loc 1 906 9
 1633 0022 7A68     		ldr	r2, [r7, #4]
 1634 0024 9A42     		cmp	r2, r3
 1635 0026 02D3     		bcc	.L113
 1636              		.loc 1 906 50 discriminator 1
 1637 0028 7B68     		ldr	r3, [r7, #4]
 1638 002a 002B     		cmp	r3, #0
 1639 002c 01D1     		bne	.L112
 1640              	.L113:
 907:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 908:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1641              		.loc 1 908 16
 1642 002e 0323     		movs	r3, #3
 1643 0030 1AE0     		b	.L114
 1644              	.L112:
 902:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1645              		.loc 1 902 9
 1646 0032 0F4B     		ldr	r3, .L117
 1647 0034 DB69     		ldr	r3, [r3, #28]
 1648 0036 03F00103 		and	r3, r3, #1
 902:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1649              		.loc 1 902 8
 1650 003a 002B     		cmp	r3, #0
 1651 003c E8D1     		bne	.L115
 909:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 910:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 911:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 912:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 913:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check option byte change error */
 914:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(READ_BIT(FLASH->OPTSR_CUR, FLASH_OPTSR_OPTCHANGEERR) != 0U)
 1652              		.loc 1 914 6
 1653 003e 0C4B     		ldr	r3, .L117
 1654 0040 DB69     		ldr	r3, [r3, #28]
 1655 0042 03F08043 		and	r3, r3, #1073741824
ARM GAS  /tmp/ccTRR5PT.s 			page 59


 1656              		.loc 1 914 5
 1657 0046 002B     		cmp	r3, #0
 1658 0048 0DD0     		beq	.L116
 915:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 916:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Save the error code */
 917:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OB_CHANGE;
 1659              		.loc 1 917 22
 1660 004a 0A4B     		ldr	r3, .L117+4
 1661 004c 9B69     		ldr	r3, [r3, #24]
 1662 004e 43F08043 		orr	r3, r3, #1073741824
 1663 0052 084A     		ldr	r2, .L117+4
 1664 0054 9361     		str	r3, [r2, #24]
 918:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 919:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     /* Clear the OB error flag */
 920:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     FLASH->OPTCCR |= FLASH_OPTCCR_CLR_OPTCHANGEERR;
 1665              		.loc 1 920 19
 1666 0056 064B     		ldr	r3, .L117
 1667 0058 5B6A     		ldr	r3, [r3, #36]
 1668 005a 054A     		ldr	r2, .L117
 1669 005c 43F08043 		orr	r3, r3, #1073741824
 1670 0060 5362     		str	r3, [r2, #36]
 921:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 922:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     return HAL_ERROR;
 1671              		.loc 1 922 12
 1672 0062 0123     		movs	r3, #1
 1673 0064 00E0     		b	.L114
 1674              	.L116:
 923:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 924:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 925:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
 926:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1675              		.loc 1 926 10
 1676 0066 0023     		movs	r3, #0
 1677              	.L114:
 927:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1678              		.loc 1 927 1
 1679 0068 1846     		mov	r0, r3
 1680 006a 1037     		adds	r7, r7, #16
 1681              		.cfi_def_cfa_offset 8
 1682 006c BD46     		mov	sp, r7
 1683              		.cfi_def_cfa_register 13
 1684              		@ sp needed
 1685 006e 80BD     		pop	{r7, pc}
 1686              	.L118:
 1687              		.align	2
 1688              	.L117:
 1689 0070 00200052 		.word	1375739904
 1690 0074 00000000 		.word	pFlash
 1691              		.cfi_endproc
 1692              	.LFE146:
 1694              		.section	.text.FLASH_CRC_WaitForLastOperation,"ax",%progbits
 1695              		.align	1
 1696              		.global	FLASH_CRC_WaitForLastOperation
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1700              		.fpu fpv5-d16
ARM GAS  /tmp/ccTRR5PT.s 			page 60


 1702              	FLASH_CRC_WaitForLastOperation:
 1703              	.LFB147:
 928:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 929:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** /**
 930:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @brief  Wait for a FLASH CRC computation to complete.
 931:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Timeout maximum flash operation timeout
 932:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @param  Bank flash FLASH_BANK_1 or FLASH_BANK_2
 933:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 934:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   */
 935:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_CRC_WaitForLastOperation(uint32_t Timeout, uint32_t Bank)
 936:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** {
 1704              		.loc 1 936 1
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 80B5     		push	{r7, lr}
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 84B0     		sub	sp, sp, #16
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0
 1715              		.cfi_def_cfa_register 7
 1716 0006 7860     		str	r0, [r7, #4]
 1717 0008 3960     		str	r1, [r7]
 937:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t bsyflag;
 938:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1718              		.loc 1 938 24
 1719 000a FFF7FEFF 		bl	HAL_GetTick
 1720 000e B860     		str	r0, [r7, #8]
 939:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 940:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Bank));
 941:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 942:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Select bsyflag depending on Bank */
 943:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1721              		.loc 1 943 5
 1722 0010 3B68     		ldr	r3, [r7]
 1723 0012 012B     		cmp	r3, #1
 1724 0014 02D1     		bne	.L120
 944:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 945:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK1;
 1725              		.loc 1 945 13
 1726 0016 0823     		movs	r3, #8
 1727 0018 FB60     		str	r3, [r7, #12]
 1728 001a 13E0     		b	.L122
 1729              	.L120:
 946:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 947:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 948:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 949:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     bsyflag = FLASH_FLAG_CRC_BUSY_BANK2;
 1730              		.loc 1 949 13
 1731 001c 314B     		ldr	r3, .L130
 1732 001e FB60     		str	r3, [r7, #12]
 950:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 951:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 952:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Wait for the FLASH CRC computation to complete by polling on CRC_BUSY flag to be reset */
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(bsyflag))
ARM GAS  /tmp/ccTRR5PT.s 			page 61


 1733              		.loc 1 953 8
 1734 0020 10E0     		b	.L122
 1735              	.L127:
 954:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 955:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1736              		.loc 1 955 7
 1737 0022 7B68     		ldr	r3, [r7, #4]
 1738 0024 B3F1FF3F 		cmp	r3, #-1
 1739 0028 0CD0     		beq	.L122
 956:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 957:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 1740              		.loc 1 957 12
 1741 002a FFF7FEFF 		bl	HAL_GetTick
 1742 002e 0246     		mov	r2, r0
 1743              		.loc 1 957 26
 1744 0030 BB68     		ldr	r3, [r7, #8]
 1745 0032 D31A     		subs	r3, r2, r3
 1746              		.loc 1 957 9
 1747 0034 7A68     		ldr	r2, [r7, #4]
 1748 0036 9A42     		cmp	r2, r3
 1749 0038 02D3     		bcc	.L123
 1750              		.loc 1 957 50 discriminator 1
 1751 003a 7B68     		ldr	r3, [r7, #4]
 1752 003c 002B     		cmp	r3, #0
 1753 003e 01D1     		bne	.L122
 1754              	.L123:
 958:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       {
 959:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****         return HAL_TIMEOUT;
 1755              		.loc 1 959 16
 1756 0040 0323     		movs	r3, #3
 1757 0042 4BE0     		b	.L124
 1758              	.L122:
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1759              		.loc 1 953 9
 1760 0044 FA68     		ldr	r2, [r7, #12]
 1761 0046 284B     		ldr	r3, .L130+4
 1762 0048 1340     		ands	r3, r3, r2
 1763 004a FA68     		ldr	r2, [r7, #12]
 1764 004c 9A42     		cmp	r2, r3
 1765 004e 0AD1     		bne	.L125
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1766              		.loc 1 953 9 is_stmt 0 discriminator 1
 1767 0050 264B     		ldr	r3, .L130+8
 1768 0052 1A69     		ldr	r2, [r3, #16]
 1769 0054 FB68     		ldr	r3, [r7, #12]
 1770 0056 1340     		ands	r3, r3, r2
 1771 0058 FA68     		ldr	r2, [r7, #12]
 1772 005a 9A42     		cmp	r2, r3
 1773 005c 0CBF     		ite	eq
 1774 005e 0123     		moveq	r3, #1
 1775 0060 0023     		movne	r3, #0
 1776 0062 DBB2     		uxtb	r3, r3
 1777 0064 0CE0     		b	.L126
 1778              	.L125:
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1779              		.loc 1 953 9 discriminator 2
 1780 0066 214B     		ldr	r3, .L130+8
ARM GAS  /tmp/ccTRR5PT.s 			page 62


 1781 0068 D3F81031 		ldr	r3, [r3, #272]
 1782 006c DA43     		mvns	r2, r3
 1783 006e FB68     		ldr	r3, [r7, #12]
 1784 0070 1340     		ands	r3, r3, r2
 1785 0072 23F00043 		bic	r3, r3, #-2147483648
 1786 0076 002B     		cmp	r3, #0
 1787 0078 0CBF     		ite	eq
 1788 007a 0123     		moveq	r3, #1
 1789 007c 0023     		movne	r3, #0
 1790 007e DBB2     		uxtb	r3, r3
 1791              	.L126:
 953:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 1792              		.loc 1 953 8 is_stmt 1 discriminator 4
 1793 0080 002B     		cmp	r3, #0
 1794 0082 CED1     		bne	.L127
 960:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       }
 961:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 962:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 963:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 964:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* Check FLASH CRC read error flag  */
 965:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   if(Bank == FLASH_BANK_1)
 1795              		.loc 1 965 5
 1796 0084 3B68     		ldr	r3, [r7]
 1797 0086 012B     		cmp	r3, #1
 1798 0088 12D1     		bne	.L128
 966:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 967:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1))
 1799              		.loc 1 967 9
 1800 008a 184B     		ldr	r3, .L130+8
 1801 008c 1B69     		ldr	r3, [r3, #16]
 1802 008e 03F08053 		and	r3, r3, #268435456
 1803              		.loc 1 967 8
 1804 0092 B3F1805F 		cmp	r3, #268435456
 1805 0096 20D1     		bne	.L129
 968:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 969:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
 970:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK1;
 1806              		.loc 1 970 24
 1807 0098 154B     		ldr	r3, .L130+12
 1808 009a 9B69     		ldr	r3, [r3, #24]
 1809 009c 43F08053 		orr	r3, r3, #268435456
 1810 00a0 134A     		ldr	r2, .L130+12
 1811 00a2 9361     		str	r3, [r2, #24]
 971:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 972:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
 973:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK1(FLASH_FLAG_CRCRDERR_BANK1);
 1812              		.loc 1 973 7
 1813 00a4 114B     		ldr	r3, .L130+8
 1814 00a6 4FF08052 		mov	r2, #268435456
 1815 00aa 5A61     		str	r2, [r3, #20]
 974:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 975:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 1816              		.loc 1 975 14
 1817 00ac 0123     		movs	r3, #1
 1818 00ae 15E0     		b	.L124
 1819              	.L128:
 976:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
ARM GAS  /tmp/ccTRR5PT.s 			page 63


 977:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 978:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   else
 979:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   {
 980:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     if (__HAL_FLASH_GET_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2))
 1820              		.loc 1 980 9
 1821 00b0 0E4B     		ldr	r3, .L130+8
 1822 00b2 D3F81031 		ldr	r3, [r3, #272]
 1823 00b6 03F08053 		and	r3, r3, #268435456
 1824              		.loc 1 980 8
 1825 00ba B3F1805F 		cmp	r3, #268435456
 1826 00be 0CD1     		bne	.L129
 981:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     {
 982:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Save the error code */
 983:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       pFlash.ErrorCode |= HAL_FLASH_ERROR_CRCRD_BANK2;
 1827              		.loc 1 983 24
 1828 00c0 0B4B     		ldr	r3, .L130+12
 1829 00c2 9B69     		ldr	r3, [r3, #24]
 1830 00c4 43F01043 		orr	r3, r3, #-1879048192
 1831 00c8 094A     		ldr	r2, .L130+12
 1832 00ca 9361     		str	r3, [r2, #24]
 984:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 985:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       /* Clear FLASH CRC read error pending bit */
 986:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       __HAL_FLASH_CLEAR_FLAG_BANK2(FLASH_FLAG_CRCRDERR_BANK2);
 1833              		.loc 1 986 7
 1834 00cc 074B     		ldr	r3, .L130+8
 1835 00ce 4FF08052 		mov	r2, #268435456
 1836 00d2 C3F81421 		str	r2, [r3, #276]
 987:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 988:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****       return HAL_ERROR;
 1837              		.loc 1 988 14
 1838 00d6 0123     		movs	r3, #1
 1839 00d8 00E0     		b	.L124
 1840              	.L129:
 989:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****     }
 990:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   }
 991:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** 
 992:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   /* If there is no error flag set */
 993:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c ****   return HAL_OK;
 1841              		.loc 1 993 10
 1842 00da 0023     		movs	r3, #0
 1843              	.L124:
 994:./Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c **** }
 1844              		.loc 1 994 1
 1845 00dc 1846     		mov	r0, r3
 1846 00de 1037     		adds	r7, r7, #16
 1847              		.cfi_def_cfa_offset 8
 1848 00e0 BD46     		mov	sp, r7
 1849              		.cfi_def_cfa_register 13
 1850              		@ sp needed
 1851 00e2 80BD     		pop	{r7, pc}
 1852              	.L131:
 1853              		.align	2
 1854              	.L130:
 1855 00e4 08000080 		.word	-2147483640
 1856 00e8 0F00EF1F 		.word	535756815
 1857 00ec 00200052 		.word	1375739904
 1858 00f0 00000000 		.word	pFlash
ARM GAS  /tmp/ccTRR5PT.s 			page 64


 1859              		.cfi_endproc
 1860              	.LFE147:
 1862              		.text
 1863              	.Letext0:
 1864              		.file 3 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/ma
 1865              		.file 4 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 1866              		.file 5 "./Drivers/CMSIS/Include/core_cm7.h"
 1867              		.file 6 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1868              		.file 7 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1869              		.file 8 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.
 1870              		.file 9 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 1871              		.file 10 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 1872              		.file 11 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 1873              		.file 12 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/m
 1874              		.file 13 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1875              		.file 14 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1876              		.file 15 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccTRR5PT.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_flash.c
                            *COM*:000000000000001c pFlash
     /tmp/ccTRR5PT.s:18     .text.HAL_FLASH_Program:0000000000000000 $t
     /tmp/ccTRR5PT.s:26     .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
     /tmp/ccTRR5PT.s:1390   .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/ccTRR5PT.s:227    .text.HAL_FLASH_Program:00000000000000fc $d
     /tmp/ccTRR5PT.s:233    .text.HAL_FLASH_Program_IT:0000000000000000 $t
     /tmp/ccTRR5PT.s:240    .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
     /tmp/ccTRR5PT.s:441    .text.HAL_FLASH_Program_IT:00000000000000f4 $d
     /tmp/ccTRR5PT.s:447    .text.HAL_FLASH_IRQHandler:0000000000000000 $t
     /tmp/ccTRR5PT.s:454    .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
     /tmp/ccTRR5PT.s:903    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
     /tmp/ccTRR5PT.s:940    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
     /tmp/ccTRR5PT.s:839    .text.HAL_FLASH_IRQHandler:000000000000025c $d
     /tmp/ccTRR5PT.s:843    .text.HAL_FLASH_IRQHandler:0000000000000264 $t
     /tmp/ccTRR5PT.s:890    .text.HAL_FLASH_IRQHandler:00000000000002ac $d
     /tmp/ccTRR5PT.s:896    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
     /tmp/ccTRR5PT.s:933    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
     /tmp/ccTRR5PT.s:970    .text.HAL_FLASH_Unlock:0000000000000000 $t
     /tmp/ccTRR5PT.s:977    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
     /tmp/ccTRR5PT.s:1056   .text.HAL_FLASH_Unlock:0000000000000068 $d
     /tmp/ccTRR5PT.s:1063   .text.HAL_FLASH_Lock:0000000000000000 $t
     /tmp/ccTRR5PT.s:1070   .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
     /tmp/ccTRR5PT.s:1131   .text.HAL_FLASH_Lock:0000000000000050 $d
     /tmp/ccTRR5PT.s:1136   .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
     /tmp/ccTRR5PT.s:1143   .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
     /tmp/ccTRR5PT.s:1196   .text.HAL_FLASH_OB_Unlock:0000000000000038 $d
     /tmp/ccTRR5PT.s:1203   .text.HAL_FLASH_OB_Lock:0000000000000000 $t
     /tmp/ccTRR5PT.s:1210   .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
     /tmp/ccTRR5PT.s:1254   .text.HAL_FLASH_OB_Lock:000000000000002c $d
     /tmp/ccTRR5PT.s:1259   .text.HAL_FLASH_OB_Launch:0000000000000000 $t
     /tmp/ccTRR5PT.s:1266   .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
     /tmp/ccTRR5PT.s:1702   .text.FLASH_CRC_WaitForLastOperation:0000000000000000 FLASH_CRC_WaitForLastOperation
     /tmp/ccTRR5PT.s:1601   .text.FLASH_OB_WaitForLastOperation:0000000000000000 FLASH_OB_WaitForLastOperation
     /tmp/ccTRR5PT.s:1339   .text.HAL_FLASH_OB_Launch:0000000000000060 $d
     /tmp/ccTRR5PT.s:1344   .text.HAL_FLASH_GetError:0000000000000000 $t
     /tmp/ccTRR5PT.s:1351   .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
     /tmp/ccTRR5PT.s:1378   .text.HAL_FLASH_GetError:0000000000000014 $d
     /tmp/ccTRR5PT.s:1383   .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/ccTRR5PT.s:1585   .text.FLASH_WaitForLastOperation:0000000000000124 $d
     /tmp/ccTRR5PT.s:1594   .text.FLASH_OB_WaitForLastOperation:0000000000000000 $t
     /tmp/ccTRR5PT.s:1689   .text.FLASH_OB_WaitForLastOperation:0000000000000070 $d
     /tmp/ccTRR5PT.s:1695   .text.FLASH_CRC_WaitForLastOperation:0000000000000000 $t
     /tmp/ccTRR5PT.s:1855   .text.FLASH_CRC_WaitForLastOperation:00000000000000e4 $d

UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
