ARM GAS  /tmp/ccVDAMpJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SCB_EnableICache,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	SCB_EnableICache:
  25              	.LFB119:
  26              		.file 1 "./Drivers/CMSIS/Include/core_cm7.h"
   1:./Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:./Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:./Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.1
   5:./Drivers/CMSIS/Include/core_cm7.h ****  * @date     25. November 2016
   6:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/core_cm7.h **** /*
   8:./Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:./Drivers/CMSIS/Include/core_cm7.h ****  *
  10:./Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Drivers/CMSIS/Include/core_cm7.h ****  *
  12:./Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:./Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:./Drivers/CMSIS/Include/core_cm7.h ****  *
  16:./Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Drivers/CMSIS/Include/core_cm7.h ****  *
  18:./Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:./Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:./Drivers/CMSIS/Include/core_cm7.h ****  */
  24:./Drivers/CMSIS/Include/core_cm7.h **** 
  25:./Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:./Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  27:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  28:./Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:./Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:./Drivers/CMSIS/Include/core_cm7.h **** 
  31:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
ARM GAS  /tmp/ccVDAMpJ.s 			page 2


  33:./Drivers/CMSIS/Include/core_cm7.h **** 
  34:./Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:./Drivers/CMSIS/Include/core_cm7.h **** 
  36:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:./Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:./Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:./Drivers/CMSIS/Include/core_cm7.h **** 
  40:./Drivers/CMSIS/Include/core_cm7.h **** /**
  41:./Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:./Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:./Drivers/CMSIS/Include/core_cm7.h **** 
  44:./Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:./Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:./Drivers/CMSIS/Include/core_cm7.h **** 
  47:./Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:./Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:./Drivers/CMSIS/Include/core_cm7.h **** 
  50:./Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:./Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:./Drivers/CMSIS/Include/core_cm7.h ****  */
  53:./Drivers/CMSIS/Include/core_cm7.h **** 
  54:./Drivers/CMSIS/Include/core_cm7.h **** 
  55:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:./Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:./Drivers/CMSIS/Include/core_cm7.h **** /**
  59:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:./Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:./Drivers/CMSIS/Include/core_cm7.h ****  */
  62:./Drivers/CMSIS/Include/core_cm7.h **** 
  63:./Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  64:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  ( 5U)                                      /*!< [31:16] CMSIS HAL
  65:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( 0U)                                      /*!< [15:0]  CMSIS HAL
  66:./Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  67:./Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< CMSIS HAL version
  68:./Drivers/CMSIS/Include/core_cm7.h **** 
  69:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  70:./Drivers/CMSIS/Include/core_cm7.h **** 
  71:./Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  72:./Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  73:./Drivers/CMSIS/Include/core_cm7.h **** */
  74:./Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  75:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  76:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  77:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  78:./Drivers/CMSIS/Include/core_cm7.h ****     #else
  79:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  80:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  81:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
  82:./Drivers/CMSIS/Include/core_cm7.h ****   #else
  83:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  84:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
  85:./Drivers/CMSIS/Include/core_cm7.h **** 
  86:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  87:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  88:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  89:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
ARM GAS  /tmp/ccVDAMpJ.s 			page 3


  90:./Drivers/CMSIS/Include/core_cm7.h ****     #else
  91:./Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  92:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  93:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
  94:./Drivers/CMSIS/Include/core_cm7.h ****   #else
  95:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  96:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
  97:./Drivers/CMSIS/Include/core_cm7.h **** 
  98:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  99:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 100:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 101:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 102:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 103:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 104:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 105:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 106:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 107:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 108:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 109:./Drivers/CMSIS/Include/core_cm7.h **** 
 110:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 111:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 112:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 113:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 114:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 115:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 116:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 117:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 118:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 119:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 120:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 121:./Drivers/CMSIS/Include/core_cm7.h **** 
 122:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 123:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 124:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 125:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 126:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 127:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 129:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 130:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 131:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 132:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 133:./Drivers/CMSIS/Include/core_cm7.h **** 
 134:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 135:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 136:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 137:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 138:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 139:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 140:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 141:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 142:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 143:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 144:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 145:./Drivers/CMSIS/Include/core_cm7.h **** 
 146:./Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
ARM GAS  /tmp/ccVDAMpJ.s 			page 4


 147:./Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 148:./Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 149:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 150:./Drivers/CMSIS/Include/core_cm7.h ****     #else
 151:./Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 152:./Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 153:./Drivers/CMSIS/Include/core_cm7.h ****     #endif
 154:./Drivers/CMSIS/Include/core_cm7.h ****   #else
 155:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 156:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 157:./Drivers/CMSIS/Include/core_cm7.h **** 
 158:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 159:./Drivers/CMSIS/Include/core_cm7.h **** 
 160:./Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 161:./Drivers/CMSIS/Include/core_cm7.h **** 
 162:./Drivers/CMSIS/Include/core_cm7.h **** 
 163:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 164:./Drivers/CMSIS/Include/core_cm7.h **** }
 165:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 166:./Drivers/CMSIS/Include/core_cm7.h **** 
 167:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 168:./Drivers/CMSIS/Include/core_cm7.h **** 
 169:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 170:./Drivers/CMSIS/Include/core_cm7.h **** 
 171:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 172:./Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 173:./Drivers/CMSIS/Include/core_cm7.h **** 
 174:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 175:./Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 176:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 177:./Drivers/CMSIS/Include/core_cm7.h **** 
 178:./Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 179:./Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 180:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 181:./Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 182:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 183:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 184:./Drivers/CMSIS/Include/core_cm7.h **** 
 185:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 186:./Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 187:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 188:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 189:./Drivers/CMSIS/Include/core_cm7.h **** 
 190:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 191:./Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 192:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 193:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 194:./Drivers/CMSIS/Include/core_cm7.h **** 
 195:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 196:./Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 197:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 198:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 199:./Drivers/CMSIS/Include/core_cm7.h **** 
 200:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 201:./Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 202:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 203:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccVDAMpJ.s 			page 5


 204:./Drivers/CMSIS/Include/core_cm7.h **** 
 205:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 206:./Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 207:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 208:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 209:./Drivers/CMSIS/Include/core_cm7.h **** 
 210:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 211:./Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 212:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 213:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 214:./Drivers/CMSIS/Include/core_cm7.h **** 
 215:./Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 216:./Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 217:./Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 218:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
 219:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 220:./Drivers/CMSIS/Include/core_cm7.h **** 
 221:./Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 222:./Drivers/CMSIS/Include/core_cm7.h **** /**
 223:./Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 224:./Drivers/CMSIS/Include/core_cm7.h **** 
 225:./Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 226:./Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 227:./Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 228:./Drivers/CMSIS/Include/core_cm7.h **** */
 229:./Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 230:./Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 231:./Drivers/CMSIS/Include/core_cm7.h **** #else
 232:./Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 233:./Drivers/CMSIS/Include/core_cm7.h **** #endif
 234:./Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 235:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 236:./Drivers/CMSIS/Include/core_cm7.h **** 
 237:./Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 238:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 239:./Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 240:./Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 241:./Drivers/CMSIS/Include/core_cm7.h **** 
 242:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 243:./Drivers/CMSIS/Include/core_cm7.h **** 
 244:./Drivers/CMSIS/Include/core_cm7.h **** 
 245:./Drivers/CMSIS/Include/core_cm7.h **** 
 246:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 247:./Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 248:./Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 249:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 250:./Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 251:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 252:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 253:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 254:./Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 255:./Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 256:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 257:./Drivers/CMSIS/Include/core_cm7.h **** /**
 258:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 259:./Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 260:./Drivers/CMSIS/Include/core_cm7.h **** */
ARM GAS  /tmp/ccVDAMpJ.s 			page 6


 261:./Drivers/CMSIS/Include/core_cm7.h **** 
 262:./Drivers/CMSIS/Include/core_cm7.h **** /**
 263:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 264:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 265:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 266:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 267:./Drivers/CMSIS/Include/core_cm7.h ****  */
 268:./Drivers/CMSIS/Include/core_cm7.h **** 
 269:./Drivers/CMSIS/Include/core_cm7.h **** /**
 270:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 271:./Drivers/CMSIS/Include/core_cm7.h ****  */
 272:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 273:./Drivers/CMSIS/Include/core_cm7.h **** {
 274:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 275:./Drivers/CMSIS/Include/core_cm7.h ****   {
 276:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 277:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 278:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 279:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 280:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 281:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 282:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 283:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 284:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 285:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 286:./Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 287:./Drivers/CMSIS/Include/core_cm7.h **** 
 288:./Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 289:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 290:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 291:./Drivers/CMSIS/Include/core_cm7.h **** 
 292:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 293:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 294:./Drivers/CMSIS/Include/core_cm7.h **** 
 295:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 296:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 297:./Drivers/CMSIS/Include/core_cm7.h **** 
 298:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 299:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 300:./Drivers/CMSIS/Include/core_cm7.h **** 
 301:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 302:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 303:./Drivers/CMSIS/Include/core_cm7.h **** 
 304:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 305:./Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 306:./Drivers/CMSIS/Include/core_cm7.h **** 
 307:./Drivers/CMSIS/Include/core_cm7.h **** 
 308:./Drivers/CMSIS/Include/core_cm7.h **** /**
 309:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 310:./Drivers/CMSIS/Include/core_cm7.h ****  */
 311:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 312:./Drivers/CMSIS/Include/core_cm7.h **** {
 313:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 314:./Drivers/CMSIS/Include/core_cm7.h ****   {
 315:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 316:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 317:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /tmp/ccVDAMpJ.s 			page 7


 318:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 319:./Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 320:./Drivers/CMSIS/Include/core_cm7.h **** 
 321:./Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 322:./Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 323:./Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 324:./Drivers/CMSIS/Include/core_cm7.h **** 
 325:./Drivers/CMSIS/Include/core_cm7.h **** 
 326:./Drivers/CMSIS/Include/core_cm7.h **** /**
 327:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 328:./Drivers/CMSIS/Include/core_cm7.h ****  */
 329:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 330:./Drivers/CMSIS/Include/core_cm7.h **** {
 331:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 332:./Drivers/CMSIS/Include/core_cm7.h ****   {
 333:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 334:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 335:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 336:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 337:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 338:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 339:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 340:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 341:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 342:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 343:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 344:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 345:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 346:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 347:./Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 348:./Drivers/CMSIS/Include/core_cm7.h **** 
 349:./Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 350:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 351:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 352:./Drivers/CMSIS/Include/core_cm7.h **** 
 353:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 354:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 355:./Drivers/CMSIS/Include/core_cm7.h **** 
 356:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 357:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 358:./Drivers/CMSIS/Include/core_cm7.h **** 
 359:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 360:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 361:./Drivers/CMSIS/Include/core_cm7.h **** 
 362:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 363:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 364:./Drivers/CMSIS/Include/core_cm7.h **** 
 365:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 366:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 367:./Drivers/CMSIS/Include/core_cm7.h **** 
 368:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 369:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 370:./Drivers/CMSIS/Include/core_cm7.h **** 
 371:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 372:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 373:./Drivers/CMSIS/Include/core_cm7.h **** 
 374:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
ARM GAS  /tmp/ccVDAMpJ.s 			page 8


 375:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 376:./Drivers/CMSIS/Include/core_cm7.h **** 
 377:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 378:./Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:./Drivers/CMSIS/Include/core_cm7.h **** 
 380:./Drivers/CMSIS/Include/core_cm7.h **** 
 381:./Drivers/CMSIS/Include/core_cm7.h **** /**
 382:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 383:./Drivers/CMSIS/Include/core_cm7.h ****  */
 384:./Drivers/CMSIS/Include/core_cm7.h **** typedef union
 385:./Drivers/CMSIS/Include/core_cm7.h **** {
 386:./Drivers/CMSIS/Include/core_cm7.h ****   struct
 387:./Drivers/CMSIS/Include/core_cm7.h ****   {
 388:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 389:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 390:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 391:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 392:./Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 393:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 394:./Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 395:./Drivers/CMSIS/Include/core_cm7.h **** 
 396:./Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 397:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 398:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 399:./Drivers/CMSIS/Include/core_cm7.h **** 
 400:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 401:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 402:./Drivers/CMSIS/Include/core_cm7.h **** 
 403:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 404:./Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 405:./Drivers/CMSIS/Include/core_cm7.h **** 
 406:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 407:./Drivers/CMSIS/Include/core_cm7.h **** 
 408:./Drivers/CMSIS/Include/core_cm7.h **** 
 409:./Drivers/CMSIS/Include/core_cm7.h **** /**
 410:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 411:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 412:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 413:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 414:./Drivers/CMSIS/Include/core_cm7.h ****  */
 415:./Drivers/CMSIS/Include/core_cm7.h **** 
 416:./Drivers/CMSIS/Include/core_cm7.h **** /**
 417:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 418:./Drivers/CMSIS/Include/core_cm7.h ****  */
 419:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 420:./Drivers/CMSIS/Include/core_cm7.h **** {
 421:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 422:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 423:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 424:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 425:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 426:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 427:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 428:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 429:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 430:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 431:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
ARM GAS  /tmp/ccVDAMpJ.s 			page 9


 432:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 433:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 434:./Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 435:./Drivers/CMSIS/Include/core_cm7.h **** 
 436:./Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 437:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 438:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 439:./Drivers/CMSIS/Include/core_cm7.h **** 
 440:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 441:./Drivers/CMSIS/Include/core_cm7.h **** 
 442:./Drivers/CMSIS/Include/core_cm7.h **** 
 443:./Drivers/CMSIS/Include/core_cm7.h **** /**
 444:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 445:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 446:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 447:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 448:./Drivers/CMSIS/Include/core_cm7.h ****  */
 449:./Drivers/CMSIS/Include/core_cm7.h **** 
 450:./Drivers/CMSIS/Include/core_cm7.h **** /**
 451:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 452:./Drivers/CMSIS/Include/core_cm7.h ****  */
 453:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 454:./Drivers/CMSIS/Include/core_cm7.h **** {
 455:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 456:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 457:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 458:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 459:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 460:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 461:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 462:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 463:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 464:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 465:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 466:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 467:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 468:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 469:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 470:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 471:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 472:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 473:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 474:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 475:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 476:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 477:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 478:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 479:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 481:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 482:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 483:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 484:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 485:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 486:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 487:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 488:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
ARM GAS  /tmp/ccVDAMpJ.s 			page 10


 489:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 490:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 491:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 492:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 493:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 494:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 495:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 496:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 497:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 498:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 499:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 500:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 501:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 502:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 503:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 504:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 505:./Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 506:./Drivers/CMSIS/Include/core_cm7.h **** 
 507:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 508:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 509:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 510:./Drivers/CMSIS/Include/core_cm7.h **** 
 511:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 512:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 513:./Drivers/CMSIS/Include/core_cm7.h **** 
 514:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 515:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 516:./Drivers/CMSIS/Include/core_cm7.h **** 
 517:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 518:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 519:./Drivers/CMSIS/Include/core_cm7.h **** 
 520:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 521:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 522:./Drivers/CMSIS/Include/core_cm7.h **** 
 523:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 524:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 525:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 526:./Drivers/CMSIS/Include/core_cm7.h **** 
 527:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 528:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 529:./Drivers/CMSIS/Include/core_cm7.h **** 
 530:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 531:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 532:./Drivers/CMSIS/Include/core_cm7.h **** 
 533:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 534:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 535:./Drivers/CMSIS/Include/core_cm7.h **** 
 536:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 537:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 538:./Drivers/CMSIS/Include/core_cm7.h **** 
 539:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 540:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 541:./Drivers/CMSIS/Include/core_cm7.h **** 
 542:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 543:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 544:./Drivers/CMSIS/Include/core_cm7.h **** 
 545:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
ARM GAS  /tmp/ccVDAMpJ.s 			page 11


 546:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 547:./Drivers/CMSIS/Include/core_cm7.h **** 
 548:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 549:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 550:./Drivers/CMSIS/Include/core_cm7.h **** 
 551:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 552:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 553:./Drivers/CMSIS/Include/core_cm7.h **** 
 554:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 555:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 556:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 557:./Drivers/CMSIS/Include/core_cm7.h **** 
 558:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 559:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 560:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 561:./Drivers/CMSIS/Include/core_cm7.h **** 
 562:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 563:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 564:./Drivers/CMSIS/Include/core_cm7.h **** 
 565:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 566:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 567:./Drivers/CMSIS/Include/core_cm7.h **** 
 568:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 569:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 570:./Drivers/CMSIS/Include/core_cm7.h **** 
 571:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 572:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 573:./Drivers/CMSIS/Include/core_cm7.h **** 
 574:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 575:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 576:./Drivers/CMSIS/Include/core_cm7.h **** 
 577:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 578:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 579:./Drivers/CMSIS/Include/core_cm7.h **** 
 580:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 581:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 582:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 583:./Drivers/CMSIS/Include/core_cm7.h **** 
 584:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 585:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 586:./Drivers/CMSIS/Include/core_cm7.h **** 
 587:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 588:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 589:./Drivers/CMSIS/Include/core_cm7.h **** 
 590:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 591:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 592:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 593:./Drivers/CMSIS/Include/core_cm7.h **** 
 594:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 595:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 596:./Drivers/CMSIS/Include/core_cm7.h **** 
 597:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 598:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 599:./Drivers/CMSIS/Include/core_cm7.h **** 
 600:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 601:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 602:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 12


 603:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 604:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 605:./Drivers/CMSIS/Include/core_cm7.h **** 
 606:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 607:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 608:./Drivers/CMSIS/Include/core_cm7.h **** 
 609:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 610:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 611:./Drivers/CMSIS/Include/core_cm7.h **** 
 612:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 613:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 614:./Drivers/CMSIS/Include/core_cm7.h **** 
 615:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 616:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 617:./Drivers/CMSIS/Include/core_cm7.h **** 
 618:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 619:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 620:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 621:./Drivers/CMSIS/Include/core_cm7.h **** 
 622:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 623:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 624:./Drivers/CMSIS/Include/core_cm7.h **** 
 625:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 626:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 627:./Drivers/CMSIS/Include/core_cm7.h **** 
 628:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 629:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 630:./Drivers/CMSIS/Include/core_cm7.h **** 
 631:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 632:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 633:./Drivers/CMSIS/Include/core_cm7.h **** 
 634:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 635:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 636:./Drivers/CMSIS/Include/core_cm7.h **** 
 637:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 638:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 639:./Drivers/CMSIS/Include/core_cm7.h **** 
 640:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 641:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 642:./Drivers/CMSIS/Include/core_cm7.h **** 
 643:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 644:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 645:./Drivers/CMSIS/Include/core_cm7.h **** 
 646:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 647:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 648:./Drivers/CMSIS/Include/core_cm7.h **** 
 649:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 650:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 651:./Drivers/CMSIS/Include/core_cm7.h **** 
 652:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 653:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 654:./Drivers/CMSIS/Include/core_cm7.h **** 
 655:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 656:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 657:./Drivers/CMSIS/Include/core_cm7.h **** 
 658:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 659:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
ARM GAS  /tmp/ccVDAMpJ.s 			page 13


 660:./Drivers/CMSIS/Include/core_cm7.h **** 
 661:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 662:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 663:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 664:./Drivers/CMSIS/Include/core_cm7.h **** 
 665:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 666:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 667:./Drivers/CMSIS/Include/core_cm7.h **** 
 668:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 669:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 670:./Drivers/CMSIS/Include/core_cm7.h **** 
 671:./Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 672:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 673:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 674:./Drivers/CMSIS/Include/core_cm7.h **** 
 675:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 676:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 677:./Drivers/CMSIS/Include/core_cm7.h **** 
 678:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 679:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 680:./Drivers/CMSIS/Include/core_cm7.h **** 
 681:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 682:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 683:./Drivers/CMSIS/Include/core_cm7.h **** 
 684:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 685:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 686:./Drivers/CMSIS/Include/core_cm7.h **** 
 687:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 688:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 689:./Drivers/CMSIS/Include/core_cm7.h **** 
 690:./Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 691:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 692:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 693:./Drivers/CMSIS/Include/core_cm7.h **** 
 694:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 695:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 696:./Drivers/CMSIS/Include/core_cm7.h **** 
 697:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 698:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 699:./Drivers/CMSIS/Include/core_cm7.h **** 
 700:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 701:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 702:./Drivers/CMSIS/Include/core_cm7.h **** 
 703:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 704:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 705:./Drivers/CMSIS/Include/core_cm7.h **** 
 706:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 707:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 708:./Drivers/CMSIS/Include/core_cm7.h **** 
 709:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 710:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 711:./Drivers/CMSIS/Include/core_cm7.h **** 
 712:./Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 713:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 714:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 715:./Drivers/CMSIS/Include/core_cm7.h **** 
 716:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
ARM GAS  /tmp/ccVDAMpJ.s 			page 14


 717:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 718:./Drivers/CMSIS/Include/core_cm7.h **** 
 719:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 720:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 721:./Drivers/CMSIS/Include/core_cm7.h **** 
 722:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 723:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 724:./Drivers/CMSIS/Include/core_cm7.h **** 
 725:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 726:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 727:./Drivers/CMSIS/Include/core_cm7.h **** 
 728:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 729:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 730:./Drivers/CMSIS/Include/core_cm7.h **** 
 731:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 732:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 733:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 734:./Drivers/CMSIS/Include/core_cm7.h **** 
 735:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 736:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 737:./Drivers/CMSIS/Include/core_cm7.h **** 
 738:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 739:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 740:./Drivers/CMSIS/Include/core_cm7.h **** 
 741:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 742:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 743:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 744:./Drivers/CMSIS/Include/core_cm7.h **** 
 745:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 746:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 747:./Drivers/CMSIS/Include/core_cm7.h **** 
 748:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 749:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 750:./Drivers/CMSIS/Include/core_cm7.h **** 
 751:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 752:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 753:./Drivers/CMSIS/Include/core_cm7.h **** 
 754:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 755:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 756:./Drivers/CMSIS/Include/core_cm7.h **** 
 757:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 758:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 759:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 760:./Drivers/CMSIS/Include/core_cm7.h **** 
 761:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 762:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 763:./Drivers/CMSIS/Include/core_cm7.h **** 
 764:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 765:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 766:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 767:./Drivers/CMSIS/Include/core_cm7.h **** 
 768:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 769:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 770:./Drivers/CMSIS/Include/core_cm7.h **** 
 771:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 772:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 773:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 15


 774:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 775:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 776:./Drivers/CMSIS/Include/core_cm7.h **** 
 777:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 778:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 779:./Drivers/CMSIS/Include/core_cm7.h **** 
 780:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 781:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 782:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 783:./Drivers/CMSIS/Include/core_cm7.h **** 
 784:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 785:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 786:./Drivers/CMSIS/Include/core_cm7.h **** 
 787:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 788:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 789:./Drivers/CMSIS/Include/core_cm7.h **** 
 790:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 791:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 792:./Drivers/CMSIS/Include/core_cm7.h **** 
 793:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 794:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 795:./Drivers/CMSIS/Include/core_cm7.h **** 
 796:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 797:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 798:./Drivers/CMSIS/Include/core_cm7.h **** 
 799:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 800:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 801:./Drivers/CMSIS/Include/core_cm7.h **** 
 802:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 803:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 804:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 805:./Drivers/CMSIS/Include/core_cm7.h **** 
 806:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 807:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 808:./Drivers/CMSIS/Include/core_cm7.h **** 
 809:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 810:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 811:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 812:./Drivers/CMSIS/Include/core_cm7.h **** 
 813:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 814:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 815:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 816:./Drivers/CMSIS/Include/core_cm7.h **** 
 817:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 818:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 819:./Drivers/CMSIS/Include/core_cm7.h **** 
 820:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 821:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 822:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 823:./Drivers/CMSIS/Include/core_cm7.h **** 
 824:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 825:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 826:./Drivers/CMSIS/Include/core_cm7.h **** 
 827:./Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 828:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 829:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 830:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 16


 831:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 832:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 833:./Drivers/CMSIS/Include/core_cm7.h **** 
 834:./Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 835:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 837:./Drivers/CMSIS/Include/core_cm7.h **** 
 838:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 840:./Drivers/CMSIS/Include/core_cm7.h **** 
 841:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 843:./Drivers/CMSIS/Include/core_cm7.h **** 
 844:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 846:./Drivers/CMSIS/Include/core_cm7.h **** 
 847:./Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 848:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 849:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 850:./Drivers/CMSIS/Include/core_cm7.h **** 
 851:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 852:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 853:./Drivers/CMSIS/Include/core_cm7.h **** 
 854:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 855:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 856:./Drivers/CMSIS/Include/core_cm7.h **** 
 857:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 858:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 859:./Drivers/CMSIS/Include/core_cm7.h **** 
 860:./Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 861:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 862:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 863:./Drivers/CMSIS/Include/core_cm7.h **** 
 864:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 865:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 866:./Drivers/CMSIS/Include/core_cm7.h **** 
 867:./Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 868:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 869:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 870:./Drivers/CMSIS/Include/core_cm7.h **** 
 871:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 872:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 873:./Drivers/CMSIS/Include/core_cm7.h **** 
 874:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 875:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 876:./Drivers/CMSIS/Include/core_cm7.h **** 
 877:./Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 878:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 879:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 880:./Drivers/CMSIS/Include/core_cm7.h **** 
 881:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 882:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 883:./Drivers/CMSIS/Include/core_cm7.h **** 
 884:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 885:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 886:./Drivers/CMSIS/Include/core_cm7.h **** 
 887:./Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
ARM GAS  /tmp/ccVDAMpJ.s 			page 17


 888:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 889:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 890:./Drivers/CMSIS/Include/core_cm7.h **** 
 891:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 892:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 893:./Drivers/CMSIS/Include/core_cm7.h **** 
 894:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 895:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 896:./Drivers/CMSIS/Include/core_cm7.h **** 
 897:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 898:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 899:./Drivers/CMSIS/Include/core_cm7.h **** 
 900:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 901:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 902:./Drivers/CMSIS/Include/core_cm7.h **** 
 903:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 904:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 905:./Drivers/CMSIS/Include/core_cm7.h **** 
 906:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 907:./Drivers/CMSIS/Include/core_cm7.h **** 
 908:./Drivers/CMSIS/Include/core_cm7.h **** 
 909:./Drivers/CMSIS/Include/core_cm7.h **** /**
 910:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 911:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 912:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 913:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 914:./Drivers/CMSIS/Include/core_cm7.h ****  */
 915:./Drivers/CMSIS/Include/core_cm7.h **** 
 916:./Drivers/CMSIS/Include/core_cm7.h **** /**
 917:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 918:./Drivers/CMSIS/Include/core_cm7.h ****  */
 919:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 920:./Drivers/CMSIS/Include/core_cm7.h **** {
 921:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 922:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 923:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 924:./Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 925:./Drivers/CMSIS/Include/core_cm7.h **** 
 926:./Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 927:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 928:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 929:./Drivers/CMSIS/Include/core_cm7.h **** 
 930:./Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 931:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 932:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 933:./Drivers/CMSIS/Include/core_cm7.h **** 
 934:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 935:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 936:./Drivers/CMSIS/Include/core_cm7.h **** 
 937:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 938:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 939:./Drivers/CMSIS/Include/core_cm7.h **** 
 940:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 941:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 942:./Drivers/CMSIS/Include/core_cm7.h **** 
 943:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 944:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  /tmp/ccVDAMpJ.s 			page 18


 945:./Drivers/CMSIS/Include/core_cm7.h **** 
 946:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 947:./Drivers/CMSIS/Include/core_cm7.h **** 
 948:./Drivers/CMSIS/Include/core_cm7.h **** 
 949:./Drivers/CMSIS/Include/core_cm7.h **** /**
 950:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 951:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 952:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 953:./Drivers/CMSIS/Include/core_cm7.h ****   @{
 954:./Drivers/CMSIS/Include/core_cm7.h ****  */
 955:./Drivers/CMSIS/Include/core_cm7.h **** 
 956:./Drivers/CMSIS/Include/core_cm7.h **** /**
 957:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 958:./Drivers/CMSIS/Include/core_cm7.h ****  */
 959:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 960:./Drivers/CMSIS/Include/core_cm7.h **** {
 961:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 962:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 963:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 964:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 965:./Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 966:./Drivers/CMSIS/Include/core_cm7.h **** 
 967:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 968:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 969:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 970:./Drivers/CMSIS/Include/core_cm7.h **** 
 971:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 972:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 973:./Drivers/CMSIS/Include/core_cm7.h **** 
 974:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 975:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 976:./Drivers/CMSIS/Include/core_cm7.h **** 
 977:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 978:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 979:./Drivers/CMSIS/Include/core_cm7.h **** 
 980:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 981:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 982:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 983:./Drivers/CMSIS/Include/core_cm7.h **** 
 984:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 985:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 986:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 987:./Drivers/CMSIS/Include/core_cm7.h **** 
 988:./Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 989:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 990:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 991:./Drivers/CMSIS/Include/core_cm7.h **** 
 992:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 993:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 994:./Drivers/CMSIS/Include/core_cm7.h **** 
 995:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 996:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 997:./Drivers/CMSIS/Include/core_cm7.h **** 
 998:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 999:./Drivers/CMSIS/Include/core_cm7.h **** 
1000:./Drivers/CMSIS/Include/core_cm7.h **** 
1001:./Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccVDAMpJ.s 			page 19


1002:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1003:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1004:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1005:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1006:./Drivers/CMSIS/Include/core_cm7.h ****  */
1007:./Drivers/CMSIS/Include/core_cm7.h **** 
1008:./Drivers/CMSIS/Include/core_cm7.h **** /**
1009:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1010:./Drivers/CMSIS/Include/core_cm7.h ****  */
1011:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1012:./Drivers/CMSIS/Include/core_cm7.h **** {
1013:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1014:./Drivers/CMSIS/Include/core_cm7.h ****   {
1015:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1016:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1017:./Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1018:./Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1019:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1020:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1021:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1022:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1023:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1024:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1025:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1026:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1027:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1028:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1029:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1030:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1031:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1032:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1033:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1034:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1035:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1036:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1037:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1038:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1039:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1040:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1041:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1042:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1043:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1044:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1045:./Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1046:./Drivers/CMSIS/Include/core_cm7.h **** 
1047:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1048:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1049:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1050:./Drivers/CMSIS/Include/core_cm7.h **** 
1051:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1052:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1053:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1054:./Drivers/CMSIS/Include/core_cm7.h **** 
1055:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1056:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1057:./Drivers/CMSIS/Include/core_cm7.h **** 
1058:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
ARM GAS  /tmp/ccVDAMpJ.s 			page 20


1059:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1060:./Drivers/CMSIS/Include/core_cm7.h **** 
1061:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1062:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1063:./Drivers/CMSIS/Include/core_cm7.h **** 
1064:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1065:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1066:./Drivers/CMSIS/Include/core_cm7.h **** 
1067:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1068:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1069:./Drivers/CMSIS/Include/core_cm7.h **** 
1070:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1071:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1072:./Drivers/CMSIS/Include/core_cm7.h **** 
1073:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1074:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1075:./Drivers/CMSIS/Include/core_cm7.h **** 
1076:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1077:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1078:./Drivers/CMSIS/Include/core_cm7.h **** 
1079:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1080:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1081:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1082:./Drivers/CMSIS/Include/core_cm7.h **** 
1083:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1084:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1085:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1086:./Drivers/CMSIS/Include/core_cm7.h **** 
1087:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1088:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1089:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1090:./Drivers/CMSIS/Include/core_cm7.h **** 
1091:./Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1092:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1093:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1094:./Drivers/CMSIS/Include/core_cm7.h **** 
1095:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1096:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1097:./Drivers/CMSIS/Include/core_cm7.h **** 
1098:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1099:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1100:./Drivers/CMSIS/Include/core_cm7.h **** 
1101:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1102:./Drivers/CMSIS/Include/core_cm7.h **** 
1103:./Drivers/CMSIS/Include/core_cm7.h **** 
1104:./Drivers/CMSIS/Include/core_cm7.h **** /**
1105:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1106:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1107:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1108:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1109:./Drivers/CMSIS/Include/core_cm7.h ****  */
1110:./Drivers/CMSIS/Include/core_cm7.h **** 
1111:./Drivers/CMSIS/Include/core_cm7.h **** /**
1112:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1113:./Drivers/CMSIS/Include/core_cm7.h ****  */
1114:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1115:./Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccVDAMpJ.s 			page 21


1116:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1117:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1118:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1119:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1120:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1121:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1122:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1123:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1124:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1125:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1126:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1127:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1128:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1129:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1130:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1131:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1132:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1133:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1134:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1135:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1136:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1137:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1138:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1139:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1140:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1141:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1142:./Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1143:./Drivers/CMSIS/Include/core_cm7.h **** 
1144:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1145:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1146:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1147:./Drivers/CMSIS/Include/core_cm7.h **** 
1148:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1149:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1150:./Drivers/CMSIS/Include/core_cm7.h **** 
1151:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1152:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1153:./Drivers/CMSIS/Include/core_cm7.h **** 
1154:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1155:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1156:./Drivers/CMSIS/Include/core_cm7.h **** 
1157:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1158:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1159:./Drivers/CMSIS/Include/core_cm7.h **** 
1160:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1161:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1162:./Drivers/CMSIS/Include/core_cm7.h **** 
1163:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1164:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1165:./Drivers/CMSIS/Include/core_cm7.h **** 
1166:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1167:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1168:./Drivers/CMSIS/Include/core_cm7.h **** 
1169:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1170:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1171:./Drivers/CMSIS/Include/core_cm7.h **** 
1172:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
ARM GAS  /tmp/ccVDAMpJ.s 			page 22


1173:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1174:./Drivers/CMSIS/Include/core_cm7.h **** 
1175:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1176:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1177:./Drivers/CMSIS/Include/core_cm7.h **** 
1178:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1179:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1180:./Drivers/CMSIS/Include/core_cm7.h **** 
1181:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1182:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1183:./Drivers/CMSIS/Include/core_cm7.h **** 
1184:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1185:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1186:./Drivers/CMSIS/Include/core_cm7.h **** 
1187:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1188:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1189:./Drivers/CMSIS/Include/core_cm7.h **** 
1190:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1191:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1192:./Drivers/CMSIS/Include/core_cm7.h **** 
1193:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1194:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1195:./Drivers/CMSIS/Include/core_cm7.h **** 
1196:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1197:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1198:./Drivers/CMSIS/Include/core_cm7.h **** 
1199:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1200:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1201:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1202:./Drivers/CMSIS/Include/core_cm7.h **** 
1203:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1204:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1205:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1206:./Drivers/CMSIS/Include/core_cm7.h **** 
1207:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1208:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1209:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1210:./Drivers/CMSIS/Include/core_cm7.h **** 
1211:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1212:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1213:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1214:./Drivers/CMSIS/Include/core_cm7.h **** 
1215:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1216:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1217:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1218:./Drivers/CMSIS/Include/core_cm7.h **** 
1219:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1220:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1221:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1222:./Drivers/CMSIS/Include/core_cm7.h **** 
1223:./Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1224:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1225:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1226:./Drivers/CMSIS/Include/core_cm7.h **** 
1227:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1228:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1229:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 23


1230:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1231:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1232:./Drivers/CMSIS/Include/core_cm7.h **** 
1233:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1234:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1235:./Drivers/CMSIS/Include/core_cm7.h **** 
1236:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1237:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1238:./Drivers/CMSIS/Include/core_cm7.h **** 
1239:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1240:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1241:./Drivers/CMSIS/Include/core_cm7.h **** 
1242:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1243:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1244:./Drivers/CMSIS/Include/core_cm7.h **** 
1245:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1246:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1247:./Drivers/CMSIS/Include/core_cm7.h **** 
1248:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1249:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1250:./Drivers/CMSIS/Include/core_cm7.h **** 
1251:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1252:./Drivers/CMSIS/Include/core_cm7.h **** 
1253:./Drivers/CMSIS/Include/core_cm7.h **** 
1254:./Drivers/CMSIS/Include/core_cm7.h **** /**
1255:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1256:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1257:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1258:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1259:./Drivers/CMSIS/Include/core_cm7.h ****  */
1260:./Drivers/CMSIS/Include/core_cm7.h **** 
1261:./Drivers/CMSIS/Include/core_cm7.h **** /**
1262:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1263:./Drivers/CMSIS/Include/core_cm7.h ****  */
1264:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1265:./Drivers/CMSIS/Include/core_cm7.h **** {
1266:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1267:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1268:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1269:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1270:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1271:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1272:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1273:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1274:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1275:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1276:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1277:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1278:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1279:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1280:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1281:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1282:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1283:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1284:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1285:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1286:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
ARM GAS  /tmp/ccVDAMpJ.s 			page 24


1287:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1288:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1289:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1290:./Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1291:./Drivers/CMSIS/Include/core_cm7.h **** 
1292:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1293:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1294:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1295:./Drivers/CMSIS/Include/core_cm7.h **** 
1296:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1297:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1298:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1299:./Drivers/CMSIS/Include/core_cm7.h **** 
1300:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1301:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1302:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1303:./Drivers/CMSIS/Include/core_cm7.h **** 
1304:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1305:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1306:./Drivers/CMSIS/Include/core_cm7.h **** 
1307:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1308:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1309:./Drivers/CMSIS/Include/core_cm7.h **** 
1310:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1311:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1312:./Drivers/CMSIS/Include/core_cm7.h **** 
1313:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1314:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1315:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1316:./Drivers/CMSIS/Include/core_cm7.h **** 
1317:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1318:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1319:./Drivers/CMSIS/Include/core_cm7.h **** 
1320:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1321:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1322:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1323:./Drivers/CMSIS/Include/core_cm7.h **** 
1324:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1325:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1326:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1327:./Drivers/CMSIS/Include/core_cm7.h **** 
1328:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1329:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1330:./Drivers/CMSIS/Include/core_cm7.h **** 
1331:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1332:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1333:./Drivers/CMSIS/Include/core_cm7.h **** 
1334:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1335:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1336:./Drivers/CMSIS/Include/core_cm7.h **** 
1337:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1338:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1339:./Drivers/CMSIS/Include/core_cm7.h **** 
1340:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1341:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1342:./Drivers/CMSIS/Include/core_cm7.h **** 
1343:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
ARM GAS  /tmp/ccVDAMpJ.s 			page 25


1344:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1345:./Drivers/CMSIS/Include/core_cm7.h **** 
1346:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1347:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1348:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1349:./Drivers/CMSIS/Include/core_cm7.h **** 
1350:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1351:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1352:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1353:./Drivers/CMSIS/Include/core_cm7.h **** 
1354:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1355:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1356:./Drivers/CMSIS/Include/core_cm7.h **** 
1357:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1358:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1359:./Drivers/CMSIS/Include/core_cm7.h **** 
1360:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1361:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1362:./Drivers/CMSIS/Include/core_cm7.h **** 
1363:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1364:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1365:./Drivers/CMSIS/Include/core_cm7.h **** 
1366:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1367:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1368:./Drivers/CMSIS/Include/core_cm7.h **** 
1369:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1370:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1371:./Drivers/CMSIS/Include/core_cm7.h **** 
1372:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1373:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1374:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1375:./Drivers/CMSIS/Include/core_cm7.h **** 
1376:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1377:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1378:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1379:./Drivers/CMSIS/Include/core_cm7.h **** 
1380:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1381:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1382:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1383:./Drivers/CMSIS/Include/core_cm7.h **** 
1384:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1385:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1386:./Drivers/CMSIS/Include/core_cm7.h **** 
1387:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1388:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1389:./Drivers/CMSIS/Include/core_cm7.h **** 
1390:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1391:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1392:./Drivers/CMSIS/Include/core_cm7.h **** 
1393:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1394:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1395:./Drivers/CMSIS/Include/core_cm7.h **** 
1396:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1397:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1398:./Drivers/CMSIS/Include/core_cm7.h **** 
1399:./Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1400:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
ARM GAS  /tmp/ccVDAMpJ.s 			page 26


1401:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1402:./Drivers/CMSIS/Include/core_cm7.h **** 
1403:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1404:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1405:./Drivers/CMSIS/Include/core_cm7.h **** 
1406:./Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1407:./Drivers/CMSIS/Include/core_cm7.h **** 
1408:./Drivers/CMSIS/Include/core_cm7.h **** 
1409:./Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1410:./Drivers/CMSIS/Include/core_cm7.h **** /**
1411:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1412:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1413:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1414:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1415:./Drivers/CMSIS/Include/core_cm7.h ****  */
1416:./Drivers/CMSIS/Include/core_cm7.h **** 
1417:./Drivers/CMSIS/Include/core_cm7.h **** /**
1418:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1419:./Drivers/CMSIS/Include/core_cm7.h ****  */
1420:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1421:./Drivers/CMSIS/Include/core_cm7.h **** {
1422:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1423:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1424:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1425:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1426:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1427:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1428:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1429:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1430:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1431:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1432:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1433:./Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1434:./Drivers/CMSIS/Include/core_cm7.h **** 
1435:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1436:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1437:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1438:./Drivers/CMSIS/Include/core_cm7.h **** 
1439:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1440:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1441:./Drivers/CMSIS/Include/core_cm7.h **** 
1442:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1443:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1444:./Drivers/CMSIS/Include/core_cm7.h **** 
1445:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1446:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1447:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1448:./Drivers/CMSIS/Include/core_cm7.h **** 
1449:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1450:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1451:./Drivers/CMSIS/Include/core_cm7.h **** 
1452:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1453:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1454:./Drivers/CMSIS/Include/core_cm7.h **** 
1455:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1456:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1457:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
ARM GAS  /tmp/ccVDAMpJ.s 			page 27


1458:./Drivers/CMSIS/Include/core_cm7.h **** 
1459:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1460:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1461:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1462:./Drivers/CMSIS/Include/core_cm7.h **** 
1463:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1464:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1465:./Drivers/CMSIS/Include/core_cm7.h **** 
1466:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1467:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1468:./Drivers/CMSIS/Include/core_cm7.h **** 
1469:./Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1470:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1471:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1472:./Drivers/CMSIS/Include/core_cm7.h **** 
1473:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1474:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1475:./Drivers/CMSIS/Include/core_cm7.h **** 
1476:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1477:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1478:./Drivers/CMSIS/Include/core_cm7.h **** 
1479:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1480:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1481:./Drivers/CMSIS/Include/core_cm7.h **** 
1482:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1483:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1484:./Drivers/CMSIS/Include/core_cm7.h **** 
1485:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1486:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1487:./Drivers/CMSIS/Include/core_cm7.h **** 
1488:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1489:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1490:./Drivers/CMSIS/Include/core_cm7.h **** 
1491:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1492:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1493:./Drivers/CMSIS/Include/core_cm7.h **** 
1494:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1495:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1496:./Drivers/CMSIS/Include/core_cm7.h **** 
1497:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1498:./Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1499:./Drivers/CMSIS/Include/core_cm7.h **** 
1500:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1501:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1502:./Drivers/CMSIS/Include/core_cm7.h **** 
1503:./Drivers/CMSIS/Include/core_cm7.h **** 
1504:./Drivers/CMSIS/Include/core_cm7.h **** /**
1505:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1506:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1507:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1508:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1509:./Drivers/CMSIS/Include/core_cm7.h ****  */
1510:./Drivers/CMSIS/Include/core_cm7.h **** 
1511:./Drivers/CMSIS/Include/core_cm7.h **** /**
1512:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1513:./Drivers/CMSIS/Include/core_cm7.h ****  */
1514:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
ARM GAS  /tmp/ccVDAMpJ.s 			page 28


1515:./Drivers/CMSIS/Include/core_cm7.h **** {
1516:./Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1517:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1518:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1519:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1520:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1521:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1522:./Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1523:./Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1524:./Drivers/CMSIS/Include/core_cm7.h **** 
1525:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1526:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1527:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1528:./Drivers/CMSIS/Include/core_cm7.h **** 
1529:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1530:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1531:./Drivers/CMSIS/Include/core_cm7.h **** 
1532:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1533:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1534:./Drivers/CMSIS/Include/core_cm7.h **** 
1535:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1536:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1537:./Drivers/CMSIS/Include/core_cm7.h **** 
1538:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1539:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1540:./Drivers/CMSIS/Include/core_cm7.h **** 
1541:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1542:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1543:./Drivers/CMSIS/Include/core_cm7.h **** 
1544:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1545:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1546:./Drivers/CMSIS/Include/core_cm7.h **** 
1547:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1548:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1549:./Drivers/CMSIS/Include/core_cm7.h **** 
1550:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1551:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1552:./Drivers/CMSIS/Include/core_cm7.h **** 
1553:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1554:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1555:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1556:./Drivers/CMSIS/Include/core_cm7.h **** 
1557:./Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1558:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1559:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1560:./Drivers/CMSIS/Include/core_cm7.h **** 
1561:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1562:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1563:./Drivers/CMSIS/Include/core_cm7.h **** 
1564:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1565:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1566:./Drivers/CMSIS/Include/core_cm7.h **** 
1567:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1568:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1569:./Drivers/CMSIS/Include/core_cm7.h **** 
1570:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1571:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
ARM GAS  /tmp/ccVDAMpJ.s 			page 29


1572:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1573:./Drivers/CMSIS/Include/core_cm7.h **** 
1574:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1575:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1576:./Drivers/CMSIS/Include/core_cm7.h **** 
1577:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1578:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1579:./Drivers/CMSIS/Include/core_cm7.h **** 
1580:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1581:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1582:./Drivers/CMSIS/Include/core_cm7.h **** 
1583:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1584:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1585:./Drivers/CMSIS/Include/core_cm7.h **** 
1586:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1587:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1588:./Drivers/CMSIS/Include/core_cm7.h **** 
1589:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1590:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1591:./Drivers/CMSIS/Include/core_cm7.h **** 
1592:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1593:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1594:./Drivers/CMSIS/Include/core_cm7.h **** 
1595:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1596:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1597:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1598:./Drivers/CMSIS/Include/core_cm7.h **** 
1599:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1600:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1601:./Drivers/CMSIS/Include/core_cm7.h **** 
1602:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1603:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1604:./Drivers/CMSIS/Include/core_cm7.h **** 
1605:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1606:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1607:./Drivers/CMSIS/Include/core_cm7.h **** 
1608:./Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1609:./Drivers/CMSIS/Include/core_cm7.h **** 
1610:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1611:./Drivers/CMSIS/Include/core_cm7.h **** 
1612:./Drivers/CMSIS/Include/core_cm7.h **** 
1613:./Drivers/CMSIS/Include/core_cm7.h **** /**
1614:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1615:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1616:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1617:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1618:./Drivers/CMSIS/Include/core_cm7.h ****  */
1619:./Drivers/CMSIS/Include/core_cm7.h **** 
1620:./Drivers/CMSIS/Include/core_cm7.h **** /**
1621:./Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1622:./Drivers/CMSIS/Include/core_cm7.h ****  */
1623:./Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1624:./Drivers/CMSIS/Include/core_cm7.h **** {
1625:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1626:./Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1627:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1628:./Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  /tmp/ccVDAMpJ.s 			page 30


1629:./Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1630:./Drivers/CMSIS/Include/core_cm7.h **** 
1631:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1632:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1633:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1634:./Drivers/CMSIS/Include/core_cm7.h **** 
1635:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1636:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1637:./Drivers/CMSIS/Include/core_cm7.h **** 
1638:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1639:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1640:./Drivers/CMSIS/Include/core_cm7.h **** 
1641:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1642:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1643:./Drivers/CMSIS/Include/core_cm7.h **** 
1644:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1645:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1646:./Drivers/CMSIS/Include/core_cm7.h **** 
1647:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1648:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1649:./Drivers/CMSIS/Include/core_cm7.h **** 
1650:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1651:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1652:./Drivers/CMSIS/Include/core_cm7.h **** 
1653:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1654:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1655:./Drivers/CMSIS/Include/core_cm7.h **** 
1656:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1657:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1658:./Drivers/CMSIS/Include/core_cm7.h **** 
1659:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1660:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1661:./Drivers/CMSIS/Include/core_cm7.h **** 
1662:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1663:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1664:./Drivers/CMSIS/Include/core_cm7.h **** 
1665:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1666:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1667:./Drivers/CMSIS/Include/core_cm7.h **** 
1668:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1669:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1670:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1671:./Drivers/CMSIS/Include/core_cm7.h **** 
1672:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1673:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1674:./Drivers/CMSIS/Include/core_cm7.h **** 
1675:./Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1676:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1677:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1678:./Drivers/CMSIS/Include/core_cm7.h **** 
1679:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1680:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1681:./Drivers/CMSIS/Include/core_cm7.h **** 
1682:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1683:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1684:./Drivers/CMSIS/Include/core_cm7.h **** 
1685:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
ARM GAS  /tmp/ccVDAMpJ.s 			page 31


1686:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1687:./Drivers/CMSIS/Include/core_cm7.h **** 
1688:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1689:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1690:./Drivers/CMSIS/Include/core_cm7.h **** 
1691:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1692:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1693:./Drivers/CMSIS/Include/core_cm7.h **** 
1694:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1695:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1696:./Drivers/CMSIS/Include/core_cm7.h **** 
1697:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1698:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1699:./Drivers/CMSIS/Include/core_cm7.h **** 
1700:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1701:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1702:./Drivers/CMSIS/Include/core_cm7.h **** 
1703:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1704:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1705:./Drivers/CMSIS/Include/core_cm7.h **** 
1706:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1707:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1708:./Drivers/CMSIS/Include/core_cm7.h **** 
1709:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1710:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1711:./Drivers/CMSIS/Include/core_cm7.h **** 
1712:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1713:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1714:./Drivers/CMSIS/Include/core_cm7.h **** 
1715:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1716:./Drivers/CMSIS/Include/core_cm7.h **** 
1717:./Drivers/CMSIS/Include/core_cm7.h **** 
1718:./Drivers/CMSIS/Include/core_cm7.h **** /**
1719:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1720:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1721:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1722:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1723:./Drivers/CMSIS/Include/core_cm7.h ****  */
1724:./Drivers/CMSIS/Include/core_cm7.h **** 
1725:./Drivers/CMSIS/Include/core_cm7.h **** /**
1726:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1727:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1728:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1729:./Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1730:./Drivers/CMSIS/Include/core_cm7.h **** */
1731:./Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1732:./Drivers/CMSIS/Include/core_cm7.h **** 
1733:./Drivers/CMSIS/Include/core_cm7.h **** /**
1734:./Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1735:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1736:./Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1737:./Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1738:./Drivers/CMSIS/Include/core_cm7.h **** */
1739:./Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1740:./Drivers/CMSIS/Include/core_cm7.h **** 
1741:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1742:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 32


1743:./Drivers/CMSIS/Include/core_cm7.h **** 
1744:./Drivers/CMSIS/Include/core_cm7.h **** /**
1745:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1746:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1747:./Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1748:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1749:./Drivers/CMSIS/Include/core_cm7.h ****  */
1750:./Drivers/CMSIS/Include/core_cm7.h **** 
1751:./Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1752:./Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1753:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1754:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1755:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1756:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1757:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1758:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1759:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1760:./Drivers/CMSIS/Include/core_cm7.h **** 
1761:./Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1762:./Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1763:./Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1764:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1765:./Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1766:./Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1767:./Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1768:./Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1769:./Drivers/CMSIS/Include/core_cm7.h **** 
1770:./Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1771:./Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1772:./Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1773:./Drivers/CMSIS/Include/core_cm7.h **** #endif
1774:./Drivers/CMSIS/Include/core_cm7.h **** 
1775:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1776:./Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1777:./Drivers/CMSIS/Include/core_cm7.h **** 
1778:./Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1779:./Drivers/CMSIS/Include/core_cm7.h **** 
1780:./Drivers/CMSIS/Include/core_cm7.h **** 
1781:./Drivers/CMSIS/Include/core_cm7.h **** 
1782:./Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1783:./Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1784:./Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1785:./Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1786:./Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1787:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1788:./Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1789:./Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1790:./Drivers/CMSIS/Include/core_cm7.h **** /**
1791:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1792:./Drivers/CMSIS/Include/core_cm7.h **** */
1793:./Drivers/CMSIS/Include/core_cm7.h **** 
1794:./Drivers/CMSIS/Include/core_cm7.h **** 
1795:./Drivers/CMSIS/Include/core_cm7.h **** 
1796:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1797:./Drivers/CMSIS/Include/core_cm7.h **** /**
1798:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1799:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
ARM GAS  /tmp/ccVDAMpJ.s 			page 33


1800:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1801:./Drivers/CMSIS/Include/core_cm7.h ****   @{
1802:./Drivers/CMSIS/Include/core_cm7.h ****  */
1803:./Drivers/CMSIS/Include/core_cm7.h **** 
1804:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_NVIC_VIRTUAL
1805:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1806:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1807:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1808:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1809:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1810:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1811:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1812:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1813:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1814:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1815:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1816:./Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1817:./Drivers/CMSIS/Include/core_cm7.h **** 
1818:./Drivers/CMSIS/Include/core_cm7.h **** #ifndef CMSIS_VECTAB_VIRTUAL
1819:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1820:./Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1821:./Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1822:./Drivers/CMSIS/Include/core_cm7.h **** 
1823:./Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1824:./Drivers/CMSIS/Include/core_cm7.h **** 
1825:./Drivers/CMSIS/Include/core_cm7.h **** 
1826:./Drivers/CMSIS/Include/core_cm7.h **** 
1827:./Drivers/CMSIS/Include/core_cm7.h **** /**
1828:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1829:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1830:./Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1831:./Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1832:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1833:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1834:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1835:./Drivers/CMSIS/Include/core_cm7.h ****  */
1836:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1837:./Drivers/CMSIS/Include/core_cm7.h **** {
1838:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1839:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1840:./Drivers/CMSIS/Include/core_cm7.h **** 
1841:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1842:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1843:./Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1844:./Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1845:./Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1846:./Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1847:./Drivers/CMSIS/Include/core_cm7.h **** }
1848:./Drivers/CMSIS/Include/core_cm7.h **** 
1849:./Drivers/CMSIS/Include/core_cm7.h **** 
1850:./Drivers/CMSIS/Include/core_cm7.h **** /**
1851:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1852:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1853:./Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1854:./Drivers/CMSIS/Include/core_cm7.h ****  */
1855:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1856:./Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccVDAMpJ.s 			page 34


1857:./Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1858:./Drivers/CMSIS/Include/core_cm7.h **** }
1859:./Drivers/CMSIS/Include/core_cm7.h **** 
1860:./Drivers/CMSIS/Include/core_cm7.h **** 
1861:./Drivers/CMSIS/Include/core_cm7.h **** /**
1862:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1863:./Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1864:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1865:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1866:./Drivers/CMSIS/Include/core_cm7.h ****  */
1867:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1868:./Drivers/CMSIS/Include/core_cm7.h **** {
1869:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1870:./Drivers/CMSIS/Include/core_cm7.h ****   {
1871:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1872:./Drivers/CMSIS/Include/core_cm7.h ****   }
1873:./Drivers/CMSIS/Include/core_cm7.h **** }
1874:./Drivers/CMSIS/Include/core_cm7.h **** 
1875:./Drivers/CMSIS/Include/core_cm7.h **** 
1876:./Drivers/CMSIS/Include/core_cm7.h **** /**
1877:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1878:./Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1879:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1880:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1881:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1882:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1883:./Drivers/CMSIS/Include/core_cm7.h ****  */
1884:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1885:./Drivers/CMSIS/Include/core_cm7.h **** {
1886:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1887:./Drivers/CMSIS/Include/core_cm7.h ****   {
1888:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1889:./Drivers/CMSIS/Include/core_cm7.h ****   }
1890:./Drivers/CMSIS/Include/core_cm7.h ****   else
1891:./Drivers/CMSIS/Include/core_cm7.h ****   {
1892:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1893:./Drivers/CMSIS/Include/core_cm7.h ****   }
1894:./Drivers/CMSIS/Include/core_cm7.h **** }
1895:./Drivers/CMSIS/Include/core_cm7.h **** 
1896:./Drivers/CMSIS/Include/core_cm7.h **** 
1897:./Drivers/CMSIS/Include/core_cm7.h **** /**
1898:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1899:./Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1900:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1901:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1902:./Drivers/CMSIS/Include/core_cm7.h ****  */
1903:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1904:./Drivers/CMSIS/Include/core_cm7.h **** {
1905:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1906:./Drivers/CMSIS/Include/core_cm7.h ****   {
1907:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1908:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1909:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1910:./Drivers/CMSIS/Include/core_cm7.h ****   }
1911:./Drivers/CMSIS/Include/core_cm7.h **** }
1912:./Drivers/CMSIS/Include/core_cm7.h **** 
1913:./Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 35


1914:./Drivers/CMSIS/Include/core_cm7.h **** /**
1915:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1916:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1917:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1918:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1919:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1920:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1921:./Drivers/CMSIS/Include/core_cm7.h ****  */
1922:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1923:./Drivers/CMSIS/Include/core_cm7.h **** {
1924:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1925:./Drivers/CMSIS/Include/core_cm7.h ****   {
1926:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1927:./Drivers/CMSIS/Include/core_cm7.h ****   }
1928:./Drivers/CMSIS/Include/core_cm7.h ****   else
1929:./Drivers/CMSIS/Include/core_cm7.h ****   {
1930:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1931:./Drivers/CMSIS/Include/core_cm7.h ****   }
1932:./Drivers/CMSIS/Include/core_cm7.h **** }
1933:./Drivers/CMSIS/Include/core_cm7.h **** 
1934:./Drivers/CMSIS/Include/core_cm7.h **** 
1935:./Drivers/CMSIS/Include/core_cm7.h **** /**
1936:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1937:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1938:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1939:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1940:./Drivers/CMSIS/Include/core_cm7.h ****  */
1941:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1942:./Drivers/CMSIS/Include/core_cm7.h **** {
1943:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1944:./Drivers/CMSIS/Include/core_cm7.h ****   {
1945:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1946:./Drivers/CMSIS/Include/core_cm7.h ****   }
1947:./Drivers/CMSIS/Include/core_cm7.h **** }
1948:./Drivers/CMSIS/Include/core_cm7.h **** 
1949:./Drivers/CMSIS/Include/core_cm7.h **** 
1950:./Drivers/CMSIS/Include/core_cm7.h **** /**
1951:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1952:./Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1953:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1954:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1955:./Drivers/CMSIS/Include/core_cm7.h ****  */
1956:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1957:./Drivers/CMSIS/Include/core_cm7.h **** {
1958:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1959:./Drivers/CMSIS/Include/core_cm7.h ****   {
1960:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1961:./Drivers/CMSIS/Include/core_cm7.h ****   }
1962:./Drivers/CMSIS/Include/core_cm7.h **** }
1963:./Drivers/CMSIS/Include/core_cm7.h **** 
1964:./Drivers/CMSIS/Include/core_cm7.h **** 
1965:./Drivers/CMSIS/Include/core_cm7.h **** /**
1966:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1967:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1968:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1969:./Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1970:./Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
ARM GAS  /tmp/ccVDAMpJ.s 			page 36


1971:./Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1972:./Drivers/CMSIS/Include/core_cm7.h ****  */
1973:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1974:./Drivers/CMSIS/Include/core_cm7.h **** {
1975:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1976:./Drivers/CMSIS/Include/core_cm7.h ****   {
1977:./Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1978:./Drivers/CMSIS/Include/core_cm7.h ****   }
1979:./Drivers/CMSIS/Include/core_cm7.h ****   else
1980:./Drivers/CMSIS/Include/core_cm7.h ****   {
1981:./Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1982:./Drivers/CMSIS/Include/core_cm7.h ****   }
1983:./Drivers/CMSIS/Include/core_cm7.h **** }
1984:./Drivers/CMSIS/Include/core_cm7.h **** 
1985:./Drivers/CMSIS/Include/core_cm7.h **** 
1986:./Drivers/CMSIS/Include/core_cm7.h **** /**
1987:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1988:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1989:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
1990:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
1991:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1992:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1993:./Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
1994:./Drivers/CMSIS/Include/core_cm7.h ****  */
1995:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1996:./Drivers/CMSIS/Include/core_cm7.h **** {
1997:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1998:./Drivers/CMSIS/Include/core_cm7.h ****   {
1999:./Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
2000:./Drivers/CMSIS/Include/core_cm7.h ****   }
2001:./Drivers/CMSIS/Include/core_cm7.h ****   else
2002:./Drivers/CMSIS/Include/core_cm7.h ****   {
2003:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
2004:./Drivers/CMSIS/Include/core_cm7.h ****   }
2005:./Drivers/CMSIS/Include/core_cm7.h **** }
2006:./Drivers/CMSIS/Include/core_cm7.h **** 
2007:./Drivers/CMSIS/Include/core_cm7.h **** 
2008:./Drivers/CMSIS/Include/core_cm7.h **** /**
2009:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2010:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2011:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2012:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2013:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2014:./Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2015:./Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2016:./Drivers/CMSIS/Include/core_cm7.h ****  */
2017:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2018:./Drivers/CMSIS/Include/core_cm7.h **** {
2019:./Drivers/CMSIS/Include/core_cm7.h **** 
2020:./Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2021:./Drivers/CMSIS/Include/core_cm7.h ****   {
2022:./Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
2023:./Drivers/CMSIS/Include/core_cm7.h ****   }
2024:./Drivers/CMSIS/Include/core_cm7.h ****   else
2025:./Drivers/CMSIS/Include/core_cm7.h ****   {
2026:./Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
2027:./Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  /tmp/ccVDAMpJ.s 			page 37


2028:./Drivers/CMSIS/Include/core_cm7.h **** }
2029:./Drivers/CMSIS/Include/core_cm7.h **** 
2030:./Drivers/CMSIS/Include/core_cm7.h **** 
2031:./Drivers/CMSIS/Include/core_cm7.h **** /**
2032:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2033:./Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2034:./Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2035:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2036:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2037:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2038:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2039:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2040:./Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2041:./Drivers/CMSIS/Include/core_cm7.h ****  */
2042:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2043:./Drivers/CMSIS/Include/core_cm7.h **** {
2044:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2045:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2046:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2047:./Drivers/CMSIS/Include/core_cm7.h **** 
2048:./Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2049:./Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2050:./Drivers/CMSIS/Include/core_cm7.h **** 
2051:./Drivers/CMSIS/Include/core_cm7.h ****   return (
2052:./Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2053:./Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2054:./Drivers/CMSIS/Include/core_cm7.h ****          );
2055:./Drivers/CMSIS/Include/core_cm7.h **** }
2056:./Drivers/CMSIS/Include/core_cm7.h **** 
2057:./Drivers/CMSIS/Include/core_cm7.h **** 
2058:./Drivers/CMSIS/Include/core_cm7.h **** /**
2059:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2060:./Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2061:./Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2062:./Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2063:./Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2064:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2065:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2066:./Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2067:./Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2068:./Drivers/CMSIS/Include/core_cm7.h ****  */
2069:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2070:./Drivers/CMSIS/Include/core_cm7.h **** {
2071:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2072:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2073:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2074:./Drivers/CMSIS/Include/core_cm7.h **** 
2075:./Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2076:./Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2077:./Drivers/CMSIS/Include/core_cm7.h **** 
2078:./Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2079:./Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2080:./Drivers/CMSIS/Include/core_cm7.h **** }
2081:./Drivers/CMSIS/Include/core_cm7.h **** 
2082:./Drivers/CMSIS/Include/core_cm7.h **** 
2083:./Drivers/CMSIS/Include/core_cm7.h **** /**
2084:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
ARM GAS  /tmp/ccVDAMpJ.s 			page 38


2085:./Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2086:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2087:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2088:./Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2089:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2090:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2091:./Drivers/CMSIS/Include/core_cm7.h ****  */
2092:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2093:./Drivers/CMSIS/Include/core_cm7.h **** {
2094:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2095:./Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2096:./Drivers/CMSIS/Include/core_cm7.h **** }
2097:./Drivers/CMSIS/Include/core_cm7.h **** 
2098:./Drivers/CMSIS/Include/core_cm7.h **** 
2099:./Drivers/CMSIS/Include/core_cm7.h **** /**
2100:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2101:./Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2102:./Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2103:./Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2104:./Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2105:./Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2106:./Drivers/CMSIS/Include/core_cm7.h ****  */
2107:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2108:./Drivers/CMSIS/Include/core_cm7.h **** {
2109:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2110:./Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2111:./Drivers/CMSIS/Include/core_cm7.h **** }
2112:./Drivers/CMSIS/Include/core_cm7.h **** 
2113:./Drivers/CMSIS/Include/core_cm7.h **** 
2114:./Drivers/CMSIS/Include/core_cm7.h **** /**
2115:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2116:./Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2117:./Drivers/CMSIS/Include/core_cm7.h ****  */
2118:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
2119:./Drivers/CMSIS/Include/core_cm7.h **** {
2120:./Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2121:./Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2122:./Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2123:./Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2124:./Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2125:./Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2126:./Drivers/CMSIS/Include/core_cm7.h **** 
2127:./Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2128:./Drivers/CMSIS/Include/core_cm7.h ****   {
2129:./Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2130:./Drivers/CMSIS/Include/core_cm7.h ****   }
2131:./Drivers/CMSIS/Include/core_cm7.h **** }
2132:./Drivers/CMSIS/Include/core_cm7.h **** 
2133:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2134:./Drivers/CMSIS/Include/core_cm7.h **** 
2135:./Drivers/CMSIS/Include/core_cm7.h **** 
2136:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2137:./Drivers/CMSIS/Include/core_cm7.h **** /**
2138:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2139:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2140:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2141:./Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  /tmp/ccVDAMpJ.s 			page 39


2142:./Drivers/CMSIS/Include/core_cm7.h ****  */
2143:./Drivers/CMSIS/Include/core_cm7.h **** 
2144:./Drivers/CMSIS/Include/core_cm7.h **** /**
2145:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2146:./Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2147:./Drivers/CMSIS/Include/core_cm7.h ****   \returns
2148:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2149:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2150:./Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2151:./Drivers/CMSIS/Include/core_cm7.h ****  */
2152:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2153:./Drivers/CMSIS/Include/core_cm7.h **** {
2154:./Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2155:./Drivers/CMSIS/Include/core_cm7.h **** 
2156:./Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2157:./Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2158:./Drivers/CMSIS/Include/core_cm7.h ****   {
2159:./Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2160:./Drivers/CMSIS/Include/core_cm7.h ****   }
2161:./Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2162:./Drivers/CMSIS/Include/core_cm7.h ****   {
2163:./Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2164:./Drivers/CMSIS/Include/core_cm7.h ****   }
2165:./Drivers/CMSIS/Include/core_cm7.h ****   else
2166:./Drivers/CMSIS/Include/core_cm7.h ****   {
2167:./Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2168:./Drivers/CMSIS/Include/core_cm7.h ****   }
2169:./Drivers/CMSIS/Include/core_cm7.h **** }
2170:./Drivers/CMSIS/Include/core_cm7.h **** 
2171:./Drivers/CMSIS/Include/core_cm7.h **** 
2172:./Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2173:./Drivers/CMSIS/Include/core_cm7.h **** 
2174:./Drivers/CMSIS/Include/core_cm7.h **** 
2175:./Drivers/CMSIS/Include/core_cm7.h **** 
2176:./Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2177:./Drivers/CMSIS/Include/core_cm7.h **** /**
2178:./Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2179:./Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2180:./Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2181:./Drivers/CMSIS/Include/core_cm7.h ****   @{
2182:./Drivers/CMSIS/Include/core_cm7.h ****  */
2183:./Drivers/CMSIS/Include/core_cm7.h **** 
2184:./Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2185:./Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2186:./Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2187:./Drivers/CMSIS/Include/core_cm7.h **** 
2188:./Drivers/CMSIS/Include/core_cm7.h **** 
2189:./Drivers/CMSIS/Include/core_cm7.h **** /**
2190:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2191:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2192:./Drivers/CMSIS/Include/core_cm7.h ****   */
2193:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2194:./Drivers/CMSIS/Include/core_cm7.h **** {
  27              		.loc 1 2194 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccVDAMpJ.s 			page 40


  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37              	.LBB22:
  38              	.LBB23:
  39              		.file 2 "./Drivers/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:./Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  41:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  44:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  47:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  /tmp/ccVDAMpJ.s 			page 41


  49:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  50:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  53:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:./Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:./Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:./Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:./Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  71:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  72:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:./Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  76:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  77:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  78:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  79:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  83:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  85:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
ARM GAS  /tmp/ccVDAMpJ.s 			page 42


 106:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 116:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 120:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 122:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 127:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 128:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 129:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 131:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 135:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 137:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 140:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 143:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 147:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 149:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 151:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 152:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 153:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 154:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 155:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 159:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 161:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 43


 163:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 187:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 189:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 194:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 195:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 196:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 197:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 201:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 203:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 208:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 210:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 212:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 216:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 218:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 44


 220:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 224:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 225:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 227:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 231:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 233:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 235:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 239:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 243:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 245:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 247:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 248:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 249:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 250:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 251:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 255:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 257:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 259:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 266:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 270:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 272:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccVDAMpJ.s 			page 45


 277:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 278:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 289:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 291:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 293:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 297:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 299:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 301:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 303:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 305:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 309:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 311:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 313:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 316:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 317:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 320:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 324:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 326:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 328:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 331:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 332:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 46


 334:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 335:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 339:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 341:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 343:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 344:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 347:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 351:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 353:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 356:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 362:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 366:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 368:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 370:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 371:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 373:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:./Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 377:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 379:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 381:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 382:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 383:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 384:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 388:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 390:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccVDAMpJ.s 			page 47


 391:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 399:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 410:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 411:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 412:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 413:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 414:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 418:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 420:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 422:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 423:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 424:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 426:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 430:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 432:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 434:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 435:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 437:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 438:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:./Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 443:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 445:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 447:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 48


 448:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 449:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 450:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 465:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 477:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 479:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 480:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 488:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 490:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 492:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 496:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 498:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 501:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  /tmp/ccVDAMpJ.s 			page 49


 505:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 506:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 507:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 515:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 517:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 522:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 524:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 527:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 531:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 533:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 538:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 539:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 540:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 541:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 542:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 546:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 548:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 559:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 561:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
ARM GAS  /tmp/ccVDAMpJ.s 			page 50


 562:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 563:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 564:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 565:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 566:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 567:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 571:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 573:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 579:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 581:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 588:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 590:./Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 592:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 595:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 596:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 599:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 603:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 605:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 607:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 608:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 609:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 612:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 616:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 618:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
ARM GAS  /tmp/ccVDAMpJ.s 			page 51


 619:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 621:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 622:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 625:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 626:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 630:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 634:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 636:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:./Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 640:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:./Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 643:./Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 645:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 646:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 649:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 653:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 655:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:./Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 659:./Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 661:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 662:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 663:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:./Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 666:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 667:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 668:./Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 671:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:./Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:./Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:./Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 675:./Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  /tmp/ccVDAMpJ.s 			page 52


 676:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 677:./Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:./Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:./Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:./Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 685:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:./Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 689:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 690:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 691:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 694:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 696:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 698:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 706:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 708:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 710:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 711:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 712:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:./Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 716:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 718:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 720:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 723:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 724:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 727:./Drivers/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:./Drivers/CMSIS/Include/cmsis_gcc.h **** //{
 729:./Drivers/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:./Drivers/CMSIS/Include/cmsis_gcc.h **** //}
 731:./Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 53


 733:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 734:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 735:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:./Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:./Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 740:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 742:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 744:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 745:./Drivers/CMSIS/Include/cmsis_gcc.h **** 
 746:./Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 747:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:./Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:./Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:./Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 751:./Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:./Drivers/CMSIS/Include/cmsis_gcc.h **** {
 753:./Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  40              		.loc 2 753 3
  41              		.syntax unified
  42              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  43 0004 BFF34F8F 		dsb 0xF
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.LBE23:
  48              	.LBE22:
  49              	.LBB24:
  50              	.LBB25:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  51              		.loc 2 742 3
  52              		.syntax unified
  53              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  54 0008 BFF36F8F 		isb 0xF
  55              	@ 0 "" 2
  56              		.thumb
  57              		.syntax unified
  58              	.LBE25:
  59              	.LBE24:
2195:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2196:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2197:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2198:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
  60              		.loc 1 2198 8
  61 000c 0B4B     		ldr	r3, .L2
  62              		.loc 1 2198 18
  63 000e 0022     		movs	r2, #0
  64 0010 C3F85022 		str	r2, [r3, #592]
  65              	.LBB26:
  66              	.LBB27:
  67              		.loc 2 753 3
  68              		.syntax unified
  69              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  70 0014 BFF34F8F 		dsb 0xF
ARM GAS  /tmp/ccVDAMpJ.s 			page 54


  71              	@ 0 "" 2
  72              		.thumb
  73              		.syntax unified
  74              	.LBE27:
  75              	.LBE26:
  76              	.LBB28:
  77              	.LBB29:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
  78              		.loc 2 742 3
  79              		.syntax unified
  80              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  81 0018 BFF36F8F 		isb 0xF
  82              	@ 0 "" 2
  83              		.thumb
  84              		.syntax unified
  85              	.LBE29:
  86              	.LBE28:
2199:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2200:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2201:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  87              		.loc 1 2201 14
  88 001c 074B     		ldr	r3, .L2
  89 001e 5B69     		ldr	r3, [r3, #20]
  90 0020 064A     		ldr	r2, .L2
  91 0022 43F40033 		orr	r3, r3, #131072
  92 0026 5361     		str	r3, [r2, #20]
  93              	.LBB30:
  94              	.LBB31:
  95              		.loc 2 753 3
  96              		.syntax unified
  97              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
  98 0028 BFF34F8F 		dsb 0xF
  99              	@ 0 "" 2
 100              		.thumb
 101              		.syntax unified
 102              	.LBE31:
 103              	.LBE30:
 104              	.LBB32:
 105              	.LBB33:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 106              		.loc 2 742 3
 107              		.syntax unified
 108              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 109 002c BFF36F8F 		isb 0xF
 110              	@ 0 "" 2
 111              		.thumb
 112              		.syntax unified
 113              	.LBE33:
 114              	.LBE32:
2202:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2203:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2204:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2205:./Drivers/CMSIS/Include/core_cm7.h **** }
 115              		.loc 1 2205 1
 116 0030 00BF     		nop
 117 0032 BD46     		mov	sp, r7
 118              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccVDAMpJ.s 			page 55


 119              		@ sp needed
 120 0034 5DF8047B 		ldr	r7, [sp], #4
 121              		.cfi_restore 7
 122              		.cfi_def_cfa_offset 0
 123 0038 7047     		bx	lr
 124              	.L3:
 125 003a 00BF     		.align	2
 126              	.L2:
 127 003c 00ED00E0 		.word	-536810240
 128              		.cfi_endproc
 129              	.LFE119:
 131              		.section	.text.SCB_EnableDCache,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv5-d16
 138              	SCB_EnableDCache:
 139              	.LFB122:
2206:./Drivers/CMSIS/Include/core_cm7.h **** 
2207:./Drivers/CMSIS/Include/core_cm7.h **** 
2208:./Drivers/CMSIS/Include/core_cm7.h **** /**
2209:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2210:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2211:./Drivers/CMSIS/Include/core_cm7.h ****   */
2212:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2213:./Drivers/CMSIS/Include/core_cm7.h **** {
2214:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2215:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2216:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2217:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2218:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2219:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2220:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2221:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2222:./Drivers/CMSIS/Include/core_cm7.h **** }
2223:./Drivers/CMSIS/Include/core_cm7.h **** 
2224:./Drivers/CMSIS/Include/core_cm7.h **** 
2225:./Drivers/CMSIS/Include/core_cm7.h **** /**
2226:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2227:./Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2228:./Drivers/CMSIS/Include/core_cm7.h ****   */
2229:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2230:./Drivers/CMSIS/Include/core_cm7.h **** {
2231:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2233:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2234:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2235:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2236:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2237:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2238:./Drivers/CMSIS/Include/core_cm7.h **** }
2239:./Drivers/CMSIS/Include/core_cm7.h **** 
2240:./Drivers/CMSIS/Include/core_cm7.h **** 
2241:./Drivers/CMSIS/Include/core_cm7.h **** /**
2242:./Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2243:./Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
ARM GAS  /tmp/ccVDAMpJ.s 			page 56


2244:./Drivers/CMSIS/Include/core_cm7.h ****   */
2245:./Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2246:./Drivers/CMSIS/Include/core_cm7.h **** {
 140              		.loc 1 2246 1
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 16
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 85B0     		sub	sp, sp, #20
 149              		.cfi_def_cfa_offset 24
 150 0004 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
2247:./Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2248:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2249:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2250:./Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2251:./Drivers/CMSIS/Include/core_cm7.h **** 
2252:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 152              		.loc 1 2252 8
 153 0006 1D4B     		ldr	r3, .L7
 154              		.loc 1 2252 17
 155 0008 0022     		movs	r2, #0
 156 000a C3F88420 		str	r2, [r3, #132]
 157              	.LBB34:
 158              	.LBB35:
 159              		.loc 2 753 3
 160              		.syntax unified
 161              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 162 000e BFF34F8F 		dsb 0xF
 163              	@ 0 "" 2
 164              		.thumb
 165              		.syntax unified
 166              	.LBE35:
 167              	.LBE34:
2253:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2254:./Drivers/CMSIS/Include/core_cm7.h **** 
2255:./Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 168              		.loc 1 2255 17
 169 0012 1A4B     		ldr	r3, .L7
 170              		.loc 1 2255 12
 171 0014 D3F88030 		ldr	r3, [r3, #128]
 172 0018 7B60     		str	r3, [r7, #4]
2256:./Drivers/CMSIS/Include/core_cm7.h **** 
2257:./Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2258:./Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 173              		.loc 1 2258 12
 174 001a 7B68     		ldr	r3, [r7, #4]
 175 001c 5B0B     		lsrs	r3, r3, #13
 176              		.loc 1 2258 10
 177 001e C3F30E03 		ubfx	r3, r3, #0, #15
 178 0022 FB60     		str	r3, [r7, #12]
 179              	.L6:
2259:./Drivers/CMSIS/Include/core_cm7.h ****     do {
2260:./Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
ARM GAS  /tmp/ccVDAMpJ.s 			page 57


 180              		.loc 1 2260 14
 181 0024 7B68     		ldr	r3, [r7, #4]
 182 0026 DB08     		lsrs	r3, r3, #3
 183              		.loc 1 2260 12
 184 0028 C3F30903 		ubfx	r3, r3, #0, #10
 185 002c BB60     		str	r3, [r7, #8]
 186              	.L5:
2261:./Drivers/CMSIS/Include/core_cm7.h ****       do {
2262:./Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 187              		.loc 1 2262 30 discriminator 1
 188 002e FB68     		ldr	r3, [r7, #12]
 189 0030 5A01     		lsls	r2, r3, #5
 190              		.loc 1 2262 52 discriminator 1
 191 0032 43F6E073 		movw	r3, #16352
 192 0036 1340     		ands	r3, r3, r2
2263:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 193              		.loc 1 2263 30 discriminator 1
 194 0038 BA68     		ldr	r2, [r7, #8]
 195 003a 9207     		lsls	r2, r2, #30
2262:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 196              		.loc 1 2262 12 discriminator 1
 197 003c 0F49     		ldr	r1, .L7
2262:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 198              		.loc 1 2262 73 discriminator 1
 199 003e 1343     		orrs	r3, r3, r2
2262:./Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 200              		.loc 1 2262 20 discriminator 1
 201 0040 C1F86032 		str	r3, [r1, #608]
2264:./Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2265:./Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2266:./Drivers/CMSIS/Include/core_cm7.h ****         #endif
2267:./Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
 202              		.loc 1 2267 20 discriminator 1
 203 0044 BB68     		ldr	r3, [r7, #8]
 204 0046 5A1E     		subs	r2, r3, #1
 205 0048 BA60     		str	r2, [r7, #8]
 206              		.loc 1 2267 7 discriminator 1
 207 004a 002B     		cmp	r3, #0
 208 004c EFD1     		bne	.L5
2268:./Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 209              		.loc 1 2268 17
 210 004e FB68     		ldr	r3, [r7, #12]
 211 0050 5A1E     		subs	r2, r3, #1
 212 0052 FA60     		str	r2, [r7, #12]
 213              		.loc 1 2268 5
 214 0054 002B     		cmp	r3, #0
 215 0056 E5D1     		bne	.L6
 216              	.LBB36:
 217              	.LBB37:
 218              		.loc 2 753 3
 219              		.syntax unified
 220              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 221 0058 BFF34F8F 		dsb 0xF
 222              	@ 0 "" 2
 223              		.thumb
 224              		.syntax unified
 225              	.LBE37:
ARM GAS  /tmp/ccVDAMpJ.s 			page 58


 226              	.LBE36:
2269:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:./Drivers/CMSIS/Include/core_cm7.h **** 
2271:./Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 227              		.loc 1 2271 14
 228 005c 074B     		ldr	r3, .L7
 229 005e 5B69     		ldr	r3, [r3, #20]
 230 0060 064A     		ldr	r2, .L7
 231 0062 43F48033 		orr	r3, r3, #65536
 232 0066 5361     		str	r3, [r2, #20]
 233              	.LBB38:
 234              	.LBB39:
 235              		.loc 2 753 3
 236              		.syntax unified
 237              	@ 753 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 238 0068 BFF34F8F 		dsb 0xF
 239              	@ 0 "" 2
 240              		.thumb
 241              		.syntax unified
 242              	.LBE39:
 243              	.LBE38:
 244              	.LBB40:
 245              	.LBB41:
 742:./Drivers/CMSIS/Include/cmsis_gcc.h **** }
 246              		.loc 2 742 3
 247              		.syntax unified
 248              	@ 742 "./Drivers/CMSIS/Include/cmsis_gcc.h" 1
 249 006c BFF36F8F 		isb 0xF
 250              	@ 0 "" 2
 251              		.thumb
 252              		.syntax unified
 253              	.LBE41:
 254              	.LBE40:
2272:./Drivers/CMSIS/Include/core_cm7.h **** 
2273:./Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2274:./Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2275:./Drivers/CMSIS/Include/core_cm7.h ****   #endif
2276:./Drivers/CMSIS/Include/core_cm7.h **** }
 255              		.loc 1 2276 1
 256 0070 00BF     		nop
 257 0072 1437     		adds	r7, r7, #20
 258              		.cfi_def_cfa_offset 4
 259 0074 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0076 5DF8047B 		ldr	r7, [sp], #4
 263              		.cfi_restore 7
 264              		.cfi_def_cfa_offset 0
 265 007a 7047     		bx	lr
 266              	.L8:
 267              		.align	2
 268              	.L7:
 269 007c 00ED00E0 		.word	-536810240
 270              		.cfi_endproc
 271              	.LFE122:
 273              		.section	.text.main,"ax",%progbits
 274              		.align	1
ARM GAS  /tmp/ccVDAMpJ.s 			page 59


 275              		.global	main
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv5-d16
 281              	main:
 282              	.LFB134:
 283              		.file 3 "./Src/main.c"
   1:./Src/main.c  **** /* USER CODE BEGIN Header */
   2:./Src/main.c  **** /**
   3:./Src/main.c  ****  ******************************************************************************
   4:./Src/main.c  ****  * @file           : main.c
   5:./Src/main.c  ****  * @brief          : Main program body
   6:./Src/main.c  ****  ******************************************************************************
   7:./Src/main.c  ****  * @attention
   8:./Src/main.c  ****  *
   9:./Src/main.c  ****  * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:./Src/main.c  ****  * All rights reserved.</center></h2>
  11:./Src/main.c  ****  *
  12:./Src/main.c  ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:./Src/main.c  ****  * the "License"; You may not use this file except in compliance with the
  14:./Src/main.c  ****  * License. You may obtain a copy of the License at:
  15:./Src/main.c  ****  *                        opensource.org/licenses/BSD-3-Clause
  16:./Src/main.c  ****  *
  17:./Src/main.c  ****  ******************************************************************************
  18:./Src/main.c  ****  */
  19:./Src/main.c  **** /* USER CODE END Header */
  20:./Src/main.c  **** 
  21:./Src/main.c  **** /* Includes ------------------------------------------------------------------*/
  22:./Src/main.c  **** #include "main.h"
  23:./Src/main.c  **** 
  24:./Src/main.c  **** /* Private includes ----------------------------------------------------------*/
  25:./Src/main.c  **** /* USER CODE BEGIN Includes */
  26:./Src/main.c  **** 
  27:./Src/main.c  **** /* USER CODE END Includes */
  28:./Src/main.c  **** 
  29:./Src/main.c  **** /* Private typedef -----------------------------------------------------------*/
  30:./Src/main.c  **** /* USER CODE BEGIN PTD */
  31:./Src/main.c  **** 
  32:./Src/main.c  **** /* USER CODE END PTD */
  33:./Src/main.c  **** 
  34:./Src/main.c  **** /* Private define ------------------------------------------------------------*/
  35:./Src/main.c  **** /* USER CODE BEGIN PD */
  36:./Src/main.c  **** 
  37:./Src/main.c  **** /* USER CODE END PD */
  38:./Src/main.c  **** 
  39:./Src/main.c  **** /* Private macro -------------------------------------------------------------*/
  40:./Src/main.c  **** /* USER CODE BEGIN PM */
  41:./Src/main.c  **** 
  42:./Src/main.c  **** /* USER CODE END PM */
  43:./Src/main.c  **** 
  44:./Src/main.c  **** /* Private variables ---------------------------------------------------------*/
  45:./Src/main.c  **** 
  46:./Src/main.c  **** /* USER CODE BEGIN PV */
  47:./Src/main.c  **** 
  48:./Src/main.c  **** /* USER CODE END PV */
  49:./Src/main.c  **** 
ARM GAS  /tmp/ccVDAMpJ.s 			page 60


  50:./Src/main.c  **** /* Private function prototypes -----------------------------------------------*/
  51:./Src/main.c  **** void SystemClock_Config(void);
  52:./Src/main.c  **** static void MPU_Config(void);
  53:./Src/main.c  **** static void MX_GPIO_Init(void);
  54:./Src/main.c  **** /* USER CODE BEGIN PFP */
  55:./Src/main.c  **** 
  56:./Src/main.c  **** /* USER CODE END PFP */
  57:./Src/main.c  **** 
  58:./Src/main.c  **** /* Private user code ---------------------------------------------------------*/
  59:./Src/main.c  **** /* USER CODE BEGIN 0 */
  60:./Src/main.c  **** 
  61:./Src/main.c  **** /* USER CODE END 0 */
  62:./Src/main.c  **** 
  63:./Src/main.c  **** /**
  64:./Src/main.c  ****  * @brief  The application entry point.
  65:./Src/main.c  ****  * @retval int
  66:./Src/main.c  ****  */
  67:./Src/main.c  **** int main(void) {
 284              		.loc 3 67 16
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 16
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
 292 0002 84B0     		sub	sp, sp, #16
 293              		.cfi_def_cfa_offset 24
 294 0004 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
  68:./Src/main.c  ****   /* USER CODE BEGIN 1 */
  69:./Src/main.c  ****   int a, b, c;
  70:./Src/main.c  ****   a = 1;
 296              		.loc 3 70 5
 297 0006 0123     		movs	r3, #1
 298 0008 FB60     		str	r3, [r7, #12]
  71:./Src/main.c  ****   b = 2;
 299              		.loc 3 71 5
 300 000a 0223     		movs	r3, #2
 301 000c BB60     		str	r3, [r7, #8]
  72:./Src/main.c  ****   c = a + b;
 302              		.loc 3 72 5
 303 000e FA68     		ldr	r2, [r7, #12]
 304 0010 BB68     		ldr	r3, [r7, #8]
 305 0012 1344     		add	r3, r3, r2
 306 0014 7B60     		str	r3, [r7, #4]
  73:./Src/main.c  ****   c += c;
 307              		.loc 3 73 5
 308 0016 7B68     		ldr	r3, [r7, #4]
 309 0018 5B00     		lsls	r3, r3, #1
 310 001a 7B60     		str	r3, [r7, #4]
  74:./Src/main.c  ****   /* USER CODE END 1 */
  75:./Src/main.c  **** 
  76:./Src/main.c  ****   /* MPU
  77:./Src/main.c  ****          Configuration--------------------------------------------------------*/
  78:./Src/main.c  ****   MPU_Config();
 311              		.loc 3 78 3
ARM GAS  /tmp/ccVDAMpJ.s 			page 61


 312 001c FFF7FEFF 		bl	MPU_Config
  79:./Src/main.c  **** 
  80:./Src/main.c  ****   /* Enable I-Cache---------------------------------------------------------*/
  81:./Src/main.c  ****   SCB_EnableICache();
 313              		.loc 3 81 3
 314 0020 FFF7FEFF 		bl	SCB_EnableICache
  82:./Src/main.c  **** 
  83:./Src/main.c  ****   /* Enable D-Cache---------------------------------------------------------*/
  84:./Src/main.c  ****   SCB_EnableDCache();
 315              		.loc 3 84 3
 316 0024 FFF7FEFF 		bl	SCB_EnableDCache
  85:./Src/main.c  **** 
  86:./Src/main.c  ****   /* MCU Configuration--------------------------------------------------------*/
  87:./Src/main.c  **** 
  88:./Src/main.c  ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  89:./Src/main.c  ****    */
  90:./Src/main.c  ****   HAL_Init();
 317              		.loc 3 90 3
 318 0028 FFF7FEFF 		bl	HAL_Init
  91:./Src/main.c  **** 
  92:./Src/main.c  ****   /* USER CODE BEGIN Init */
  93:./Src/main.c  **** 
  94:./Src/main.c  ****   /* USER CODE END Init */
  95:./Src/main.c  **** 
  96:./Src/main.c  ****   /* Configure the system clock */
  97:./Src/main.c  ****   SystemClock_Config();
 319              		.loc 3 97 3
 320 002c FFF7FEFF 		bl	SystemClock_Config
  98:./Src/main.c  **** 
  99:./Src/main.c  ****   /* USER CODE BEGIN SysInit */
 100:./Src/main.c  **** 
 101:./Src/main.c  ****   /* USER CODE END SysInit */
 102:./Src/main.c  **** 
 103:./Src/main.c  ****   /* Initialize all configured peripherals */
 104:./Src/main.c  ****   MX_GPIO_Init();
 321              		.loc 3 104 3
 322 0030 FFF7FEFF 		bl	MX_GPIO_Init
 323              	.L10:
 105:./Src/main.c  ****   /* USER CODE BEGIN 2 */
 106:./Src/main.c  **** 
 107:./Src/main.c  ****   /* USER CODE END 2 */
 108:./Src/main.c  **** 
 109:./Src/main.c  ****   /* Infinite loop */
 110:./Src/main.c  ****   /* USER CODE BEGIN WHILE */
 111:./Src/main.c  ****   while (1) {
 324              		.loc 3 111 9 discriminator 1
 325 0034 FEE7     		b	.L10
 326              		.cfi_endproc
 327              	.LFE134:
 329              		.section	.text.SystemClock_Config,"ax",%progbits
 330              		.align	1
 331              		.global	SystemClock_Config
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu fpv5-d16
 337              	SystemClock_Config:
ARM GAS  /tmp/ccVDAMpJ.s 			page 62


 338              	.LFB135:
 112:./Src/main.c  ****     /* USER CODE END WHILE */
 113:./Src/main.c  **** 
 114:./Src/main.c  ****     /* USER CODE BEGIN 3 */
 115:./Src/main.c  ****   }
 116:./Src/main.c  ****   /* USER CODE END 3 */
 117:./Src/main.c  **** }
 118:./Src/main.c  **** 
 119:./Src/main.c  **** /**
 120:./Src/main.c  ****  * @brief System Clock Configuration
 121:./Src/main.c  ****  * @retval None
 122:./Src/main.c  ****  */
 123:./Src/main.c  **** void SystemClock_Config(void) {
 339              		.loc 3 123 31
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 112
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 9CB0     		sub	sp, sp, #112
 348              		.cfi_def_cfa_offset 120
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 124:./Src/main.c  ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 351              		.loc 3 124 22
 352 0006 07F12403 		add	r3, r7, #36
 353 000a 4C22     		movs	r2, #76
 354 000c 0021     		movs	r1, #0
 355 000e 1846     		mov	r0, r3
 356 0010 FFF7FEFF 		bl	memset
 125:./Src/main.c  ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 357              		.loc 3 125 22
 358 0014 3B1D     		adds	r3, r7, #4
 359 0016 2022     		movs	r2, #32
 360 0018 0021     		movs	r1, #0
 361 001a 1846     		mov	r0, r3
 362 001c FFF7FEFF 		bl	memset
 126:./Src/main.c  **** 
 127:./Src/main.c  ****   /** Supply configuration update enable
 128:./Src/main.c  ****    */
 129:./Src/main.c  ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 363              		.loc 3 129 3
 364 0020 0220     		movs	r0, #2
 365 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 366              	.LBB42:
 130:./Src/main.c  ****   /** Configure the main internal regulator output voltage
 131:./Src/main.c  ****    */
 132:./Src/main.c  ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 367              		.loc 3 132 3
 368 0026 0023     		movs	r3, #0
 369 0028 3B60     		str	r3, [r7]
 370 002a 284B     		ldr	r3, .L16
 371 002c DB6A     		ldr	r3, [r3, #44]
 372 002e 274A     		ldr	r2, .L16
 373 0030 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccVDAMpJ.s 			page 63


 374 0034 D362     		str	r3, [r2, #44]
 375 0036 254B     		ldr	r3, .L16
 376 0038 DB6A     		ldr	r3, [r3, #44]
 377 003a 03F00103 		and	r3, r3, #1
 378 003e 3B60     		str	r3, [r7]
 379 0040 234B     		ldr	r3, .L16+4
 380 0042 9B69     		ldr	r3, [r3, #24]
 381 0044 23F44043 		bic	r3, r3, #49152
 382 0048 214A     		ldr	r2, .L16+4
 383 004a 43F48043 		orr	r3, r3, #16384
 384 004e 9361     		str	r3, [r2, #24]
 385 0050 1F4B     		ldr	r3, .L16+4
 386 0052 9B69     		ldr	r3, [r3, #24]
 387 0054 03F44043 		and	r3, r3, #49152
 388 0058 3B60     		str	r3, [r7]
 389 005a 3B68     		ldr	r3, [r7]
 390              	.LBE42:
 133:./Src/main.c  **** 
 134:./Src/main.c  ****   while (!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {
 391              		.loc 3 134 9
 392 005c 00BF     		nop
 393              	.L12:
 394              		.loc 3 134 11 discriminator 1
 395 005e 1C4B     		ldr	r3, .L16+4
 396 0060 9B69     		ldr	r3, [r3, #24]
 397 0062 03F40053 		and	r3, r3, #8192
 398              		.loc 3 134 9 discriminator 1
 399 0066 B3F5005F 		cmp	r3, #8192
 400 006a F8D1     		bne	.L12
 135:./Src/main.c  ****   }
 136:./Src/main.c  ****   /** Initializes the CPU, AHB and APB busses clocks
 137:./Src/main.c  ****    */
 138:./Src/main.c  ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 401              		.loc 3 138 36
 402 006c 0223     		movs	r3, #2
 403 006e 7B62     		str	r3, [r7, #36]
 139:./Src/main.c  ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 404              		.loc 3 139 30
 405 0070 0123     		movs	r3, #1
 406 0072 3B63     		str	r3, [r7, #48]
 140:./Src/main.c  ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 407              		.loc 3 140 41
 408 0074 2023     		movs	r3, #32
 409 0076 7B63     		str	r3, [r7, #52]
 141:./Src/main.c  ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 410              		.loc 3 141 34
 411 0078 0023     		movs	r3, #0
 412 007a BB64     		str	r3, [r7, #72]
 142:./Src/main.c  ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 413              		.loc 3 142 7
 414 007c 07F12403 		add	r3, r7, #36
 415 0080 1846     		mov	r0, r3
 416 0082 FFF7FEFF 		bl	HAL_RCC_OscConfig
 417 0086 0346     		mov	r3, r0
 418              		.loc 3 142 6
 419 0088 002B     		cmp	r3, #0
 420 008a 01D0     		beq	.L13
ARM GAS  /tmp/ccVDAMpJ.s 			page 64


 143:./Src/main.c  ****     Error_Handler();
 421              		.loc 3 143 5
 422 008c FFF7FEFF 		bl	Error_Handler
 423              	.L13:
 144:./Src/main.c  ****   }
 145:./Src/main.c  ****   /** Initializes the CPU, AHB and APB busses clocks
 146:./Src/main.c  ****    */
 147:./Src/main.c  ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 424              		.loc 3 147 31
 425 0090 3F23     		movs	r3, #63
 426 0092 7B60     		str	r3, [r7, #4]
 148:./Src/main.c  ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2 |
 149:./Src/main.c  ****                                 RCC_CLOCKTYPE_D3PCLK1 | RCC_CLOCKTYPE_D1PCLK1;
 150:./Src/main.c  ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 427              		.loc 3 150 34
 428 0094 0023     		movs	r3, #0
 429 0096 BB60     		str	r3, [r7, #8]
 151:./Src/main.c  ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 430              		.loc 3 151 35
 431 0098 0023     		movs	r3, #0
 432 009a FB60     		str	r3, [r7, #12]
 152:./Src/main.c  ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 433              		.loc 3 152 35
 434 009c 0023     		movs	r3, #0
 435 009e 3B61     		str	r3, [r7, #16]
 153:./Src/main.c  ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 436              		.loc 3 153 36
 437 00a0 0023     		movs	r3, #0
 438 00a2 7B61     		str	r3, [r7, #20]
 154:./Src/main.c  ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 439              		.loc 3 154 36
 440 00a4 0023     		movs	r3, #0
 441 00a6 BB61     		str	r3, [r7, #24]
 155:./Src/main.c  ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 442              		.loc 3 155 36
 443 00a8 0023     		movs	r3, #0
 444 00aa FB61     		str	r3, [r7, #28]
 156:./Src/main.c  ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 445              		.loc 3 156 36
 446 00ac 0023     		movs	r3, #0
 447 00ae 3B62     		str	r3, [r7, #32]
 157:./Src/main.c  **** 
 158:./Src/main.c  ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 448              		.loc 3 158 7
 449 00b0 3B1D     		adds	r3, r7, #4
 450 00b2 0021     		movs	r1, #0
 451 00b4 1846     		mov	r0, r3
 452 00b6 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 453 00ba 0346     		mov	r3, r0
 454              		.loc 3 158 6
 455 00bc 002B     		cmp	r3, #0
 456 00be 01D0     		beq	.L15
 159:./Src/main.c  ****     Error_Handler();
 457              		.loc 3 159 5
 458 00c0 FFF7FEFF 		bl	Error_Handler
 459              	.L15:
 160:./Src/main.c  ****   }
ARM GAS  /tmp/ccVDAMpJ.s 			page 65


 161:./Src/main.c  **** }
 460              		.loc 3 161 1
 461 00c4 00BF     		nop
 462 00c6 7037     		adds	r7, r7, #112
 463              		.cfi_def_cfa_offset 8
 464 00c8 BD46     		mov	sp, r7
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 00ca 80BD     		pop	{r7, pc}
 468              	.L17:
 469              		.align	2
 470              	.L16:
 471 00cc 00040058 		.word	1476396032
 472 00d0 00480258 		.word	1476544512
 473              		.cfi_endproc
 474              	.LFE135:
 476              		.section	.text.MX_GPIO_Init,"ax",%progbits
 477              		.align	1
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv5-d16
 483              	MX_GPIO_Init:
 484              	.LFB136:
 162:./Src/main.c  **** 
 163:./Src/main.c  **** /**
 164:./Src/main.c  ****  * @brief GPIO Initialization Function
 165:./Src/main.c  ****  * @param None
 166:./Src/main.c  ****  * @retval None
 167:./Src/main.c  ****  */
 168:./Src/main.c  **** static void MX_GPIO_Init(void) {
 485              		.loc 3 168 32
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 64
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 90B0     		sub	sp, sp, #64
 494              		.cfi_def_cfa_offset 72
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 169:./Src/main.c  ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 497              		.loc 3 169 20
 498 0006 07F12C03 		add	r3, r7, #44
 499 000a 0022     		movs	r2, #0
 500 000c 1A60     		str	r2, [r3]
 501 000e 5A60     		str	r2, [r3, #4]
 502 0010 9A60     		str	r2, [r3, #8]
 503 0012 DA60     		str	r2, [r3, #12]
 504 0014 1A61     		str	r2, [r3, #16]
 505              	.LBB43:
 170:./Src/main.c  **** 
 171:./Src/main.c  ****   /* GPIO Ports Clock Enable */
 172:./Src/main.c  ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 506              		.loc 3 172 3
ARM GAS  /tmp/ccVDAMpJ.s 			page 66


 507 0016 9B4B     		ldr	r3, .L19
 508 0018 D3F8E030 		ldr	r3, [r3, #224]
 509 001c 994A     		ldr	r2, .L19
 510 001e 43F48073 		orr	r3, r3, #256
 511 0022 C2F8E030 		str	r3, [r2, #224]
 512 0026 974B     		ldr	r3, .L19
 513 0028 D3F8E030 		ldr	r3, [r3, #224]
 514 002c 03F48073 		and	r3, r3, #256
 515 0030 BB62     		str	r3, [r7, #40]
 516 0032 BB6A     		ldr	r3, [r7, #40]
 517              	.LBE43:
 518              	.LBB44:
 173:./Src/main.c  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 519              		.loc 3 173 3
 520 0034 934B     		ldr	r3, .L19
 521 0036 D3F8E030 		ldr	r3, [r3, #224]
 522 003a 924A     		ldr	r2, .L19
 523 003c 43F00203 		orr	r3, r3, #2
 524 0040 C2F8E030 		str	r3, [r2, #224]
 525 0044 8F4B     		ldr	r3, .L19
 526 0046 D3F8E030 		ldr	r3, [r3, #224]
 527 004a 03F00203 		and	r3, r3, #2
 528 004e 7B62     		str	r3, [r7, #36]
 529 0050 7B6A     		ldr	r3, [r7, #36]
 530              	.LBE44:
 531              	.LBB45:
 174:./Src/main.c  ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 532              		.loc 3 174 3
 533 0052 8C4B     		ldr	r3, .L19
 534 0054 D3F8E030 		ldr	r3, [r3, #224]
 535 0058 8A4A     		ldr	r2, .L19
 536 005a 43F48063 		orr	r3, r3, #1024
 537 005e C2F8E030 		str	r3, [r2, #224]
 538 0062 884B     		ldr	r3, .L19
 539 0064 D3F8E030 		ldr	r3, [r3, #224]
 540 0068 03F48063 		and	r3, r3, #1024
 541 006c 3B62     		str	r3, [r7, #32]
 542 006e 3B6A     		ldr	r3, [r7, #32]
 543              	.LBE45:
 544              	.LBB46:
 175:./Src/main.c  ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 545              		.loc 3 175 3
 546 0070 844B     		ldr	r3, .L19
 547 0072 D3F8E030 		ldr	r3, [r3, #224]
 548 0076 834A     		ldr	r2, .L19
 549 0078 43F04003 		orr	r3, r3, #64
 550 007c C2F8E030 		str	r3, [r2, #224]
 551 0080 804B     		ldr	r3, .L19
 552 0082 D3F8E030 		ldr	r3, [r3, #224]
 553 0086 03F04003 		and	r3, r3, #64
 554 008a FB61     		str	r3, [r7, #28]
 555 008c FB69     		ldr	r3, [r7, #28]
 556              	.LBE46:
 557              	.LBB47:
 176:./Src/main.c  ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 558              		.loc 3 176 3
 559 008e 7D4B     		ldr	r3, .L19
ARM GAS  /tmp/ccVDAMpJ.s 			page 67


 560 0090 D3F8E030 		ldr	r3, [r3, #224]
 561 0094 7B4A     		ldr	r2, .L19
 562 0096 43F00803 		orr	r3, r3, #8
 563 009a C2F8E030 		str	r3, [r2, #224]
 564 009e 794B     		ldr	r3, .L19
 565 00a0 D3F8E030 		ldr	r3, [r3, #224]
 566 00a4 03F00803 		and	r3, r3, #8
 567 00a8 BB61     		str	r3, [r7, #24]
 568 00aa BB69     		ldr	r3, [r7, #24]
 569              	.LBE47:
 570              	.LBB48:
 177:./Src/main.c  ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 571              		.loc 3 177 3
 572 00ac 754B     		ldr	r3, .L19
 573 00ae D3F8E030 		ldr	r3, [r3, #224]
 574 00b2 744A     		ldr	r2, .L19
 575 00b4 43F00403 		orr	r3, r3, #4
 576 00b8 C2F8E030 		str	r3, [r2, #224]
 577 00bc 714B     		ldr	r3, .L19
 578 00be D3F8E030 		ldr	r3, [r3, #224]
 579 00c2 03F00403 		and	r3, r3, #4
 580 00c6 7B61     		str	r3, [r7, #20]
 581 00c8 7B69     		ldr	r3, [r7, #20]
 582              	.LBE48:
 583              	.LBB49:
 178:./Src/main.c  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 584              		.loc 3 178 3
 585 00ca 6E4B     		ldr	r3, .L19
 586 00cc D3F8E030 		ldr	r3, [r3, #224]
 587 00d0 6C4A     		ldr	r2, .L19
 588 00d2 43F00103 		orr	r3, r3, #1
 589 00d6 C2F8E030 		str	r3, [r2, #224]
 590 00da 6A4B     		ldr	r3, .L19
 591 00dc D3F8E030 		ldr	r3, [r3, #224]
 592 00e0 03F00103 		and	r3, r3, #1
 593 00e4 3B61     		str	r3, [r7, #16]
 594 00e6 3B69     		ldr	r3, [r7, #16]
 595              	.LBE49:
 596              	.LBB50:
 179:./Src/main.c  ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 597              		.loc 3 179 3
 598 00e8 664B     		ldr	r3, .L19
 599 00ea D3F8E030 		ldr	r3, [r3, #224]
 600 00ee 654A     		ldr	r2, .L19
 601 00f0 43F01003 		orr	r3, r3, #16
 602 00f4 C2F8E030 		str	r3, [r2, #224]
 603 00f8 624B     		ldr	r3, .L19
 604 00fa D3F8E030 		ldr	r3, [r3, #224]
 605 00fe 03F01003 		and	r3, r3, #16
 606 0102 FB60     		str	r3, [r7, #12]
 607 0104 FB68     		ldr	r3, [r7, #12]
 608              	.LBE50:
 609              	.LBB51:
 180:./Src/main.c  ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 610              		.loc 3 180 3
 611 0106 5F4B     		ldr	r3, .L19
 612 0108 D3F8E030 		ldr	r3, [r3, #224]
ARM GAS  /tmp/ccVDAMpJ.s 			page 68


 613 010c 5D4A     		ldr	r2, .L19
 614 010e 43F40073 		orr	r3, r3, #512
 615 0112 C2F8E030 		str	r3, [r2, #224]
 616 0116 5B4B     		ldr	r3, .L19
 617 0118 D3F8E030 		ldr	r3, [r3, #224]
 618 011c 03F40073 		and	r3, r3, #512
 619 0120 BB60     		str	r3, [r7, #8]
 620 0122 BB68     		ldr	r3, [r7, #8]
 621              	.LBE51:
 622              	.LBB52:
 181:./Src/main.c  ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 623              		.loc 3 181 3
 624 0124 574B     		ldr	r3, .L19
 625 0126 D3F8E030 		ldr	r3, [r3, #224]
 626 012a 564A     		ldr	r2, .L19
 627 012c 43F08003 		orr	r3, r3, #128
 628 0130 C2F8E030 		str	r3, [r2, #224]
 629 0134 534B     		ldr	r3, .L19
 630 0136 D3F8E030 		ldr	r3, [r3, #224]
 631 013a 03F08003 		and	r3, r3, #128
 632 013e 7B60     		str	r3, [r7, #4]
 633 0140 7B68     		ldr	r3, [r7, #4]
 634              	.LBE52:
 635              	.LBB53:
 182:./Src/main.c  ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 636              		.loc 3 182 3
 637 0142 504B     		ldr	r3, .L19
 638 0144 D3F8E030 		ldr	r3, [r3, #224]
 639 0148 4E4A     		ldr	r2, .L19
 640 014a 43F02003 		orr	r3, r3, #32
 641 014e C2F8E030 		str	r3, [r2, #224]
 642 0152 4C4B     		ldr	r3, .L19
 643 0154 D3F8E030 		ldr	r3, [r3, #224]
 644 0158 03F02003 		and	r3, r3, #32
 645 015c 3B60     		str	r3, [r7]
 646 015e 3B68     		ldr	r3, [r7]
 647              	.LBE53:
 183:./Src/main.c  **** 
 184:./Src/main.c  ****   /*Configure GPIO pins : PI6 PI5 PI4 PI1
 185:./Src/main.c  ****                            PI0 PI7 PI2 PI3
 186:./Src/main.c  ****                            PI9 PI8 PI10 PI11
 187:./Src/main.c  ****                            PI12 PI13 PI14 PI15 */
 188:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_6 | GPIO_PIN_5 | GPIO_PIN_4 | GPIO_PIN_1 |
 648              		.loc 3 188 23
 649 0160 4FF6FF73 		movw	r3, #65535
 650 0164 FB62     		str	r3, [r7, #44]
 189:./Src/main.c  ****                         GPIO_PIN_0 | GPIO_PIN_7 | GPIO_PIN_2 | GPIO_PIN_3 |
 190:./Src/main.c  ****                         GPIO_PIN_9 | GPIO_PIN_8 | GPIO_PIN_10 | GPIO_PIN_11 |
 191:./Src/main.c  ****                         GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 192:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 651              		.loc 3 192 24
 652 0166 0323     		movs	r3, #3
 653 0168 3B63     		str	r3, [r7, #48]
 193:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 654              		.loc 3 193 24
 655 016a 0023     		movs	r3, #0
 656 016c 7B63     		str	r3, [r7, #52]
ARM GAS  /tmp/ccVDAMpJ.s 			page 69


 194:./Src/main.c  ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 657              		.loc 3 194 3
 658 016e 07F12C03 		add	r3, r7, #44
 659 0172 1946     		mov	r1, r3
 660 0174 4448     		ldr	r0, .L19+4
 661 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 195:./Src/main.c  **** 
 196:./Src/main.c  ****   /*Configure GPIO pins : PB5 PB6 PB4 PB7
 197:./Src/main.c  ****                            PB9 PB8 PB10 PB11
 198:./Src/main.c  ****                            PB2 PB1 PB12 PB15
 199:./Src/main.c  ****                            PB0 PB13 PB14 */
 200:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_4 | GPIO_PIN_7 |
 662              		.loc 3 200 23
 663 017a 4FF6F773 		movw	r3, #65527
 664 017e FB62     		str	r3, [r7, #44]
 201:./Src/main.c  ****                         GPIO_PIN_9 | GPIO_PIN_8 | GPIO_PIN_10 | GPIO_PIN_11 |
 202:./Src/main.c  ****                         GPIO_PIN_2 | GPIO_PIN_1 | GPIO_PIN_12 | GPIO_PIN_15 |
 203:./Src/main.c  ****                         GPIO_PIN_0 | GPIO_PIN_13 | GPIO_PIN_14;
 204:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 665              		.loc 3 204 24
 666 0180 0323     		movs	r3, #3
 667 0182 3B63     		str	r3, [r7, #48]
 205:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 668              		.loc 3 205 24
 669 0184 0023     		movs	r3, #0
 670 0186 7B63     		str	r3, [r7, #52]
 206:./Src/main.c  ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 671              		.loc 3 206 3
 672 0188 07F12C03 		add	r3, r7, #44
 673 018c 1946     		mov	r1, r3
 674 018e 3F48     		ldr	r0, .L19+8
 675 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 207:./Src/main.c  **** 
 208:./Src/main.c  ****   /*Configure GPIO pins : PK5 PK4 PK6 PK3
 209:./Src/main.c  ****                            PK7 PK2 PK0 PK1 */
 210:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_5 | GPIO_PIN_4 | GPIO_PIN_6 | GPIO_PIN_3 |
 676              		.loc 3 210 23
 677 0194 FF23     		movs	r3, #255
 678 0196 FB62     		str	r3, [r7, #44]
 211:./Src/main.c  ****                         GPIO_PIN_7 | GPIO_PIN_2 | GPIO_PIN_0 | GPIO_PIN_1;
 212:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 679              		.loc 3 212 24
 680 0198 0323     		movs	r3, #3
 681 019a 3B63     		str	r3, [r7, #48]
 213:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 682              		.loc 3 213 24
 683 019c 0023     		movs	r3, #0
 684 019e 7B63     		str	r3, [r7, #52]
 214:./Src/main.c  ****   HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 685              		.loc 3 214 3
 686 01a0 07F12C03 		add	r3, r7, #44
 687 01a4 1946     		mov	r1, r3
 688 01a6 3A48     		ldr	r0, .L19+12
 689 01a8 FFF7FEFF 		bl	HAL_GPIO_Init
 215:./Src/main.c  **** 
 216:./Src/main.c  ****   /*Configure GPIO pins : PG10 PG9 PG11 PG12
 217:./Src/main.c  ****                            PG15 PG14 PG13 PG8
ARM GAS  /tmp/ccVDAMpJ.s 			page 70


 218:./Src/main.c  ****                            PG7 PG5 PG6 PG4
 219:./Src/main.c  ****                            PG3 PG2 PG0 PG1 */
 220:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_10 | GPIO_PIN_9 | GPIO_PIN_11 | GPIO_PIN_12 |
 690              		.loc 3 220 23
 691 01ac 4FF6FF73 		movw	r3, #65535
 692 01b0 FB62     		str	r3, [r7, #44]
 221:./Src/main.c  ****                         GPIO_PIN_15 | GPIO_PIN_14 | GPIO_PIN_13 | GPIO_PIN_8 |
 222:./Src/main.c  ****                         GPIO_PIN_7 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_4 |
 223:./Src/main.c  ****                         GPIO_PIN_3 | GPIO_PIN_2 | GPIO_PIN_0 | GPIO_PIN_1;
 224:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 693              		.loc 3 224 24
 694 01b2 0323     		movs	r3, #3
 695 01b4 3B63     		str	r3, [r7, #48]
 225:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 696              		.loc 3 225 24
 697 01b6 0023     		movs	r3, #0
 698 01b8 7B63     		str	r3, [r7, #52]
 226:./Src/main.c  ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 699              		.loc 3 226 3
 700 01ba 07F12C03 		add	r3, r7, #44
 701 01be 1946     		mov	r1, r3
 702 01c0 3448     		ldr	r0, .L19+16
 703 01c2 FFF7FEFF 		bl	HAL_GPIO_Init
 227:./Src/main.c  **** 
 228:./Src/main.c  ****   /*Configure GPIO pins : PD5 PD4 PD6 PD3
 229:./Src/main.c  ****                            PD7 PD2 PD0 PD1
 230:./Src/main.c  ****                            PD15 PD14 PD11 PD12
 231:./Src/main.c  ****                            PD13 PD10 PD9 PD8 */
 232:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_5 | GPIO_PIN_4 | GPIO_PIN_6 | GPIO_PIN_3 |
 704              		.loc 3 232 23
 705 01c6 4FF6FF73 		movw	r3, #65535
 706 01ca FB62     		str	r3, [r7, #44]
 233:./Src/main.c  ****                         GPIO_PIN_7 | GPIO_PIN_2 | GPIO_PIN_0 | GPIO_PIN_1 |
 234:./Src/main.c  ****                         GPIO_PIN_15 | GPIO_PIN_14 | GPIO_PIN_11 | GPIO_PIN_12 |
 235:./Src/main.c  ****                         GPIO_PIN_13 | GPIO_PIN_10 | GPIO_PIN_9 | GPIO_PIN_8;
 236:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 707              		.loc 3 236 24
 708 01cc 0323     		movs	r3, #3
 709 01ce 3B63     		str	r3, [r7, #48]
 237:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 710              		.loc 3 237 24
 711 01d0 0023     		movs	r3, #0
 712 01d2 7B63     		str	r3, [r7, #52]
 238:./Src/main.c  ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 713              		.loc 3 238 3
 714 01d4 07F12C03 		add	r3, r7, #44
 715 01d8 1946     		mov	r1, r3
 716 01da 2F48     		ldr	r0, .L19+20
 717 01dc FFF7FEFF 		bl	HAL_GPIO_Init
 239:./Src/main.c  **** 
 240:./Src/main.c  ****   /*Configure GPIO pins : PC10 PC11 PC13 PC8
 241:./Src/main.c  ****                            PC9 PC7 PC6 PC0
 242:./Src/main.c  ****                            PC1 PC2 PC3 PC4
 243:./Src/main.c  ****                            PC5 */
 244:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_13 | GPIO_PIN_8 |
 718              		.loc 3 244 23
 719 01e0 42F6FF73 		movw	r3, #12287
ARM GAS  /tmp/ccVDAMpJ.s 			page 71


 720 01e4 FB62     		str	r3, [r7, #44]
 245:./Src/main.c  ****                         GPIO_PIN_9 | GPIO_PIN_7 | GPIO_PIN_6 | GPIO_PIN_0 |
 246:./Src/main.c  ****                         GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |
 247:./Src/main.c  ****                         GPIO_PIN_5;
 248:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 721              		.loc 3 248 24
 722 01e6 0323     		movs	r3, #3
 723 01e8 3B63     		str	r3, [r7, #48]
 249:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 724              		.loc 3 249 24
 725 01ea 0023     		movs	r3, #0
 726 01ec 7B63     		str	r3, [r7, #52]
 250:./Src/main.c  ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 727              		.loc 3 250 3
 728 01ee 07F12C03 		add	r3, r7, #44
 729 01f2 1946     		mov	r1, r3
 730 01f4 2948     		ldr	r0, .L19+24
 731 01f6 FFF7FEFF 		bl	HAL_GPIO_Init
 251:./Src/main.c  **** 
 252:./Src/main.c  ****   /*Configure GPIO pins : PE1 PE0 PE6 PE10
 253:./Src/main.c  ****                            PE9 PE11 PE12 PE15
 254:./Src/main.c  ****                            PE8 PE13 PE7 PE14 */
 255:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_0 | GPIO_PIN_6 | GPIO_PIN_10 |
 732              		.loc 3 255 23
 733 01fa 4FF6C373 		movw	r3, #65475
 734 01fe FB62     		str	r3, [r7, #44]
 256:./Src/main.c  ****                         GPIO_PIN_9 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_15 |
 257:./Src/main.c  ****                         GPIO_PIN_8 | GPIO_PIN_13 | GPIO_PIN_7 | GPIO_PIN_14;
 258:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 735              		.loc 3 258 24
 736 0200 0323     		movs	r3, #3
 737 0202 3B63     		str	r3, [r7, #48]
 259:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 738              		.loc 3 259 24
 739 0204 0023     		movs	r3, #0
 740 0206 7B63     		str	r3, [r7, #52]
 260:./Src/main.c  ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 741              		.loc 3 260 3
 742 0208 07F12C03 		add	r3, r7, #44
 743 020c 1946     		mov	r1, r3
 744 020e 2448     		ldr	r0, .L19+28
 745 0210 FFF7FEFF 		bl	HAL_GPIO_Init
 261:./Src/main.c  **** 
 262:./Src/main.c  ****   /*Configure GPIO pins : PJ15 PJ14 PJ12 PJ13
 263:./Src/main.c  ****                            PJ11 PJ10 PJ9 PJ0
 264:./Src/main.c  ****                            PJ8 PJ7 PJ6 PJ1
 265:./Src/main.c  ****                            PJ5 PJ2 PJ3 PJ4 */
 266:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_15 | GPIO_PIN_14 | GPIO_PIN_12 | GPIO_PIN_13 |
 746              		.loc 3 266 23
 747 0214 4FF6FF73 		movw	r3, #65535
 748 0218 FB62     		str	r3, [r7, #44]
 267:./Src/main.c  ****                         GPIO_PIN_11 | GPIO_PIN_10 | GPIO_PIN_9 | GPIO_PIN_0 |
 268:./Src/main.c  ****                         GPIO_PIN_8 | GPIO_PIN_7 | GPIO_PIN_6 | GPIO_PIN_1 |
 269:./Src/main.c  ****                         GPIO_PIN_5 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4;
 270:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 749              		.loc 3 270 24
 750 021a 0323     		movs	r3, #3
ARM GAS  /tmp/ccVDAMpJ.s 			page 72


 751 021c 3B63     		str	r3, [r7, #48]
 271:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 752              		.loc 3 271 24
 753 021e 0023     		movs	r3, #0
 754 0220 7B63     		str	r3, [r7, #52]
 272:./Src/main.c  ****   HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 755              		.loc 3 272 3
 756 0222 07F12C03 		add	r3, r7, #44
 757 0226 1946     		mov	r1, r3
 758 0228 1E48     		ldr	r0, .L19+32
 759 022a FFF7FEFF 		bl	HAL_GPIO_Init
 273:./Src/main.c  **** 
 274:./Src/main.c  ****   /*Configure GPIO pins : PH15 PH14 PH13 PH2
 275:./Src/main.c  ****                            PH3 PH4 PH5 PH10
 276:./Src/main.c  ****                            PH11 PH9 PH12 PH6
 277:./Src/main.c  ****                            PH8 PH7 */
 278:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_15 | GPIO_PIN_14 | GPIO_PIN_13 | GPIO_PIN_2 |
 760              		.loc 3 278 23
 761 022e 4FF6FC73 		movw	r3, #65532
 762 0232 FB62     		str	r3, [r7, #44]
 279:./Src/main.c  ****                         GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_10 |
 280:./Src/main.c  ****                         GPIO_PIN_11 | GPIO_PIN_9 | GPIO_PIN_12 | GPIO_PIN_6 |
 281:./Src/main.c  ****                         GPIO_PIN_8 | GPIO_PIN_7;
 282:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 763              		.loc 3 282 24
 764 0234 0323     		movs	r3, #3
 765 0236 3B63     		str	r3, [r7, #48]
 283:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 766              		.loc 3 283 24
 767 0238 0023     		movs	r3, #0
 768 023a 7B63     		str	r3, [r7, #52]
 284:./Src/main.c  ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 769              		.loc 3 284 3
 770 023c 07F12C03 		add	r3, r7, #44
 771 0240 1946     		mov	r1, r3
 772 0242 1948     		ldr	r0, .L19+36
 773 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 285:./Src/main.c  **** 
 286:./Src/main.c  ****   /*Configure GPIO pins : PA10 PA9 PA8 PA12
 287:./Src/main.c  ****                            PA11 PA2 PA1 PA0
 288:./Src/main.c  ****                            PA6 PA7 PA5 PA3
 289:./Src/main.c  ****                            PA4 */
 290:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_10 | GPIO_PIN_9 | GPIO_PIN_8 | GPIO_PIN_12 |
 774              		.loc 3 290 23
 775 0248 41F6FF73 		movw	r3, #8191
 776 024c FB62     		str	r3, [r7, #44]
 291:./Src/main.c  ****                         GPIO_PIN_11 | GPIO_PIN_2 | GPIO_PIN_1 | GPIO_PIN_0 |
 292:./Src/main.c  ****                         GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_5 | GPIO_PIN_3 |
 293:./Src/main.c  ****                         GPIO_PIN_4;
 294:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 777              		.loc 3 294 24
 778 024e 0323     		movs	r3, #3
 779 0250 3B63     		str	r3, [r7, #48]
 295:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 780              		.loc 3 295 24
 781 0252 0023     		movs	r3, #0
 782 0254 7B63     		str	r3, [r7, #52]
ARM GAS  /tmp/ccVDAMpJ.s 			page 73


 296:./Src/main.c  ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 783              		.loc 3 296 3
 784 0256 07F12C03 		add	r3, r7, #44
 785 025a 1946     		mov	r1, r3
 786 025c 1348     		ldr	r0, .L19+40
 787 025e FFF7FEFF 		bl	HAL_GPIO_Init
 297:./Src/main.c  **** 
 298:./Src/main.c  ****   /*Configure GPIO pins : PF2 PF1 PF0 PF3
 299:./Src/main.c  ****                            PF5 PF4 PF6 PF7
 300:./Src/main.c  ****                            PF8 PF10 PF9 PF13
 301:./Src/main.c  ****                            PF14 PF12 PF15 PF11 */
 302:./Src/main.c  ****   GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_1 | GPIO_PIN_0 | GPIO_PIN_3 |
 788              		.loc 3 302 23
 789 0262 4FF6FF73 		movw	r3, #65535
 790 0266 FB62     		str	r3, [r7, #44]
 303:./Src/main.c  ****                         GPIO_PIN_5 | GPIO_PIN_4 | GPIO_PIN_6 | GPIO_PIN_7 |
 304:./Src/main.c  ****                         GPIO_PIN_8 | GPIO_PIN_10 | GPIO_PIN_9 | GPIO_PIN_13 |
 305:./Src/main.c  ****                         GPIO_PIN_14 | GPIO_PIN_12 | GPIO_PIN_15 | GPIO_PIN_11;
 306:./Src/main.c  ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 791              		.loc 3 306 24
 792 0268 0323     		movs	r3, #3
 793 026a 3B63     		str	r3, [r7, #48]
 307:./Src/main.c  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 794              		.loc 3 307 24
 795 026c 0023     		movs	r3, #0
 796 026e 7B63     		str	r3, [r7, #52]
 308:./Src/main.c  ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 797              		.loc 3 308 3
 798 0270 07F12C03 		add	r3, r7, #44
 799 0274 1946     		mov	r1, r3
 800 0276 0E48     		ldr	r0, .L19+44
 801 0278 FFF7FEFF 		bl	HAL_GPIO_Init
 309:./Src/main.c  **** }
 802              		.loc 3 309 1
 803 027c 00BF     		nop
 804 027e 4037     		adds	r7, r7, #64
 805              		.cfi_def_cfa_offset 8
 806 0280 BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0282 80BD     		pop	{r7, pc}
 810              	.L20:
 811              		.align	2
 812              	.L19:
 813 0284 00440258 		.word	1476543488
 814 0288 00200258 		.word	1476534272
 815 028c 00040258 		.word	1476527104
 816 0290 00280258 		.word	1476536320
 817 0294 00180258 		.word	1476532224
 818 0298 000C0258 		.word	1476529152
 819 029c 00080258 		.word	1476528128
 820 02a0 00100258 		.word	1476530176
 821 02a4 00240258 		.word	1476535296
 822 02a8 001C0258 		.word	1476533248
 823 02ac 00000258 		.word	1476526080
 824 02b0 00140258 		.word	1476531200
 825              		.cfi_endproc
ARM GAS  /tmp/ccVDAMpJ.s 			page 74


 826              	.LFE136:
 828              		.section	.text.MPU_Config,"ax",%progbits
 829              		.align	1
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 833              		.fpu fpv5-d16
 835              	MPU_Config:
 836              	.LFB137:
 310:./Src/main.c  **** 
 311:./Src/main.c  **** /* USER CODE BEGIN 4 */
 312:./Src/main.c  **** 
 313:./Src/main.c  **** /* USER CODE END 4 */
 314:./Src/main.c  **** 
 315:./Src/main.c  **** /* MPU Configuration */
 316:./Src/main.c  **** 
 317:./Src/main.c  **** void MPU_Config(void) {
 837              		.loc 3 317 23
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 00AF     		add	r7, sp, #0
 846              		.cfi_def_cfa_register 7
 318:./Src/main.c  **** 
 319:./Src/main.c  ****   /* Disables the MPU */
 320:./Src/main.c  ****   HAL_MPU_Disable();
 847              		.loc 3 320 3
 848 0004 FFF7FEFF 		bl	HAL_MPU_Disable
 321:./Src/main.c  ****   /* Enables the MPU */
 322:./Src/main.c  ****   HAL_MPU_Enable(MPU_HARDFAULT_NMI);
 849              		.loc 3 322 3
 850 0008 0220     		movs	r0, #2
 851 000a FFF7FEFF 		bl	HAL_MPU_Enable
 323:./Src/main.c  **** }
 852              		.loc 3 323 1
 853 000e 00BF     		nop
 854 0010 80BD     		pop	{r7, pc}
 855              		.cfi_endproc
 856              	.LFE137:
 858              		.section	.text.Error_Handler,"ax",%progbits
 859              		.align	1
 860              		.global	Error_Handler
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv5-d16
 866              	Error_Handler:
 867              	.LFB138:
 324:./Src/main.c  **** 
 325:./Src/main.c  **** /**
 326:./Src/main.c  ****  * @brief  This function is executed in case of error occurrence.
 327:./Src/main.c  ****  * @retval None
 328:./Src/main.c  ****  */
ARM GAS  /tmp/ccVDAMpJ.s 			page 75


 329:./Src/main.c  **** void Error_Handler(void) {
 868              		.loc 3 329 26
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 330:./Src/main.c  ****   /* USER CODE BEGIN Error_Handler_Debug */
 331:./Src/main.c  ****   /* User can add his own implementation to report the HAL error return state */
 332:./Src/main.c  **** 
 333:./Src/main.c  ****   /* USER CODE END Error_Handler_Debug */
 334:./Src/main.c  **** }
 878              		.loc 3 334 1
 879 0004 00BF     		nop
 880 0006 BD46     		mov	sp, r7
 881              		.cfi_def_cfa_register 13
 882              		@ sp needed
 883 0008 5DF8047B 		ldr	r7, [sp], #4
 884              		.cfi_restore 7
 885              		.cfi_def_cfa_offset 0
 886 000c 7047     		bx	lr
 887              		.cfi_endproc
 888              	.LFE138:
 890              		.text
 891              	.Letext0:
 892              		.file 4 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/ma
 893              		.file 5 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 894              		.file 6 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 895              		.file 7 "./Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 896              		.file 8 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/lib/gcc/arm-none-eabi/8.
 897              		.file 9 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sy
 898              		.file 10 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 899              		.file 11 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/s
 900              		.file 12 "/mnt/d/GNU Tools ARM Embedded/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/m
 901              		.file 13 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 902              		.file 14 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 903              		.file 15 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 904              		.file 16 "./Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
ARM GAS  /tmp/ccVDAMpJ.s 			page 76


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccVDAMpJ.s:17     .text.SCB_EnableICache:0000000000000000 $t
     /tmp/ccVDAMpJ.s:24     .text.SCB_EnableICache:0000000000000000 SCB_EnableICache
     /tmp/ccVDAMpJ.s:127    .text.SCB_EnableICache:000000000000003c $d
     /tmp/ccVDAMpJ.s:132    .text.SCB_EnableDCache:0000000000000000 $t
     /tmp/ccVDAMpJ.s:138    .text.SCB_EnableDCache:0000000000000000 SCB_EnableDCache
     /tmp/ccVDAMpJ.s:269    .text.SCB_EnableDCache:000000000000007c $d
     /tmp/ccVDAMpJ.s:274    .text.main:0000000000000000 $t
     /tmp/ccVDAMpJ.s:281    .text.main:0000000000000000 main
     /tmp/ccVDAMpJ.s:835    .text.MPU_Config:0000000000000000 MPU_Config
     /tmp/ccVDAMpJ.s:337    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccVDAMpJ.s:483    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccVDAMpJ.s:330    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccVDAMpJ.s:866    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccVDAMpJ.s:471    .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccVDAMpJ.s:477    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccVDAMpJ.s:813    .text.MX_GPIO_Init:0000000000000284 $d
     /tmp/ccVDAMpJ.s:829    .text.MPU_Config:0000000000000000 $t
     /tmp/ccVDAMpJ.s:859    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
HAL_MPU_Disable
HAL_MPU_Enable
